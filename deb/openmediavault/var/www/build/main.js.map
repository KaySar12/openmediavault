{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/apply-config-panel/apply-config-panel.component.ts","./src/app/core/components/apply-config-panel/apply-config-panel.component.html","./src/app/core/components/breadcrumb/breadcrumb.component.ts","./src/app/core/components/breadcrumb/breadcrumb.component.html","./src/app/core/components/components.module.ts","./src/app/core/components/dashboard/dashboard-widget-chart/dashboard-widget-chart.component.ts","./src/app/core/components/dashboard/dashboard-widget-chart/dashboard-widget-chart.component.html","./src/app/core/components/dashboard/dashboard-widget-datatable/dashboard-widget-datatable.component.ts","./src/app/core/components/dashboard/dashboard-widget-datatable/dashboard-widget-datatable.component.html","./src/app/core/components/dashboard/dashboard-widget-filesystems-status/dashboard-widget-filesystems-status.component.ts","./src/app/core/components/dashboard/dashboard-widget-filesystems-status/dashboard-widget-filesystems-status.component.html","./src/app/core/components/dashboard/dashboard-widget-grid/dashboard-widget-grid.component.ts","./src/app/core/components/dashboard/dashboard-widget-grid/dashboard-widget-grid.component.html","./src/app/core/components/dashboard/dashboard-widget-rrd/dashboard-widget-rrd.component.ts","./src/app/core/components/dashboard/dashboard-widget-rrd/dashboard-widget-rrd.component.html","./src/app/core/components/dashboard/dashboard-widget-system-information/dashboard-widget-system-information.component.ts","./src/app/core/components/dashboard/dashboard-widget-system-information/dashboard-widget-system-information.component.html","./src/app/core/components/dashboard/dashboard-widget-text/dashboard-widget-text.component.ts","./src/app/core/components/dashboard/dashboard-widget-text/dashboard-widget-text.component.html","./src/app/core/components/dashboard/dashboard-widget-value/dashboard-widget-value.component.ts","./src/app/core/components/dashboard/dashboard-widget-value/dashboard-widget-value.component.html","./src/app/core/components/dashboard/dashboard-widget/dashboard-widget.component.ts","./src/app/core/components/dashboard/dashboard-widget/dashboard-widget.component.html","./src/app/core/components/dashboard/dashboard.module.ts","./src/app/core/components/green-rain/green-rain.component.ts","./src/app/core/components/green-rain/green-rain.component.html","./src/app/core/components/guru-meditation/guru-meditation.component.ts","./src/app/core/components/guru-meditation/guru-meditation.component.html","./src/app/core/components/intuition/abstract-page-component.ts","./src/app/core/components/intuition/datatable-page/datatable-page.component.ts","./src/app/core/components/intuition/datatable-page/datatable-page.component.html","./src/app/core/components/intuition/form-dialog/form-dialog.component.ts","./src/app/core/components/intuition/form-dialog/form-dialog.component.html","./src/app/core/components/intuition/form-page/form-page.component.ts","./src/app/core/components/intuition/form-page/form-page.component.html","./src/app/core/components/intuition/form/components/abstract-form-field-component.ts","./src/app/core/components/intuition/form/components/form-binary-unit-input/form-binary-unit-input.component.ts","./src/app/core/components/intuition/form/components/form-binary-unit-input/form-binary-unit-input.component.html","./src/app/core/components/intuition/form/components/form-button/form-button.component.ts","./src/app/core/components/intuition/form/components/form-button/form-button.component.html","./src/app/core/components/intuition/form/components/form-checkbox/form-checkbox.component.ts","./src/app/core/components/intuition/form/components/form-checkbox/form-checkbox.component.html","./src/app/core/components/intuition/form/components/form-code-editor/form-code-editor.component.ts","./src/app/core/components/intuition/form/components/form-code-editor/form-code-editor.component.html","./src/app/core/components/intuition/form/components/form-datatable/form-datatable.component.ts","./src/app/core/components/intuition/form/components/form-datatable/form-datatable.component.html","./src/app/core/components/intuition/form/components/form-datepicker/form-datepicker.component.ts","./src/app/core/components/intuition/form/components/form-datepicker/form-datepicker.component.html","./src/app/core/components/intuition/form/components/form-divider/form-divider.component.ts","./src/app/core/components/intuition/form/components/form-divider/form-divider.component.html","./src/app/core/components/intuition/form/components/form-file-input/form-file-input.component.ts","./src/app/core/components/intuition/form/components/form-file-input/form-file-input.component.html","./src/app/core/components/intuition/form/components/form-folderbrowser/form-folderbrowser.component.ts","./src/app/core/components/intuition/form/components/form-folderbrowser/form-folderbrowser.component.html","./src/app/core/components/intuition/form/components/form-hint/form-hint.component.ts","./src/app/core/components/intuition/form/components/form-hint/form-hint.component.html","./src/app/core/components/intuition/form/components/form-icon-button/form-icon-button.component.ts","./src/app/core/components/intuition/form/components/form-icon-button/form-icon-button.component.html","./src/app/core/components/intuition/form/components/form-number-input/form-number-input.component.ts","./src/app/core/components/intuition/form/components/form-number-input/form-number-input.component.html","./src/app/core/components/intuition/form/components/form-paragraph/form-paragraph.component.ts","./src/app/core/components/intuition/form/components/form-paragraph/form-paragraph.component.html","./src/app/core/components/intuition/form/components/form-password-input/form-password-input.component.ts","./src/app/core/components/intuition/form/components/form-password-input/form-password-input.component.html","./src/app/core/components/intuition/form/components/form-select/form-select.component.ts","./src/app/core/components/intuition/form/components/form-select/form-select.component.html","./src/app/core/components/intuition/form/components/form-sharedfolder-select/form-sharedfolder-select.component.ts","./src/app/core/components/intuition/form/components/form-sharedfolder-select/form-sharedfolder-select.component.html","./src/app/core/components/intuition/form/components/form-slider/form-slider.component.ts","./src/app/core/components/intuition/form/components/form-slider/form-slider.component.html","./src/app/core/components/intuition/form/components/form-sshcert-select/form-sshcert-select.component.ts","./src/app/core/components/intuition/form/components/form-sshcert-select/form-sshcert-select.component.html","./src/app/core/components/intuition/form/components/form-sslcert-select/form-sslcert-select.component.ts","./src/app/core/components/intuition/form/components/form-sslcert-select/form-sslcert-select.component.html","./src/app/core/components/intuition/form/components/form-tag-input/form-tag-input.component.ts","./src/app/core/components/intuition/form/components/form-tag-input/form-tag-input.component.html","./src/app/core/components/intuition/form/components/form-text-input/form-text-input.component.ts","./src/app/core/components/intuition/form/components/form-text-input/form-text-input.component.html","./src/app/core/components/intuition/form/components/form-textarea/form-textarea.component.ts","./src/app/core/components/intuition/form/components/form-textarea/form-textarea.component.html","./src/app/core/components/intuition/form/form.component.ts","./src/app/core/components/intuition/form/form.component.html","./src/app/core/components/intuition/functions.helper.ts","./src/app/core/components/intuition/intuition.module.ts","./src/app/core/components/intuition/material/mat-form-button/mat-form-button.component.ts","./src/app/core/components/intuition/material/mat-form-button/mat-form-button.component.html","./src/app/core/components/intuition/material/mat-form-code-editor/mat-form-code-editor.component.ts","./src/app/core/components/intuition/material/mat-form-code-editor/mat-form-code-editor.component.html","./src/app/core/components/intuition/material/mat-form-datatable/mat-form-datatable.component.ts","./src/app/core/components/intuition/material/mat-form-datatable/mat-form-datatable.component.html","./src/app/core/components/intuition/material/mat-form-tag-input/mat-form-tag-input.component.ts","./src/app/core/components/intuition/material/mat-form-tag-input/mat-form-tag-input.component.html","./src/app/core/components/intuition/rrd-page/rrd-page.component.ts","./src/app/core/components/intuition/rrd-page/rrd-page.component.html","./src/app/core/components/intuition/selection-list-page/selection-list-page.component.ts","./src/app/core/components/intuition/selection-list-page/selection-list-page.component.html","./src/app/core/components/intuition/tabs-page/tabs-page.component.ts","./src/app/core/components/intuition/tabs-page/tabs-page.component.html","./src/app/core/components/intuition/text-page/text-page.component.ts","./src/app/core/components/intuition/text-page/text-page.component.html","./src/app/core/components/layouts/blank-layout/blank-layout.component.ts","./src/app/core/components/layouts/blank-layout/blank-layout.component.html","./src/app/core/components/layouts/workbench-layout/workbench-layout.component.ts","./src/app/core/components/layouts/workbench-layout/workbench-layout.component.html","./src/app/core/components/navigation-bar/navigation-bar-list-item/navigation-bar-list-item.component.ts","./src/app/core/components/navigation-bar/navigation-bar-list-item/navigation-bar-list-item.component.html","./src/app/core/components/navigation-bar/navigation-bar.component.ts","./src/app/core/components/navigation-bar/navigation-bar.component.html","./src/app/core/components/notification-bar/notification-bar.component.ts","./src/app/core/components/notification-bar/notification-bar.component.html","./src/app/core/components/top-bar/top-bar.component.ts","./src/app/core/components/top-bar/top-bar.component.html","./src/app/core/components/welcome-panel/welcome-panel.component.ts","./src/app/core/components/welcome-panel/welcome-panel.component.html","./src/app/core/core.module.ts","./src/app/core/pages/about-page/about-page.component.ts","./src/app/core/pages/about-page/about-page.component.html","./src/app/core/pages/blank-page/blank-page.component.ts","./src/app/core/pages/dashboard-page/dashboard-page.component.ts","./src/app/core/pages/dashboard-page/dashboard-page.component.html","./src/app/core/pages/guru-meditation-page/guru-meditation-page.component.ts","./src/app/core/pages/guru-meditation-page/guru-meditation-page.component.html","./src/app/core/pages/login-page/login-page.component.ts","./src/app/core/pages/login-page/login-page.component.html","./src/app/core/pages/navigation-page/navigation-page.component.ts","./src/app/core/pages/navigation-page/navigation-page.component.html","./src/app/core/pages/pages.module.ts","./src/app/core/pages/shutdown-page/shutdown-page.component.ts","./src/app/core/pages/shutdown-page/shutdown-page.component.html","./src/app/core/pages/standby-page/standby-page.component.ts","./src/app/core/pages/standby-page/standby-page.component.html","./src/app/core/services/dashboard-widget-config.service.ts","./src/app/core/services/log-config.service.ts","./src/app/core/services/mkfs-config.service.ts","./src/app/core/services/navigation-config.service.ts","./src/app/core/services/route-config.service.ts","./src/app/decorators.ts","./src/app/functions.helper.ts","./src/app/i18n.helper.ts","./src/app/material.module.ts","./src/app/rxjs.helper.ts","./src/app/shared/components/alert-panel/alert-panel.component.ts","./src/app/shared/components/alert-panel/alert-panel.component.html","./src/app/shared/components/block-ui/block-ui.component.ts","./src/app/shared/components/block-ui/block-ui.component.html","./src/app/shared/components/components.module.ts","./src/app/shared/components/datatable-actions/datatable-actions.component.ts","./src/app/shared/components/datatable-actions/datatable-actions.component.html","./src/app/shared/components/datatable/datatable.component.ts","./src/app/shared/components/datatable/datatable.component.html","./src/app/shared/components/modal-dialog/modal-dialog.component.ts","./src/app/shared/components/modal-dialog/modal-dialog.component.html","./src/app/shared/components/progress-bar/progress-bar.component.ts","./src/app/shared/components/progress-bar/progress-bar.component.html","./src/app/shared/components/submit-button/submit-button.component.ts","./src/app/shared/components/submit-button/submit-button.component.html","./src/app/shared/components/task-dialog/task-dialog.component.ts","./src/app/shared/components/task-dialog/task-dialog.component.html","./src/app/shared/directives/autocapitalize.directive.ts","./src/app/shared/directives/autofocus.directive.ts","./src/app/shared/directives/binary-unit.directive.ts","./src/app/shared/directives/directives.module.ts","./src/app/shared/directives/external-link.directive.ts","./src/app/shared/directives/loading-state.directive.ts","./src/app/shared/directives/native-element.directive.ts","./src/app/shared/enum/icon.enum.ts","./src/app/shared/enum/notification-type.enum.ts","./src/app/shared/forms/custom-validators.ts","./src/app/shared/models/datatable-selection.model.ts","./src/app/shared/models/notification.model.ts","./src/app/shared/models/permissions.model.ts","./src/app/shared/models/rpc.model.ts","./src/app/shared/pipes/array.pipe.ts","./src/app/shared/pipes/binary-unit.pipe.ts","./src/app/shared/pipes/br2nl.pipe.ts","./src/app/shared/pipes/count.pipe.ts","./src/app/shared/pipes/cron2human.pipe.ts","./src/app/shared/pipes/default-to.pipe.ts","./src/app/shared/pipes/encode-uri-component.pipe.ts","./src/app/shared/pipes/escape-html.pipe.ts","./src/app/shared/pipes/http-error-response.pipe.ts","./src/app/shared/pipes/join.pipe.ts","./src/app/shared/pipes/locale-date.pipe.ts","./src/app/shared/pipes/map-icon-enum.pipe.ts","./src/app/shared/pipes/map.pipe.ts","./src/app/shared/pipes/max.pipe.ts","./src/app/shared/pipes/nl2br.pipe.ts","./src/app/shared/pipes/not-available.pipe.ts","./src/app/shared/pipes/pipes.module.ts","./src/app/shared/pipes/prevent-html.pipe.ts","./src/app/shared/pipes/replace.pipe.ts","./src/app/shared/pipes/sanitize-html.pipe.ts","./src/app/shared/pipes/sort.pipe.ts","./src/app/shared/pipes/split.pipe.ts","./src/app/shared/pipes/template.pipe.ts","./src/app/shared/pipes/to-boolean.pipe.ts","./src/app/shared/pipes/truncate.pipe.ts","./src/app/shared/pipes/trust-html.pipe.ts","./src/app/shared/pipes/upper-first.pipe.ts","./src/app/shared/services/auth-guard.service.ts","./src/app/shared/services/auth-session.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/block-ui.service.ts","./src/app/shared/services/clipboard.service.ts","./src/app/shared/services/constraint.service.ts","./src/app/shared/services/data-store.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/global-error-handler.service.ts","./src/app/shared/services/http-error-interceptor.service.ts","./src/app/shared/services/is-dirty-guard.service.ts","./src/app/shared/services/locale.service.ts","./src/app/shared/services/notification.service.ts","./src/app/shared/services/prefers-color-scheme.service.ts","./src/app/shared/services/rpc.service.ts","./src/app/shared/services/system-information.service.ts","./src/app/shared/services/task-runner.service.ts","./src/app/shared/services/title.service.ts","./src/app/shared/services/user-local-storage.service.ts","./src/app/shared/shared.module.ts","./src/app/transloco-root.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { APP_INITIALIZER, inject, NgModule } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterModule, Routes } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { EMPTY } from 'rxjs';\n\nimport { BlankLayoutComponent } from '~/app/core/components/layouts/blank-layout/blank-layout.component';\nimport { WorkbenchLayoutComponent } from '~/app/core/components/layouts/workbench-layout/workbench-layout.component';\nimport { AboutPageComponent } from '~/app/core/pages/about-page/about-page.component';\nimport { BlankPageComponent } from '~/app/core/pages/blank-page/blank-page.component';\nimport { GuruMeditationPageComponent } from '~/app/core/pages/guru-meditation-page/guru-meditation-page.component';\nimport { LoginPageComponent } from '~/app/core/pages/login-page/login-page.component';\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { ShutdownPageComponent } from '~/app/core/pages/shutdown-page/shutdown-page.component';\nimport { StandbyPageComponent } from '~/app/core/pages/standby-page/standby-page.component';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\nimport { AuthGuardService } from '~/app/shared/services/auth-guard.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WorkbenchLayoutComponent,\n    children: [\n      {\n        path: '',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        component: NavigationPageComponent\n      },\n      { path: 'about', component: AboutPageComponent },\n      {\n        path: 'dashboard',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () =>\n          import('./pages/dashboard/dashboard.module').then((m) => m.DashboardModule),\n        data: { title: gettext('Dashboard') }\n      },\n      {\n        path: 'system',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () => import('./pages/system/system.module').then((m) => m.SystemModule),\n        data: { title: gettext('System') }\n      },\n      {\n        path: 'usermgmt',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () =>\n          import('./pages/usermgmt/usermgmt.module').then((m) => m.UsermgmtModule),\n        data: { title: gettext('User Management') }\n      },\n      {\n        path: 'network',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () => import('./pages/network/network.module').then((m) => m.NetworkModule),\n        data: { title: gettext('Network') }\n      },\n      {\n        path: 'storage',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () => import('./pages/storage/storage.module').then((m) => m.StorageModule),\n        data: { title: gettext('Storage') }\n      },\n      {\n        path: 'services',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () =>\n          import('./pages/services/services.module').then((m) => m.ServicesModule),\n        data: { title: gettext('Services') }\n      },\n      {\n        path: 'diagnostics',\n        canActivate: [AuthGuardService],\n        canActivateChild: [AuthGuardService],\n        loadChildren: () =>\n          import('./pages/diagnostics/diagnostics.module').then((m) => m.DiagnosticsModule),\n        data: { title: gettext('Diagnostics') }\n      },\n      { path: 'logout', children: [] }\n    ]\n  },\n  {\n    path: '',\n    component: BlankLayoutComponent,\n    children: [\n      { path: 'login', component: LoginPageComponent },\n      { path: 'standby', component: StandbyPageComponent },\n      { path: 'shutdown', component: ShutdownPageComponent },\n      {\n        path: 'externalRedirect/:url',\n        resolve: {\n          url: 'externalRedirectResolver'\n        },\n        component: BlankPageComponent\n      },\n      {\n        path: 'reload',\n        resolve: {\n          url: 'reloadResolver'\n        },\n        component: BlankPageComponent\n      },\n      {\n        path: 'download',\n        resolve: {\n          url: 'downloadResolver'\n        },\n        component: BlankPageComponent\n      },\n      {\n        path: 'guruMeditation',\n        component: GuruMeditationPageComponent\n      },\n      {\n        path: '404',\n        component: GuruMeditationPageComponent,\n        data: { message: gettext('The requested page was not found.') }\n      },\n      {\n        path: '503',\n        component: GuruMeditationPageComponent,\n        data: { message: gettext('The server is unavailable to handle this request right now.') }\n      }\n    ]\n  },\n  { path: '**', redirectTo: '/404' }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true\n    })\n  ],\n  providers: [\n    RouteConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (routeConfigService: RouteConfigService) => (): Promise<Routes> =>\n        // Make sure custom routes are loaded while bootstrapping.\n        // This way we can inject custom routes in during lazy loading.\n        routeConfigService.load().toPromise(),\n      multi: true,\n      deps: [RouteConfigService]\n    },\n    {\n      provide: 'externalRedirectResolver',\n      useValue: (route: ActivatedRouteSnapshot) => {\n        // Get the external URL to redirect to.\n        // Example: /externalRedirect/https%3A%2F%2Fwww.openmediavault.org\n        const url = decodeURIComponent(route.paramMap.get('url'));\n        if (_.isString(url)) {\n          window.open(url, '_blank', 'noopener');\n        }\n        return EMPTY;\n      }\n    },\n    {\n      provide: 'reloadResolver',\n      useValue: () => {\n        // Reload the whole page.\n        document.location.replace('');\n        return EMPTY;\n      }\n    },\n    {\n      provide: 'downloadResolver',\n      useValue: (route: ActivatedRouteSnapshot) => {\n        // Example: /download?service=LogFile&method=getContent&params={\"id\":\"syslog\"}\n        // Note, it might be necessary to encode the JSON content of `params`, see\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent?retiredLocale=de\n        // for more information.\n        const rpcService: RpcService = inject(RpcService);\n        const params: string | null = route.queryParamMap.get('params');\n        rpcService.download(\n          route.queryParamMap.get('service'),\n          route.queryParamMap.get('method'),\n          _.isNull(params) ? undefined : JSON.parse(decodeURIComponent(params))\n        );\n        return EMPTY;\n      }\n    }\n  ]\n})\nexport class AppRoutingModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Renderer2 } from '@angular/core';\n\nimport {\n  PrefersColorScheme,\n  PrefersColorSchemeService\n} from '~/app/shared/services/prefers-color-scheme.service';\n\n@Component({\n  selector: 'omv-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private prefersColorSchemeService: PrefersColorSchemeService,\n    private renderer2: Renderer2\n  ) {\n    this.prefersColorSchemeService.change$.subscribe(\n      (prefersColorScheme: PrefersColorScheme): void => {\n        if (prefersColorScheme === 'dark') {\n          this.renderer2.addClass(document.body, 'omv-dark-theme');\n        } else {\n          this.renderer2.removeClass(document.body, 'omv-dark-theme');\n        }\n      }\n    );\n  }\n}","<omv-block-ui class=\"mat-typography\"></omv-block-ui>\n<router-outlet></router-outlet>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslocoService } from '@ngneat/transloco';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport dayjs from 'dayjs';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport { ToastrModule } from 'ngx-toastr';\nimport { tap } from 'rxjs/operators';\n\nimport { AppComponent } from '~/app/app.component';\nimport { AppRoutingModule } from '~/app/app-routing.module';\nimport { CoreModule } from '~/app/core/core.module';\nimport { getCurrentLocale, setTranslationService, translate } from '~/app/i18n.helper';\nimport { MaterialModule } from '~/app/material.module';\nimport { GlobalErrorHandlerService } from '~/app/shared/services/global-error-handler.service';\nimport { HttpErrorInterceptorService } from '~/app/shared/services/http-error-interceptor.service';\nimport { TitleService } from '~/app/shared/services/title.service';\nimport { SharedModule } from '~/app/shared/shared.module';\nimport { TranslocoRootModule } from '~/app/transloco-root.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule.forRoot(),\n    SharedModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-center',\n      preventDuplicates: true\n    }),\n    TranslocoRootModule,\n    MaterialModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: ErrorHandler,\n      useClass: GlobalErrorHandlerService\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptorService,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (translocoService: TranslocoService) => () => {\n        // Make translation service globally available to be able to use\n        // it where DI is not possible.\n        setTranslationService(translocoService);\n        // Setup translation service. Delay app bootstrapping until\n        // translation file has been loaded.\n        translocoService.setActiveLang(getCurrentLocale());\n        return translocoService\n          .load(translocoService.getActiveLang())\n          .pipe(\n            tap(() => {\n              // Translate various day.js locale strings.\n              dayjs.extend(updateLocale);\n              dayjs.updateLocale('en', {\n                relativeTime: {\n                  /* eslint-disable @typescript-eslint/naming-convention */\n                  future: translate(gettext('in %s')),\n                  past: translate(gettext('%s ago')),\n                  s: translate(gettext('a few seconds')),\n                  m: translate(gettext('a minute')),\n                  mm: translate(gettext('%d minutes')),\n                  h: translate(gettext('an hour')),\n                  hh: translate(gettext('%d hours')),\n                  d: translate(gettext('a day')),\n                  dd: translate(gettext('%d days')),\n                  M: translate(gettext('a month')),\n                  MM: translate(gettext('%d months')),\n                  y: translate(gettext('a year')),\n                  yy: translate(gettext('%d years'))\n                }\n              });\n            })\n          )\n          .toPromise();\n      },\n      multi: true,\n      deps: [TranslocoService]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(public titleService: TitleService) {}\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { Unsubscribe } from '~/app/decorators';\nimport { translate } from '~/app/i18n.helper';\nimport { AlertPanelButtonConfig } from '~/app/shared/components/alert-panel/alert-panel.component';\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\nimport {\n  SystemInformation,\n  SystemInformationService\n} from '~/app/shared/services/system-information.service';\n\n@Component({\n  selector: 'omv-apply-config-panel',\n  templateUrl: './apply-config-panel.component.html',\n  styleUrls: ['./apply-config-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApplyConfigPanelComponent {\n  @Unsubscribe()\n  private subscriptions: Subscription = new Subscription();\n\n  public icon = Icon;\n  public dirtyModules: Record<string, string> = {};\n  public expanded = false;\n  public buttons: AlertPanelButtonConfig[] = [];\n\n  constructor(\n    private blockUiService: BlockUiService,\n    private cd: ChangeDetectorRef,\n    private dialogService: DialogService,\n    private notificationService: NotificationService,\n    private router: Router,\n    private rpcService: RpcService,\n    private systemInformationService: SystemInformationService\n  ) {\n    this.subscriptions.add(\n      this.systemInformationService.systemInfo$.subscribe((res: SystemInformation) => {\n        this.dirtyModules = _.get(res, 'dirtyModules', {});\n        this.cd.markForCheck();\n      })\n    );\n    this.buttons = [\n      {\n        tooltip: gettext('Show details'),\n        icon: this.icon.details,\n        click: () => (this.expanded = !this.expanded)\n      },\n      {\n        tooltip: gettext('Undo'),\n        icon: this.icon.undo,\n        click: this.onUndoPendingChanges.bind(this)\n      },\n      {\n        tooltip: gettext('Apply'),\n        icon: this.icon.check,\n        click: this.onApplyPendingChanges.bind(this)\n      }\n    ];\n  }\n\n  onApplyPendingChanges(): void {\n    this.dialogService\n      .open(ModalDialogComponent, {\n        data: {\n          template: 'confirmation-danger',\n          title: gettext('Apply'),\n          message: gettext('Do you really want to apply the configuration changes?')\n        }\n      })\n      .afterClosed()\n      .subscribe((res) => {\n        if (res) {\n          this.blockUiService.start(\n            translate(gettext('Please wait, the configuration changes are being applied ...'))\n          );\n          this.rpcService\n            .requestTask(\n              'Config',\n              'applyChangesBg',\n              {\n                modules: [],\n                force: false\n              },\n              undefined,\n              1000\n            )\n            .pipe(\n              finalize(() => {\n                this.blockUiService.stop();\n              })\n            )\n            .subscribe(() => {\n              this.notificationService.show(\n                NotificationType.success,\n                gettext('Applied the configuration changes.')\n              );\n            });\n        }\n      });\n  }\n\n  onUndoPendingChanges(): void {\n    this.dialogService\n      .open(ModalDialogComponent, {\n        data: {\n          template: 'confirmation-danger',\n          title: gettext('Undo'),\n          message: gettext('Do you really want to undo the configuration changes?')\n        }\n      })\n      .afterClosed()\n      .subscribe((res) => {\n        if (res) {\n          this.blockUiService.start(\n            translate(gettext('Please wait, reverting configuration changes ...'))\n          );\n          this.rpcService\n            .requestTask('Config', 'revertChangesBg', {\n              filename: ''\n            })\n            .pipe(\n              finalize(() => {\n                this.blockUiService.stop();\n              })\n            )\n            .subscribe(() => {\n              this.notificationService.show(\n                NotificationType.success,\n                gettext('Reverted the configuration changes.')\n              );\n              this.router.navigate(['/reload']);\n            });\n        }\n      });\n  }\n}\n","<omv-alert-panel *ngIf=\"dirtyModules | count\"\n                 type=\"warning\"\n                 icon=\"information\"\n                 title=\"{{ 'Pending configuration changes' | transloco }}\"\n                 [buttons]=\"buttons\">\n  <div class=\"omv-cursor-pointer omv-display-flex omv-flex-column omv-align-items-start omv-align-content-start omv-justify-content-center\"\n       (click)=\"expanded = !expanded\">\n    {{ 'You must apply these changes in order for them to take effect.' | transloco }}\n    <div class=\"details\"\n         [ngClass]=\"{'omv-display-none': !expanded}\">\n      <div class=\"omv-mt-h\">\n        {{ 'The following modules will be updated:' | transloco }}\n      </div>\n      <ul>\n        <li *ngFor=\"let module of dirtyModules | keyvalue\"\n            matTooltip=\"{{ module.value | transloco }}\">\n          {{ module.key }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</omv-alert-panel>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport {\n  ActivatedRoute,\n  ActivatedRouteSnapshot,\n  Event,\n  NavigationEnd,\n  Router,\n  UrlSegment\n} from '@angular/router';\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { filter, startWith } from 'rxjs/operators';\n\nimport { Unsubscribe } from '~/app/decorators';\nimport { format, formatDeep } from '~/app/functions.helper';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\nexport type Breadcrumb = {\n  text: string;\n  url: string;\n  loading: boolean;\n};\n\n@Component({\n  selector: 'omv-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbComponent {\n  @Unsubscribe()\n  private subscriptions: Subscription = new Subscription();\n\n  public breadcrumbs: Breadcrumb[] = [];\n  public icon = Icon;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private cd: ChangeDetectorRef,\n    private router: Router,\n    private rpcService: RpcService\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(\n          filter((event: Event) => event instanceof NavigationEnd),\n          // The first 'NavigationEnd' event is already fired on page\n          // load when this component is instantiated, so simply emit\n          // a value before the router regularly begins to emit events\n          // to render the breadcrumbs of the current activated route.\n          startWith(true)\n        )\n        .subscribe(() => {\n          const breadcrumbs = this.parseRoute(this.activatedRoute.snapshot.root);\n          this.breadcrumbs = _.uniqWith(breadcrumbs, _.isEqual);\n          this.cd.markForCheck();\n        })\n    );\n  }\n\n  private parseRoute(routeSnapshot: ActivatedRouteSnapshot): Breadcrumb[] {\n    let routeParts: Breadcrumb[] = [];\n    if (routeSnapshot.data.title || routeSnapshot.data.breadcrumb) {\n      // Note, a `breadcrumb` configuration overrules `title`.\n      let urlSegments: UrlSegment[] = [];\n      routeSnapshot.pathFromRoot.forEach((routerState: ActivatedRouteSnapshot) => {\n        urlSegments = urlSegments.concat(routerState.url);\n      });\n      const url: string = urlSegments\n        .map((urlSegment) => encodeURIComponent(urlSegment.path))\n        .join('/');\n      const breadcrumbConfig = routeSnapshot.data?.breadcrumb;\n      const isRequest: boolean = _.isPlainObject(breadcrumbConfig?.request);\n      const formatData: Record<string, any> = {\n        _routeParams: routeSnapshot.params,\n        _routeQueryParams: routeSnapshot.queryParams\n      };\n      const routePart: Breadcrumb = {\n        text: isRequest\n          ? '...'\n          : format(breadcrumbConfig?.text || routeSnapshot.data.title, formatData),\n        url: '/' + url,\n        loading: isRequest\n      };\n      if (isRequest) {\n        const requestParams: Record<string, any> = formatDeep(\n          _.get(breadcrumbConfig.request, 'params', {}),\n          formatData\n        );\n        this.rpcService\n          .request(breadcrumbConfig.request.service, breadcrumbConfig.request.method, requestParams)\n          .subscribe((resp: Record<string, any>) => {\n            routePart.text = format(\n              breadcrumbConfig.text,\n              _.merge(\n                {\n                  _routeParams: routeSnapshot.params\n                },\n                resp\n              )\n            );\n            routePart.loading = false;\n            this.cd.markForCheck();\n          });\n      }\n      routeParts.push(routePart);\n    }\n    if (routeSnapshot.firstChild) {\n      routeParts = routeParts.concat(this.parseRoute(routeSnapshot.firstChild));\n    }\n    return routeParts;\n  }\n}\n","<nav class=\"omv-display-flex omv-flex-row omv-align-items-center omv-align-content-center omv-justify-content-start\">\n  <a routerLink=\"/\"\n     class=\"mat-subheading-2\"\n     [ngClass]=\"{'active': !breadcrumbs.length}\"\n     matTooltip=\"{{ 'Home' | transloco }}\">\n    <mat-icon svgIcon=\"{{ icon.home }}\"></mat-icon>\n  </a>\n  <div *ngFor=\"let breadcrumb of breadcrumbs; let last = last\">\n    <mat-divider vertical=\"true\"></mat-divider>\n    <a *ngIf=\"!last\"\n       [routerLink]=\"breadcrumb.url\"\n       class=\"mat-subheading-2\"\n       [ngClass]=\"{'loading': breadcrumb.loading}\">\n      <span *ngIf=\"!breadcrumb.loading\">{{ breadcrumb.text | transloco }}</span>\n      <mat-icon *ngIf=\"breadcrumb.loading\"\n                class=\"omv-icon-rotate-360-infinite\"\n                svgIcon=\"mdi:loading\">\n      </mat-icon>\n    </a>\n    <a *ngIf=\"last\"\n       class=\"mat-subheading-2 active\"\n       [ngClass]=\"{'loading': breadcrumb.loading}\">\n      <span *ngIf=\"!breadcrumb.loading\">{{ breadcrumb.text | transloco }}</span>\n      <mat-icon *ngIf=\"breadcrumb.loading\"\n                class=\"omv-icon-rotate-360-infinite\"\n                svgIcon=\"mdi:loading\">\n      </mat-icon>\n    </a>\n  </div>\n</nav>\n","/* eslint-disable max-len */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { NgScrollbarModule } from 'ngx-scrollbar';\n\nimport { ApplyConfigPanelComponent } from '~/app/core/components/apply-config-panel/apply-config-panel.component';\nimport { BreadcrumbComponent } from '~/app/core/components/breadcrumb/breadcrumb.component';\nimport { DashboardModule } from '~/app/core/components/dashboard/dashboard.module';\nimport { GreenRainComponent } from '~/app/core/components/green-rain/green-rain.component';\nimport { GuruMeditationComponent } from '~/app/core/components/guru-meditation/guru-meditation.component';\nimport { IntuitionModule } from '~/app/core/components/intuition/intuition.module';\nimport { BlankLayoutComponent } from '~/app/core/components/layouts/blank-layout/blank-layout.component';\nimport { WorkbenchLayoutComponent } from '~/app/core/components/layouts/workbench-layout/workbench-layout.component';\nimport { NavigationBarComponent } from '~/app/core/components/navigation-bar/navigation-bar.component';\nimport { NavigationBarListItemComponent } from '~/app/core/components/navigation-bar/navigation-bar-list-item/navigation-bar-list-item.component';\nimport { NotificationBarComponent } from '~/app/core/components/notification-bar/notification-bar.component';\nimport { TopBarComponent } from '~/app/core/components/top-bar/top-bar.component';\nimport { WelcomePanelComponent } from '~/app/core/components/welcome-panel/welcome-panel.component';\nimport { MaterialModule } from '~/app/material.module';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    NavigationBarComponent,\n    NavigationBarListItemComponent,\n    TopBarComponent,\n    GuruMeditationComponent,\n    BreadcrumbComponent,\n    NotificationBarComponent,\n    BlankLayoutComponent,\n    WorkbenchLayoutComponent,\n    ApplyConfigPanelComponent,\n    GreenRainComponent,\n    WelcomePanelComponent\n  ],\n  exports: [\n    BlankLayoutComponent,\n    WorkbenchLayoutComponent,\n    GuruMeditationComponent,\n    IntuitionModule,\n    NotificationBarComponent,\n    DashboardModule,\n    GreenRainComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    MaterialModule,\n    IntuitionModule,\n    TranslocoModule,\n    NgScrollbarModule,\n    DashboardModule\n  ]\n})\nexport class ComponentsModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport {\n  ArcElement,\n  Chart,\n  ChartDataset,\n  ChartType,\n  Color,\n  DoughnutController,\n  Tooltip\n} from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport * as _ from 'lodash';\n\nimport {\n  ChartDataConfig,\n  DashboardWidgetConfig\n} from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { renderTemplate } from '~/app/functions.helper';\nimport { translate } from '~/app/i18n.helper';\n\nChart.register(ArcElement, DoughnutController, Tooltip);\n\n@Component({\n  selector: 'omv-dashboard-widget-chart',\n  templateUrl: './dashboard-widget-chart.component.html',\n  styleUrls: ['./dashboard-widget-chart.component.scss']\n})\nexport class DashboardWidgetChartComponent implements OnInit {\n  @ViewChild('chartCtx', { static: true })\n  chartCtx: ElementRef;\n\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public chart?: Chart;\n  // The chart width in percent.\n  public chartWidth?: 25 | 50 | 75 | 100;\n  public data: Record<string, any>;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n    this.chart = this.createChart();\n  }\n\n  public labelFormatterByProp(data, prop, context) {\n    const value = _.get(data, prop);\n    return this.labelFormatter(value, context);\n  }\n\n  public labelFormatter(value, context) {\n    let result;\n    switch (this.config.chart.label.formatter) {\n      case 'template':\n        result = renderTemplate(this.config.chart.label.formatterConfig, { value });\n        break;\n      case 'label':\n        result = context.chart.data.labels[context.dataIndex];\n        break;\n      default:\n        result = value;\n        break;\n    }\n    return result;\n  }\n\n  public calcPercent(config: ChartDataConfig, context): number {\n    const total = this.getTotal();\n    return Math.round(total > 0 ? (_.get(this.data, config.prop) / total) * 100 : 0);\n  }\n\n  /**\n   * Get the values of all data configurations.\n   */\n  public getData(): Array<number> {\n    const data: Array<number> = [];\n    _.forEach(this.config.chart.dataConfig, (dataConfig) => {\n      const value = parseFloat(_.get(this.data, dataConfig.prop));\n      data.push(value);\n    });\n    return data;\n  }\n\n  /**\n   * Get the values for the specified chart dataset. The values will be\n   * adapted automatically to the configured min/max boundaries.\n   */\n  public getGaugeData(index: number): Array<number> {\n    const values: Array<number> = this.getData();\n    const data: Array<number> = _.fill(Array(values.length), 0);\n    let minValue = Math.min(...values);\n    let maxValue = Math.max(...values);\n    if (!_.isUndefined(this.config.chart.min)) {\n      minValue = Math.min(this.config.chart.min, minValue);\n    }\n    if (!_.isUndefined(this.config.chart.max)) {\n      maxValue = Math.max(this.config.chart.max, maxValue);\n    }\n    // Ensure the maximum value is NOT zero, otherwise the chart will\n    // not show anything.\n    if (maxValue === 0) {\n      maxValue = 100;\n    }\n    // Adapt the current value to the specified boundaries.\n    const value = Math.min(Math.max(minValue, values[index]), maxValue);\n    data[index] = value;\n    // Add difference as additional value to draw the dataset line.\n    data.push(maxValue - value);\n    return data;\n  }\n\n  public getTotal(): number {\n    return _.sum(this.getData());\n  }\n\n  public getMaxValue(): number {\n    const values = this.getData();\n    return Math.max(...values);\n  }\n\n  public dataChanged(data: Record<string, any>): void {\n    this.data = data;\n    this.updateChart();\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      reloadPeriod: 10000,\n      chart: {\n        type: 'doughnut',\n        label: {\n          display: false,\n          formatter: 'none',\n          color: 'black',\n          align: 'center',\n          anchor: 'center'\n        },\n        circumference: 360,\n        rotation: 0,\n        tooltips: false,\n        legend: {\n          position: 'bottom'\n        },\n        displayValue: false\n      }\n    });\n    switch (this.config.chart.type) {\n      case 'advanced-doughnut':\n        _.merge(this.config.chart, {\n          tooltips: false\n        });\n        break;\n      case 'advanced-gauge':\n        _.merge(this.config.chart, {\n          displayValue: false,\n          legend: {\n            display: false\n          },\n          tooltips: false\n        });\n        break;\n    }\n  }\n\n  protected initDatasets(): Array<ChartDataset> {\n    const dataSets: Array<ChartDataset> = [];\n    const backgroundColor: Array<Color> = _.map(this.config.chart.dataConfig, 'backgroundColor');\n    switch (this.config.chart.type) {\n      case 'doughnut':\n      case 'advanced-doughnut':\n        // These chart types have only one dataset.\n        dataSets.push({\n          data: [],\n          backgroundColor\n        });\n        break;\n      case 'gauge':\n      case 'advanced-gauge':\n        // Set the fill color.\n        backgroundColor.push('#0000001a');\n        // This type of chart can have multiple datasets.\n        _.forEach(this.config.chart.dataConfig, (dataConfig) => {\n          dataSets.push({\n            data: [],\n            backgroundColor,\n            label: dataConfig.label\n          });\n        });\n        break;\n    }\n    return dataSets;\n  }\n\n  protected createChart(): Chart {\n    const type: ChartType = 'doughnut';\n    let cutout: string;\n    let displayLegend: boolean;\n    let displayDataLabels: boolean;\n    let circumference: number = this.config.chart.circumference;\n    let rotation: number = this.config.chart.rotation;\n    switch (this.config.chart.type) {\n      case 'doughnut':\n        this.chartWidth = 100;\n        cutout = '50%';\n        displayLegend = _.defaultTo(this.config.chart.legend.display, true);\n        displayDataLabels = _.defaultTo(this.config.chart.label.display, false);\n        break;\n      case 'advanced-doughnut':\n        this.chartWidth = 50;\n        cutout = '75%';\n        displayLegend = false;\n        displayDataLabels = false;\n        break;\n      case 'gauge':\n      case 'advanced-gauge':\n        this.chartWidth = this.config.chart.type === 'advanced-gauge' ? 50 : 100;\n        cutout = `${80 - this.config.chart.dataConfig.length * 5}%`;\n        displayLegend = _.defaultTo(this.config.chart.legend.display, false);\n        displayDataLabels = false;\n        circumference = 270;\n        rotation = -135;\n        break;\n    }\n    return new Chart(this.chartCtx.nativeElement, {\n      type,\n      data: {\n        labels: _.map(this.config.chart.dataConfig, 'label'),\n        datasets: this.initDatasets()\n      },\n      plugins: [ChartDataLabels],\n      options: {\n        // @ts-ignore\n        circumference,\n        rotation,\n        responsive: true,\n        maintainAspectRatio: true,\n        cutout,\n        plugins: {\n          legend: {\n            display: displayLegend,\n            position: this.config.chart.legend.position\n          },\n          tooltip: {\n            enabled: this.config.chart.tooltips,\n            callbacks: {\n              label: (tooltipItem): string => {\n                const label = translate(tooltipItem.label);\n                const formattedValue = this.labelFormatter(tooltipItem.raw, this.chartCtx);\n                return `${label}: ${formattedValue}`;\n              }\n            }\n          },\n          datalabels: {\n            display: displayDataLabels,\n            color: this.config.chart.label.color,\n            formatter: this.labelFormatter.bind(this),\n            align: this.config.chart.label.align,\n            anchor: this.config.chart.label.anchor\n          }\n        }\n      }\n    });\n  }\n\n  protected updateChart() {\n    if (this.chart) {\n      let data: Array<number> = [];\n      switch (this.config.chart.type) {\n        case 'doughnut':\n        case 'advanced-doughnut':\n          // These chart types have only one dataset.\n          data = this.getData();\n          _.set(this.chart, 'data.datasets.0.data', data);\n          break;\n        case 'gauge':\n        case 'advanced-gauge':\n          // This type of chart can have multiple datasets.\n          _.forEach(this.config.chart.dataConfig, (dataConfig, index) => {\n            data = this.getGaugeData(index);\n            _.set(this.chart, `data.datasets.${index}.data`, data);\n          });\n          break;\n      }\n      this.chart.update();\n    }\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div class=\"widget-content omv-display-flex omv-flex-row\">\n    <div class=\"chart omv-flex-1\"\n         [ngClass]=\"{'omv-w-100': chartWidth === 100, 'omv-w-75': chartWidth === 75, 'omv-w-50': chartWidth === 50, 'omv-w-25': chartWidth === 25}\">\n      <div *ngIf=\"config.chart?.displayValue && data && chart && chartCtx\"\n           class=\"gauge-label omv-display-flex omv-flex-column omv-flex-fill omv-align-content-center omv-justify-content-end omv-align-items-center\">\n        <span class=\"value\">{{ labelFormatter(getMaxValue(), chartCtx) }}</span>\n      </div>\n      <canvas #chartCtx\n              [style]=\"{'max-height': config.chart?.maxHeight, 'max-width': config.chart?.maxWidth}\">\n        {{ chart }}\n      </canvas>\n    </div>\n    <ng-container [ngTemplateOutlet]=\"renderChartLegend\"></ng-container>\n  </div>\n</omv-dashboard-widget>\n\n<ng-template #renderChartLegend>\n  <ng-container [ngSwitch]=\"config.chart?.type\">\n    <ng-template [ngSwitchCase]=\"'advanced-doughnut'\">\n      <div *ngIf=\"data && chart && chartCtx\"\n           class=\"advanced-label omv-display-flex omv-flex-column omv-w-50 omv-align-content-start omv-justify-content-end omv-align-items-start\">\n        <div class=\"total\">\n          <div class=\"total-value omv-text-truncate\">{{ labelFormatter(getTotal(), chartCtx) }}</div>\n          <div class=\"total-label omv-text-truncate\">{{ 'Total' | transloco }}</div>\n        </div>\n        <div class=\"items omv-grid omv-gap-2 omv-grid-cols-2\">\n          <div *ngFor=\"let item of config.chart?.dataConfig\"\n               [ngStyle]=\"{'border-left-color': item.backgroundColor}\"\n               class=\"item omv-flex-column omv-align-content-start omv-justify-content-start omv-align-items-start\">\n            <div class=\"item-value omv-text-truncate\">{{ labelFormatterByProp(data, item.prop, chartCtx) }}</div>\n            <div class=\"item-percent\">{{ calcPercent(item, chartCtx) }}%</div>\n            <div class=\"item-label omv-text-truncate\">{{ item.label }}</div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'advanced-gauge'\">\n      <div *ngIf=\"data && chart && chartCtx\"\n           class=\"advanced-label omv-display-flex omv-flex-column omv-w-50 omv-align-content-start omv-justify-content-end omv-align-items-start\">\n        <div class=\"items omv-grid omv-gap-2 omv-grid-cols-3\">\n          <div *ngFor=\"let item of config.chart?.dataConfig\"\n               [ngStyle]=\"{'border-left-color': item.backgroundColor}\"\n               class=\"item omv-flex-column omv-align-content-start omv-justify-content-start omv-align-items-start\">\n            <div class=\"item-value omv-text-truncate\">{{ labelFormatterByProp(data, item.prop, chartCtx) }}</div>\n            <div class=\"item-label omv-text-truncate\">{{ item.label }}</div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ng-container>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { DataStoreResponse } from '~/app/shared/services/data-store.service';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-dashboard-widget-datatable',\n  templateUrl: './dashboard-widget-datatable.component.html',\n  styleUrls: ['./dashboard-widget-datatable.component.scss']\n})\nexport class DashboardWidgetDatatableComponent implements OnInit {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public data: DataStoreResponse;\n\n  constructor(private dataStoreService: DataStoreService) {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n  }\n\n  public loadData(): Observable<DataStoreResponse> {\n    return this.dataStoreService.load(this.config.datatable.store);\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      reloadPeriod: 10000,\n      datatable: {\n        columnMode: 'flex',\n        hasHeader: true,\n        hasFooter: false,\n        columns: [],\n        sorters: [],\n        sortType: 'single',\n        store: {\n          data: []\n        }\n      }\n    });\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      [loadData]=\"loadData.bind(this)\">\n  <div class=\"widget-content omv-scrollable-xy\">\n    <omv-datatable [selectionType]=\"'none'\"\n                   [limit]=\"0\"\n                   [loadingIndicator]=\"false\"\n                   [hasActionBar]=\"false\"\n                   [hasHeader]=\"config.datatable?.hasHeader\"\n                   [hasFooter]=\"config.datatable?.hasFooter\"\n                   [stateId]=\"config.id\"\n                   [data]=\"config.datatable?.store.data\"\n                   [columns]=\"config.datatable?.columns\"\n                   [columnMode]=\"config.datatable?.columnMode\"\n                   [autoLoad]=\"false\"\n                   [autoReload]=\"false\"\n                   [sortType]=\"config.datatable?.sortType\"\n                   [sorters]=\"config.datatable?.sorters\">\n    </omv-datatable>\n  </div>\n</omv-dashboard-widget>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { DataStoreResponse, DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-dashboard-widget-filesystems-status',\n  templateUrl: './dashboard-widget-filesystems-status.component.html',\n  styleUrls: ['./dashboard-widget-filesystems-status.component.scss']\n})\nexport class DashboardWidgetFilesystemsStatusComponent {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public data: DataStoreResponse;\n\n  constructor(private dataStoreService: DataStoreService) {}\n\n  public loadData(): Observable<DataStoreResponse> {\n    return this.dataStoreService.load({\n      proxy: {\n        service: 'FileSystemMgmt',\n        get: {\n          method: 'getListBg',\n          params: {\n            start: 0,\n            limit: -1\n          },\n          task: true\n        }\n      },\n      sorters: [\n        {\n          prop: 'canonicaldevicefile',\n          dir: 'asc'\n        }\n      ]\n    });\n  }\n\n  public dataChanged(data: DataStoreResponse): void {\n    this.data = data;\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      [loadData]=\"loadData.bind(this)\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div *ngIf=\"data\"\n       class=\"widget-content omv-grid omv-gap-2\">\n    <div *ngIf=\"!data.total\">\n      <span>{{ 'No data to display.' | transloco }}</span>\n    </div>\n    <div *ngFor=\"let item of data.data\"\n         class=\"item omv-display-flex omv-flex-column omv-align-content-stretch omv-justify-content-start omv-align-items-stretch\"\n         [ngClass]=\"{'error': item.status === 3, 'warning': (item.status === 1) && !item.mounted}\">\n      <div class=\"item-text omv-text-truncate\">\n        {{ item.canonicaldevicefile }}\n      </div>\n      <div *ngIf=\"item.mounted\"\n           class=\"item-subtext omv-text-truncate\">\n        {{ item.size | binaryUnit }}\n      </div>\n      <omv-progress-bar *ngIf=\"item.mounted\"\n                        class=\"item-subtext\"\n                        [value]=\"item.percentage | max:0\"\n                        [warningThreshold]=\"item.usagewarnthreshold | defaultTo:0\">\n      </omv-progress-bar>\n      <div *ngIf=\"(item.status === 1) && !item.mounted\"\n           class=\"item-subtext omv-text-truncate\">\n        {{ 'Not mounted' | transloco }}\n      </div>\n      <div *ngIf=\"item.status === 3\"\n           class=\"item-subtext omv-text-truncate\">\n        {{ 'Missing' | transloco }}\n      </div>\n    </div>\n  </div>\n</omv-dashboard-widget>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { formatDeep, isFormatable } from '~/app/functions.helper';\nimport { DataStoreResponse, DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-dashboard-widget-grid',\n  templateUrl: './dashboard-widget-grid.component.html',\n  styleUrls: ['./dashboard-widget-grid.component.scss']\n})\nexport class DashboardWidgetGridComponent implements OnInit {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public data: DataStoreResponse;\n\n  constructor(private dataStoreService: DataStoreService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n  }\n\n  public loadData(): Observable<DataStoreResponse> {\n    return this.dataStoreService.load(this.config.grid.store);\n  }\n\n  public dataChanged(data: DataStoreResponse): void {\n    this.data = data;\n  }\n\n  public onClick(data: Record<any, any>): void {\n    if (isFormatable(this.config.grid?.item.url)) {\n      const url = formatDeep(this.config.grid.item.url, data);\n      this.router.navigate([url]);\n    }\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      reloadPeriod: 10000,\n      grid: {\n        item: {\n          minWidth: '100px'\n        },\n        hasEmptyMessage: true,\n        emptyMessage: gettext('No data to display.'),\n        store: {\n          data: []\n        }\n      }\n    });\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      [loadData]=\"loadData.bind(this)\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div *ngIf=\"data\"\n       class=\"widget-content omv-grid omv-gap-1\">\n    <div *ngFor=\"let item of data.data\"\n         class=\"item\"\n         [ngClass]=\"config.grid?.item.class | template:item\"\n         matTooltipClass=\"omv-text-wrap-line\"\n         [matTooltip]=\"config.grid?.item.tooltip | template:item | br2nl | preventHtml\"\n         [tabIndex]=\"config.grid?.item.url ? '0' : '-1'\"\n         (keyup.space)=\"onClick(item)\"\n         (keyup.enter)=\"onClick(item)\"\n         (click)=\"onClick(item)\">\n      <div *ngIf=\"config.grid?.item.title\"\n           class=\"title omv-font-weight-bold\"\n           [ngClass]=\"config.grid?.item.titleClass | template:item\"\n           [innerHTML]=\"config.grid?.item.title | template:item | sanitizeHtml\">\n      </div>\n      <div class=\"content\"\n           [ngClass]=\"config.grid?.item.contentClass | template:item\"\n           [innerHTML]=\"config.grid?.item.content | template:item | sanitizeHtml\">\n      </div>\n    </div>\n    <div *ngIf=\"!data.data.length && config.grid.hasEmptyMessage\"\n         class=\"item omv-text-center omv-background-color-pair-info\">\n      <div class=\"content\">\n        {{ config.grid.emptyMessage | transloco }}\n      </div>\n    </div>\n  </div>\n</omv-dashboard-widget>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { unixTimeStamp } from '~/app/functions.helper';\n\n@Component({\n  selector: 'omv-dashboard-widget-rrd',\n  templateUrl: './dashboard-widget-rrd.component.html',\n  styleUrls: ['./dashboard-widget-rrd.component.scss']\n})\nexport class DashboardWidgetRrdComponent implements OnInit {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public time: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n  }\n\n  public loadData(): Observable<number> {\n    // Angular CD will detect this and redraws the widget using the\n    // latest graph image.\n    return of(unixTimeStamp());\n  }\n\n  public dataChanged(time: number): void {\n    this.time = time;\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      reloadPeriod: 60000,\n      rrd: {\n        name: 'undefined.png'\n      }\n    });\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      [loadData]=\"loadData.bind(this)\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div class=\"widget-content omv-display-flex omv-justify-content-center omv-align-content-stretch omv-align-content-center omv-align-items-stretch\">\n    <img src=\"download.php?service=Rrd&method=getGraph&params=%7B%22kind%22:%22{{ config.rrd?.kind }}%22,%22period%22:%22{{ config.rrd?.period }}%22%7D&time={{ time }}\"\n         loading=\"lazy\"\n         loadingState\n         alt=\"RRD graph\"/>\n  </div>\n</omv-dashboard-widget>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input } from '@angular/core';\nimport dayjs from 'dayjs';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport {\n  SystemInformation,\n  SystemInformationService\n} from '~/app/shared/services/system-information.service';\n\n@Component({\n  selector: 'omv-dashboard-widget-system-information',\n  templateUrl: './dashboard-widget-system-information.component.html',\n  styleUrls: ['./dashboard-widget-system-information.component.scss']\n})\nexport class DashboardWidgetSystemInformationComponent {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public data: SystemInformation;\n\n  constructor(private systemInformationService: SystemInformationService) {}\n\n  public loadData(): Observable<SystemInformation> {\n    return this.systemInformationService.systemInfo$.pipe(\n      map((data) => {\n        const result = _.cloneDeep(data);\n        result.uptime = dayjs().unix() - result.uptime;\n        result.version='1.0';\n        return result;\n      })\n    );\n  }\n\n  public dataChanged(data: any): void {\n    this.data = data;\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      [loadData]=\"loadData.bind(this)\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div *ngIf=\"data\"\n       class=\"widget-content omv-grid omv-gap-2 omv-grid-cols-2\">\n    <div class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'Hostname' | transloco }}</div>\n      <div>{{ data?.hostname }}</div>\n    </div>\n    <div class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'Version' | transloco }}</div>\n      <div>{{ data?.version | notAvailable }}</div>\n    </div>\n    <div class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'Processor' | transloco }}</div>\n      <div>{{ data?.cpuModelName | notAvailable }}</div>\n    </div>\n    <div class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'Kernel' | transloco }}</div>\n      <div>{{ data?.kernel | notAvailable }}</div>\n    </div>\n    <div class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'System time' | transloco }}</div>\n      <div>{{ data?.time }}</div>\n    </div>\n    <div class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'Uptime' | transloco }}</div>\n      <div>{{ data?.uptime | localeDate:'relative':true }}</div>\n    </div>\n    <div *ngIf=\"data?.availablePkgUpdates > 0\"\n         class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'Updates available' | transloco }}</div>\n      <div matTooltip=\"{{ 'New package updates are available for installation.' | transloco }}\">\n        <a routerLink=\"/system/updatemgmt/updates\">\n          <mat-icon svgIcon=\"mdi:check\"></mat-icon>\n        </a>\n      </div>\n    </div>\n    <div *ngIf=\"data?.rebootRequired\"\n         class=\"omv-grid-cell\">\n      <div class=\"omv-grid-cell-title omv-font-weight-bold\">{{ 'System restart required' | transloco }}</div>\n      <div matTooltip=\"{{ 'A reboot is needed to fully apply the changes introduced by package installation or upgrade.' | transloco }}\">\n        <mat-icon svgIcon=\"mdi:check\"></mat-icon>\n      </div>\n    </div>\n  </div>\n</omv-dashboard-widget>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\n\n@Component({\n  selector: 'omv-dashboard-widget-text',\n  templateUrl: './dashboard-widget-text.component.html',\n  styleUrls: ['./dashboard-widget-text.component.scss']\n})\nexport class DashboardWidgetTextComponent implements OnInit {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public data: string;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n  }\n\n  public dataChanged(data: string): void {\n    this.data = data;\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      reloadPeriod: 10000\n    });\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div *ngIf=\"data\"\n       class=\"widget-content omv-scrollable-xy\">\n    <div class=\"content\"\n         [ngClass]=\"config.text?.class | template\"\n         [innerHTML]=\"data | sanitizeHtml\">\n    </div>\n  </div>\n</omv-dashboard-widget>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\n\n@Component({\n  selector: 'omv-dashboard-widget-value',\n  templateUrl: './dashboard-widget-value.component.html',\n  styleUrls: ['./dashboard-widget-value.component.scss']\n})\nexport class DashboardWidgetValueComponent implements OnInit {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  public data: any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n  }\n\n  public dataChanged(data: any): void {\n    this.data = data;\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      hideTitle: true,\n      reloadPeriod: 10000\n    });\n  }\n}\n","<omv-dashboard-widget [config]=\"config\"\n                      (dataChangedEvent)=\"dataChanged($event)\">\n  <div *ngIf=\"data\"\n       class=\"widget-content omv-display-flex omv-flex-row omv-justify-content-start omv-align-items-center\"\n       [ngClass]=\"{'omv-cursor-pointer': config.value?.url}\"\n       [routerLink]=\"config.value?.url | template:data\">\n    <mat-icon *ngIf=\"config.value?.icon\"\n              mat-card-avatar\n              svgIcon=\"{{ config.value?.icon | mapIconEnum }}\">\n    </mat-icon>\n    <div class=\"omv-flex-column omv-align-content-stretch omv-justify-content-center omv-align-items-stretch\"\n         [ngClass]=\"{'omv-ml-h': config.value?.icon}\">\n      <div class=\"omv-font-weight-bold\">\n        {{ config.value?.title | template:data | transloco }}\n      </div>\n      <div>\n        {{ config.value?.value | template:data | transloco }}\n      </div>\n    </div>\n  </div>\n</omv-dashboard-widget>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as _ from 'lodash';\nimport { EMPTY, Observable, Subscription, timer } from 'rxjs';\nimport { catchError, finalize, map, take } from 'rxjs/operators';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { Unsubscribe } from '~/app/decorators';\nimport { formatDeep } from '~/app/functions.helper';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  selector: 'omv-dashboard-widget',\n  templateUrl: './dashboard-widget.component.html',\n  styleUrls: ['./dashboard-widget.component.scss']\n})\nexport class DashboardWidgetComponent implements OnInit {\n  @Input()\n  config: DashboardWidgetConfig;\n\n  @Input()\n  loadData?: () => Observable<any>;\n\n  @Output()\n  readonly dataChangedEvent = new EventEmitter<any>();\n\n  @Unsubscribe()\n  private subscriptions: Subscription = new Subscription();\n\n  public loading = false;\n  public firstLoad = true;\n  public error: any | boolean = false;\n\n  constructor(private rpcService: RpcService) {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n    this.reloadData();\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      hideTitle: false\n    });\n  }\n\n  protected isAutoReloadable(): boolean {\n    return _.isNumber(this.config?.reloadPeriod) && this.config.reloadPeriod > 0;\n  }\n\n  protected getLoadData(): Observable<any> {\n    if (_.isFunction(this.loadData)) {\n      return this.loadData();\n    }\n    if (!_.isPlainObject(this.config)) {\n      return EMPTY;\n    }\n    const type = this.config.type;\n    const request: Record<string, any> = _.get(this.config, `${type}.request`);\n    if (!_.isPlainObject(request)) {\n      return EMPTY;\n    }\n    return this.rpcService[request.task ? 'requestTask' : 'request'](\n      request.service,\n      request.method,\n      request.params  || {}\n    ).pipe(\n      map((res) => {\n        if (_.isPlainObject(request.transform)) {\n          const tmp = formatDeep(request.transform, res);\n          _.merge(res, tmp);\n        }\n        return res;\n      })\n    );\n  }\n\n  protected reloadData(): void {\n    this.loading = true;\n    // Store the subscription to clean it up correctly when the\n    // component is destroyed before the subscription completes.\n    // `take(1)` will unsubscribe the subscription automatically\n    // otherwise.\n    this.subscriptions.add(\n      this.getLoadData()\n        .pipe(\n          catchError((error) => {\n            // Do not show an error notification.\n            error.preventDefault?.();\n            this.error = error;\n            return EMPTY;\n          }),\n          finalize(() => {\n            this.loading = false;\n            this.firstLoad = false;\n            // Reload the data after N seconds?\n            if (this.isAutoReloadable()) {\n              // Store the timer subscription to unsubscribe\n              // correctly when the widget component is destroyed\n              // before the subscription completes.\n              this.subscriptions.add(\n                timer(this.config.reloadPeriod)\n                  .pipe(take(1))\n                  .subscribe(() => {\n                    this.reloadData();\n                  })\n              );\n            }\n          }),\n          take(1)\n        )\n        .subscribe((data: any) => {\n          this.error = false;\n          this.dataChangedEvent.emit(data);\n        })\n    );\n  }\n}\n","<div class=\"omv-dashboard-widget-container\"\n     [ngClass]=\"{'loading': loading && firstLoad, 'error': error}\">\n  <mat-card [ngClass]=\"{'omv-cursor-wait': loading, 'omv-background-color-pair-error': error}\">\n    <mat-progress-bar *ngIf=\"loading && firstLoad\"\n                      mode=\"indeterminate\">\n    </mat-progress-bar>\n    <mat-card-title-group *ngIf=\"config.title && !config.hideTitle\">\n      <mat-card-title>{{ config.title | transloco }}</mat-card-title>\n    </mat-card-title-group>\n    <mat-card-content>\n      <ng-content *ngIf=\"!error && !firstLoad\"></ng-content>\n    </mat-card-content>\n  </mat-card>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n/* eslint-disable max-len */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslocoModule } from '@ngneat/transloco';\n\nimport { DashboardWidgetComponent } from '~/app/core/components/dashboard/dashboard-widget/dashboard-widget.component';\nimport { DashboardWidgetChartComponent } from '~/app/core/components/dashboard/dashboard-widget-chart/dashboard-widget-chart.component';\nimport { DashboardWidgetDatatableComponent } from '~/app/core/components/dashboard/dashboard-widget-datatable/dashboard-widget-datatable.component';\nimport { DashboardWidgetFilesystemsStatusComponent } from '~/app/core/components/dashboard/dashboard-widget-filesystems-status/dashboard-widget-filesystems-status.component';\nimport { DashboardWidgetGridComponent } from '~/app/core/components/dashboard/dashboard-widget-grid/dashboard-widget-grid.component';\nimport { DashboardWidgetRrdComponent } from '~/app/core/components/dashboard/dashboard-widget-rrd/dashboard-widget-rrd.component';\nimport { DashboardWidgetSystemInformationComponent } from '~/app/core/components/dashboard/dashboard-widget-system-information/dashboard-widget-system-information.component';\nimport { DashboardWidgetTextComponent } from '~/app/core/components/dashboard/dashboard-widget-text/dashboard-widget-text.component';\nimport { DashboardWidgetValueComponent } from '~/app/core/components/dashboard/dashboard-widget-value/dashboard-widget-value.component';\nimport { MaterialModule } from '~/app/material.module';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    DashboardWidgetComponent,\n    DashboardWidgetDatatableComponent,\n    DashboardWidgetRrdComponent,\n    DashboardWidgetSystemInformationComponent,\n    DashboardWidgetChartComponent,\n    DashboardWidgetFilesystemsStatusComponent,\n    DashboardWidgetGridComponent,\n    DashboardWidgetTextComponent,\n    DashboardWidgetValueComponent\n  ],\n  exports: [\n    DashboardWidgetDatatableComponent,\n    DashboardWidgetRrdComponent,\n    DashboardWidgetSystemInformationComponent,\n    DashboardWidgetChartComponent,\n    DashboardWidgetFilesystemsStatusComponent,\n    DashboardWidgetGridComponent,\n    DashboardWidgetTextComponent,\n    DashboardWidgetValueComponent\n  ],\n  imports: [CommonModule, MaterialModule, RouterModule, SharedModule, TranslocoModule]\n})\nexport class DashboardModule {}\n","// This file is part of OpenMediaVault.\n//\n// @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n// @author    Volker Theile <volker.theile@openmediavault.org>\n// @copyright Copyright (c) 2009-2024 Volker Theile\n//\n// OpenMediaVault is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// any later version.\n//\n// OpenMediaVault is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport * as _ from 'lodash';\nimport { Subscription, timer } from 'rxjs';\n\ntype Column = {\n  x: number;\n  stackHeight: number;\n  stackCounter: number;\n  color: string;\n};\n\n/**\n * Inspired by https://gist.github.com/pingpoli/39dd5f19a934be466941ad26bedbffac#file-matrix-min-html\n */\n@Component({\n  selector: 'omv-green-rain',\n  templateUrl: './green-rain.component.html',\n  styleUrls: ['./green-rain.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GreenRainComponent implements OnInit, OnDestroy {\n  @ViewChild('canvas', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>;\n\n  @Input()\n  delay?: number = 0; // milliseconds\n\n  @Input()\n  fadeFactor?: number = 0.05;\n\n  @Input()\n  interval?: number = 75; // milliseconds\n\n  @Input()\n  primaryColor?: string = '#4cd964';\n\n  @Input()\n  secondaryColor?: string = '#33ff33';\n\n  private columns: Column[] = [];\n  private context: CanvasRenderingContext2D;\n  private tileSize: number;\n  private fontSize: number;\n  private fontFamily: string;\n  private timerSubscription: Subscription;\n  private initialDelayComplete = false;\n  private prefersReducedMotion = false;\n\n  private get width(): number {\n    const element = this.canvas.nativeElement as HTMLCanvasElement;\n    return element.width;\n  }\n\n  private get height(): number {\n    const element = this.canvas.nativeElement as HTMLCanvasElement;\n    return element.height;\n  }\n\n  constructor() {\n    this.prefersReducedMotion = window.matchMedia?.('(prefers-reduced-motion: reduce)').matches;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    if (this.prefersReducedMotion) {\n      return;\n    }\n    if (this.initialDelayComplete) {\n      this.stop();\n      this.init();\n      this.start(200);\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.prefersReducedMotion) {\n      return;\n    }\n\n    const element = this.canvas.nativeElement as HTMLCanvasElement;\n    const styles = window.getComputedStyle(element);\n\n    this.initialDelayComplete = false;\n    this.context = element.getContext('2d');\n    this.fontSize = parseInt(styles.fontSize, 10);\n    this.fontFamily = styles.fontFamily;\n    this.tileSize = this.fontSize + 2;\n\n    this.init();\n    this.start(this.delay);\n  }\n\n  ngOnDestroy(): void {\n    this.stop();\n  }\n\n  private init(): void {\n    const element = this.canvas.nativeElement as HTMLCanvasElement;\n\n    element.style.width = '100%';\n    element.style.height = '100%';\n    element.width = element.offsetWidth;\n    element.height = element.offsetHeight;\n\n    this.columns = [];\n    for (let i = 0; i < this.width / this.tileSize; i++) {\n      this.columns.push({\n        x: i * this.tileSize,\n        stackCounter: 0,\n        stackHeight: this.getRandomStackHeight(),\n        color: this.getRandomColor()\n      });\n    }\n  }\n\n  private start(delay: number = 0): void {\n    this.timerSubscription = timer(delay, this.interval).subscribe(() => {\n      this.initialDelayComplete = true;\n      this.draw();\n    });\n  }\n\n  private stop(): void {\n    if (this.timerSubscription) {\n      this.timerSubscription.unsubscribe();\n    }\n  }\n\n  private draw(): void {\n    this.context.font = `${this.fontSize}px ${this.fontFamily}`;\n    this.context.fillStyle = `rgba(0, 0, 0, ${this.fadeFactor})`;\n    this.context.fillRect(0, 0, this.width, this.height);\n\n    this.columns.forEach((column: Column) => {\n      this.context.fillStyle = column.color;\n      this.context.fillText(\n        this.getRandomText(),\n        column.x,\n        column.stackCounter * this.tileSize + this.tileSize\n      );\n\n      if (++column.stackCounter >= column.stackHeight) {\n        _.merge(column, {\n          stackCounter: 0,\n          stackHeight: this.getRandomStackHeight(),\n          color: this.getRandomColor()\n        });\n      }\n    });\n  }\n\n  private getRandomStackHeight(): number {\n    const maxStackHeight: number = _.ceil(this.height / this.tileSize);\n    return _.random(10, maxStackHeight);\n  }\n\n  private getRandomText(): string {\n    return String.fromCharCode(_.random(33, 126));\n  }\n\n  /**\n   * Get a random color with a distribution of 9:1 (primary\n   * to secondary).\n   *\n   * @private\n   */\n  private getRandomColor(): string {\n    return _.sample([\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.primaryColor,\n      this.secondaryColor\n    ]);\n  }\n}\n","<canvas #canvas></canvas>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'omv-guru-meditation',\n  templateUrl: './guru-meditation.component.html',\n  styleUrls: ['./guru-meditation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GuruMeditationComponent {}\n","<div class=\"message\">\n  <span>\n    {{ 'Software Failure.&nbsp;&nbsp;&nbsp;Press left mouse button to continue.' | transloco }}\n  </span>\n  <br>\n  <ng-content></ng-content>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport {\n  AfterViewInit,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { ActivatedRoute, Params, Route, Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { PageHintConfig } from '~/app/core/components/intuition/models/page-config.type';\nimport { decodeURIComponentDeep, format, formatDeep, isFormatable } from '~/app/functions.helper';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\n\nexport type PageContext = Record<string, any>;\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AbstractPageComponent<T> implements AfterViewInit, OnInit, OnDestroy {\n  @Input()\n  config: T;\n\n  // Event emitted when the form has been created.\n  @Output()\n  readonly afterViewInitEvent = new EventEmitter();\n\n  readonly routeUrlSegments: string[];\n  readonly routeConfig: Route;\n  routeParams: Params = {};\n  routeQueryParams: Params = {};\n\n  private activatedRouteSubscription: Subscription;\n\n  protected constructor(\n    protected activatedRoute: ActivatedRoute,\n    protected authSessionService: AuthSessionService,\n    protected router: Router\n  ) {\n    this.routeConfig = this.activatedRoute.routeConfig;\n    this.routeUrlSegments = _.trim(this.router.url, '/').split('/');\n    // Is the component configured via route data?\n    if (_.has(this.routeConfig, 'data.config')) {\n      this.config = _.cloneDeep(_.get(this.routeConfig, 'data.config')) as T;\n    }\n  }\n\n  /**\n   * Helper method to get the page related configuration that can be\n   * used in tokenized strings. It contains the route configuration and\n   * parameters. Note, to do not collide with form field values, the\n   * property names start with underscores.\n   */\n  get pageContext(): PageContext {\n    return {\n      _session: {\n        username: this.authSessionService.getUsername(),\n        permissions: this.authSessionService.getPermissions()\n      },\n      _routeConfig: this.routeConfig,\n      _routeParams: this.routeParams,\n      _routeQueryParams: this.routeQueryParams,\n      _routeUrlSegments: this.routeUrlSegments\n    };\n  }\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n    this.activatedRouteSubscription = combineLatest([\n      this.activatedRoute.params,\n      this.activatedRoute.queryParams\n    ]).subscribe(([params, queryParams]: Params[]) => {\n      this.routeParams = decodeURIComponentDeep(params);\n      this.routeQueryParams = decodeURIComponentDeep(queryParams);\n      this.onRouteParams();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.activatedRouteSubscription?.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.afterViewInitEvent.emit();\n  }\n\n  /**\n   * Sanitize the configuration, e.g. set default values or convert\n   * properties.\n   */\n  protected sanitizeConfig(): void {}\n\n  /**\n   * Sanitize the hint configuration.\n   */\n  protected sanitizeHintsConfig(): void {\n    const hints: PageHintConfig[] = _.get(this.config, 'hints', []) as PageHintConfig[];\n    _.forEach(hints, (hintConfig: PageHintConfig) => {\n      _.defaultsDeep(hintConfig, {\n        type: 'info',\n        dismissible: false\n      });\n    });\n  }\n\n  /**\n   * A callback method that is invoked immediately after the observable\n   * of the matrix parameters scoped to this route have been resolved.\n   */\n  protected onRouteParams(): void {}\n\n  /**\n   * Format the given configuration properties using the page context.\n   *\n   * @param paths The paths of the properties to format.\n   */\n  protected formatConfig(paths: Array<string>): void {\n    _.forEach(paths, (path) => {\n      const value = _.get(this.config as Record<string, any>, path);\n      if (isFormatable(value)) {\n        _.set(this.config as Record<string, any>, path, formatDeep(value, this.pageContext));\n      }\n    });\n  }\n\n  /**\n   * Format the hint configuration using the page context.\n   *\n   * @protected\n   */\n  protected formatHintsConfig(): void {\n    const hints: PageHintConfig[] = _.get(this.config, 'hints', []) as PageHintConfig[];\n    _.forEach(hints, (hintConfig: PageHintConfig) => {\n      if (isFormatable(hintConfig.text)) {\n        hintConfig.text = format(hintConfig.text, this.pageContext);\n      }\n    });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { concat } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport {\n  AbstractPageComponent,\n  PageContext\n} from '~/app/core/components/intuition/abstract-page-component';\nimport { FormDialogComponent } from '~/app/core/components/intuition/form-dialog/form-dialog.component';\nimport { DatatablePageActionConfig } from '~/app/core/components/intuition/models/datatable-page-action-config.type';\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { DatatablePageButtonConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { FormFieldConfig } from '~/app/core/components/intuition/models/form-field-config.type';\nimport { format, formatDeep, isFormatable } from '~/app/functions.helper';\nimport { translate } from '~/app/i18n.helper';\nimport {\n  DatatableComponent,\n  DataTableLoadParams\n} from '~/app/shared/components/datatable/datatable.component';\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { TaskDialogComponent } from '~/app/shared/components/task-dialog/task-dialog.component';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { DatatableAction } from '~/app/shared/models/datatable-action.type';\nimport { DatatableSelection } from '~/app/shared/models/datatable-selection.model';\nimport { RpcListResponse } from '~/app/shared/models/rpc.model';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  selector: 'omv-intuition-datatable-page',\n  templateUrl: './datatable-page.component.html',\n  styleUrls: ['./datatable-page.component.scss']\n})\nexport class DatatablePageComponent extends AbstractPageComponent<DatatablePageConfig> {\n  @ViewChild('table', { static: true })\n  table: DatatableComponent;\n\n  public loading = false;\n  public count = 0;\n  public selection = new DatatableSelection();\n\n  constructor(\n    @Inject(ActivatedRoute) activatedRoute: ActivatedRoute,\n    @Inject(AuthSessionService) authSessionService: AuthSessionService,\n    @Inject(Router) router: Router,\n    private blockUiService: BlockUiService,\n    private clipboardService: ClipboardService,\n    private dataStoreService: DataStoreService,\n    private rpcService: RpcService,\n    private dialogService: DialogService,\n    private notificationService: NotificationService\n  ) {\n    super(activatedRoute, authSessionService, router);\n  }\n\n  /**\n   * Append the current selection to the page context.\n   */\n  override get pageContext(): PageContext {\n    const result = _.merge(\n      {\n        _selected: this.selection.selected\n      },\n      super.pageContext\n    );\n    return result;\n  }\n\n  loadData(params: DataTableLoadParams) {\n    const store = this.config.store;\n    if (_.isPlainObject(store.proxy)) {\n      _.defaultsDeep(store.proxy.get, {\n        params: {\n          start: 0,\n          limit: -1\n        }\n      });\n      // Convert paging and sorting parameters.\n      if (_.isNumber(params.offset) && _.isNumber(params.limit)) {\n        _.merge(store.proxy.get.params, {\n          start: params.offset * params.limit,\n          limit: params.limit\n        });\n      }\n      if (_.isString(params.dir) && _.isString(params.prop)) {\n        _.merge(store.proxy.get.params, {\n          sortdir: params.dir,\n          sortfield: params.prop\n        });\n      }\n      if (!_.isUndefined(params.search)) {\n        _.merge(store.proxy.get.params, {\n          search: params.search\n        });\n      }\n    }\n    this.loading = true;\n    this.dataStoreService\n      .load(store)\n      .pipe(\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        (res: RpcListResponse) => {\n          // Update the total count of all rows.\n          if (_.isPlainObject(store.proxy)) {\n            this.count = res.total;\n          }\n        },\n        () => {\n          // Reset store and table in case of an error.\n          store.data = [];\n          this.count = 0;\n        }\n      );\n  }\n\n  /**\n   * Reload the data to refresh/update the datatable content.\n   */\n  reloadData() {\n    this.table.reloadData();\n  }\n\n  onSelectionChange(selection: DatatableSelection) {\n    this.selection = selection;\n  }\n\n  onActionClick(action: DatatablePageActionConfig): void {\n    const postConfirmFn = () => {\n      switch (action?.execute?.type) {\n        case 'url':\n          const url: string = format(\n            action.execute.url,\n            _.merge(\n              {},\n              this.pageContext,\n              this.selection.hasSingleSelection ? this.selection.first() : {}\n            )\n          );\n          this.router.navigateByUrl(url);\n          break;\n        case 'request':\n          const observables = [];\n          const request = action.execute.request;\n          if (this.selection.hasSelection) {\n            this.selection.selected.forEach((selected) => {\n              const params = formatDeep(request.params, _.merge({}, this.pageContext, selected));\n              observables.push(\n                this.rpcService[request.task ? 'requestTask' : 'request'](\n                  request.service,\n                  request.method,\n                  params || {}\n                )\n              );\n            });\n          } else {\n            const params = formatDeep(request.params, this.pageContext);\n            observables.push(\n              this.rpcService[request.task ? 'requestTask' : 'request'](\n                request.service,\n                request.method,\n                params || {}\n              )\n            );\n          }\n          // Block UI and display the progress message.\n          if (_.isString(request.progressMessage)) {\n            this.blockUiService.start(translate(request.progressMessage));\n          }\n          // Process each request one-by-one (NOT in parallel).\n          concat(...observables)\n            .pipe(\n              finalize(() => {\n                if (_.isString(request.progressMessage)) {\n                  this.blockUiService.stop();\n                }\n              })\n            )\n            .subscribe((res: any) => {\n              const data: Record<any, any> = _.merge(\n                {},\n                this.pageContext,\n                isFormatable(res) ? { _response: res } : {}\n              );\n              // Display a notification?\n              if (_.isString(request.successNotification)) {\n                const successNotification: string = format(request.successNotification, data);\n                this.notificationService.show(\n                  NotificationType.success,\n                  undefined,\n                  successNotification\n                );\n              }\n              // Copy the response to the clipboard?\n              if (_.isString(request.successCopyToClipboard)) {\n                const successCopyToClipboard: string = format(request.successCopyToClipboard, data);\n                this.clipboardService.copy(successCopyToClipboard);\n              }\n              // Navigate to the specified URL or reload the datatable\n              // content.\n              if (_.isString(request.successUrl)) {\n                const successUrl: string = format(request.successUrl, data);\n                this.router.navigateByUrl(successUrl);\n              } else {\n                this.reloadData();\n              }\n            });\n          break;\n        case 'taskDialog':\n          const taskDialog = _.cloneDeep(action.execute.taskDialog);\n          // Process tokenized configuration properties.\n          _.forEach(['request.params'], (path) => {\n            const value = _.get(taskDialog.config, path);\n            if (isFormatable(value)) {\n              _.set(taskDialog.config, path, formatDeep(value, this.pageContext));\n            }\n          });\n          const dialog = this.dialogService.open(TaskDialogComponent, {\n            width: _.get(taskDialog.config, 'width', '75%'),\n            data: _.omit(taskDialog.config, ['width'])\n          });\n          dialog.afterClosed().subscribe((res) => {\n            // Navigate to the configured URL or reload the datatable,\n            // but only if the dialog close input is `true`.\n            if (res) {\n              if (_.isString(taskDialog.successUrl)) {\n                this.navigate(taskDialog.successUrl);\n              } else {\n                this.reloadData();\n              }\n            }\n          });\n          break;\n        case 'formDialog':\n          const formDialogConfig = _.cloneDeep(action.execute.formDialog);\n          // Process tokenized form field properties.\n          _.forEach(formDialogConfig.fields, (fieldConfig: FormFieldConfig) => {\n            _.forEach(['store.proxy', 'store.filters', 'value', 'request.params'], (path) => {\n              const value = _.get(fieldConfig, path);\n              if (isFormatable(value)) {\n                _.set(fieldConfig, path, formatDeep(value, this.pageContext));\n              }\n            });\n          });\n          const formDialog = this.dialogService.open(FormDialogComponent, {\n            width: _.get(formDialogConfig, 'width', '50%'),\n            data: _.omit(formDialogConfig, ['width'])\n          });\n          // Reload datatable if pressed button returns `true`.\n          formDialog.afterClosed().subscribe((res) => res && this.reloadData());\n          break;\n        case 'copyToClipboard':\n          const copyToClipboard: string = format(\n            action.execute.copyToClipboard,\n            _.merge(\n              {},\n              this.pageContext,\n              this.selection.hasSingleSelection ? this.selection.first() : {}\n            )\n          );\n          this.clipboardService.copy(copyToClipboard);\n          break;\n      }\n    };\n    // Must the user confirm the action?\n    if (_.isPlainObject(action.confirmationDialogConfig)) {\n      const data = _.cloneDeep(action.confirmationDialogConfig);\n      if (_.isString(data.message)) {\n        data.message = format(data.message, this.pageContext);\n      }\n      const dialogRef = this.dialogService.open(ModalDialogComponent, {\n        width: _.get(data, 'width'),\n        data: _.omit(data, ['width'])\n      });\n      dialogRef.afterClosed().subscribe((res) => {\n        if (true === res) {\n          postConfirmFn();\n        }\n      });\n    } else {\n      postConfirmFn();\n    }\n  }\n\n  onDeleteActionClick(action: DatatableAction) {\n    let message: string = gettext('Do you really want to delete the selected item(s)?');\n    if (isFormatable(this.config.rowEnumFmt)) {\n      const items: Array<string> = _.map(this.selection.selected, (selected) =>\n        format(this.config.rowEnumFmt, selected)\n      );\n      message = format(\n        gettext(\n          'Do you really want to delete the selected item(s) <strong>{{ items | join(\", \") }}</strong>?'\n        ),\n        { items }\n      );\n    }\n    this.onActionClick(\n      _.merge(\n        {\n          confirmationDialogConfig: {\n            template: 'confirmation-danger',\n            title: gettext('Delete'),\n            message\n          },\n          execute: {\n            request: {\n              progressMessage: gettext('Please wait, deleting selected item(s) ...')\n            }\n          }\n        } as any,\n        _.omit(action, 'click')\n      )\n    );\n  }\n\n  onButtonClick(buttonConfig: DatatablePageButtonConfig) {\n    if (_.isFunction(buttonConfig.click)) {\n      buttonConfig.click(buttonConfig, this.config.store);\n    } else {\n      this.navigate(buttonConfig.url);\n    }\n  }\n\n  protected override sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      columnMode: 'flex',\n      hasActionBar: true,\n      hasHeader: true,\n      hasFooter: true,\n      selectionType: 'multi',\n      updateSelectionOnReload: 'always',\n      rowId: 'uuid',\n      limit: 25,\n      remotePaging: false,\n      remoteSorting: false,\n      remoteSearching: false,\n      autoLoad: true,\n      autoReload: false,\n      columns: [],\n      actions: [],\n      sorters: [],\n      sortType: 'single',\n      buttonAlign: 'end',\n      buttons: []\n    });\n    // Map icon from 'foo' to 'mdi:foo' if necessary.\n    this.config.icon = _.get(Icon, this.config.icon, this.config.icon);\n    // Pre-setup actions based on the specified template type.\n    this.sanitizeActionsConfig(this.config.actions);\n    // Set the default hint properties.\n    this.sanitizeHintsConfig();\n    // Set the default values of the buttons.\n    _.forEach(this.config.buttons, (button) => {\n      const template = _.get(button, 'template');\n      switch (template) {\n        case 'back':\n          _.defaultsDeep(button, {\n            text: gettext('Back')\n          });\n          break;\n        case 'cancel':\n          _.defaultsDeep(button, {\n            text: gettext('Cancel')\n          });\n          break;\n        case 'submit':\n          _.defaultsDeep(button, {\n            text: gettext('Save')\n          });\n          break;\n      }\n    });\n    // Relocate the 'submit' button to the end of the list.\n    const index = _.findIndex(this.config.buttons, ['template', 'submit']);\n    if (index !== -1) {\n      const button = this.config.buttons[index];\n      this.config.buttons.splice(index, 1);\n      this.config.buttons.push(button);\n    }\n  }\n\n  protected override onRouteParams() {\n    // Format tokenized configuration properties.\n    this.formatConfig([\n      'title',\n      'subTitle',\n      'store.proxy.service',\n      'store.proxy.get.method',\n      'store.proxy.get.params',\n      'store.filters'\n    ]);\n    this.formatHintsConfig();\n  }\n\n  private sanitizeActionsConfig(actions: DatatablePageActionConfig[]) {\n    _.forEach(actions, (action: DatatablePageActionConfig) => {\n      _.defaultsDeep(action, {\n        click: this.onActionClick.bind(this)\n      });\n      if (_.isArray(action.actions)) {\n        this.sanitizeActionsConfig(action.actions);\n      }\n      // Map icon from 'foo' to 'mdi:foo' if necessary.\n      action.icon = _.get(Icon, action.icon, action.icon);\n      // Process templates.\n      switch (action.template) {\n        case 'add':\n          _.defaultsDeep(action, {\n            id: 'add',\n            type: 'iconButton',\n            text: gettext('Add'),\n            tooltip: gettext('Add'),\n            icon: Icon.add\n          });\n          break;\n        case 'create':\n          _.defaultsDeep(action, {\n            id: 'create',\n            type: 'iconButton',\n            text: gettext('Create'),\n            tooltip: gettext('Create'),\n            icon: Icon.add\n          });\n          break;\n        case 'edit':\n          _.defaultsDeep(action, {\n            id: 'edit',\n            type: 'iconButton',\n            text: gettext('Edit'),\n            tooltip: gettext('Edit'),\n            icon: Icon.edit,\n            enabledConstraints: {\n              minSelected: 1,\n              maxSelected: 1\n            }\n          });\n          break;\n        case 'delete':\n          _.defaultsDeep(action, {\n            id: 'delete',\n            type: 'iconButton',\n            text: gettext('Delete'),\n            tooltip: gettext('Delete'),\n            icon: Icon.delete,\n            enabledConstraints: {\n              minSelected: 1\n            }\n          });\n          _.merge(action, {\n            click: this.onDeleteActionClick.bind(this)\n          });\n          break;\n        default:\n          _.defaultsDeep(action, {\n            execute: {\n              request: {\n                progressMessage: gettext('Please wait, processing selected item(s) ...')\n              }\n            }\n          });\n          break;\n      }\n    });\n  }\n\n  private navigate(url: string) {\n    const formattedUrl = format(url, this.pageContext);\n    this.router.navigateByUrl(formattedUrl);\n  }\n}\n","<div *ngIf=\"config.hints\"\n     class=\"omv-display-flex omv-flex-column\">\n  <omv-alert-panel *ngFor=\"let hint of config.hints\"\n                   class=\"omv-flex-1 omv-m omv-mb-z\"\n                   [type]=\"hint.type\"\n                   [hasTitle]=\"false\"\n                   [hasMargin]=\"false\"\n                   [dismissible]=\"hint.dismissible\"\n                   [stateId]=\"hint.stateId\">\n    <span [innerHtml]=\"hint.text | transloco | nl2br | sanitizeHtml\"></span>\n  </omv-alert-panel>\n</div>\n<mat-card>\n  <ng-container *ngTemplateOutlet=\"renderCardHeader\"></ng-container>\n  <mat-card-content>\n    <omv-datatable #table\n                   [ngClass]=\"{'has-card-header': config.title || config.subTitle }\"\n                   [stateId]=\"config.stateId\"\n                   [loadingIndicator]=\"loading\"\n                   [rowId]=\"config.rowId\"\n                   [data]=\"config.store.data\"\n                   [autoLoad]=\"config.autoLoad\"\n                   [autoReload]=\"config.autoReload\"\n                   [count]=\"count\"\n                   [columns]=\"config.columns\"\n                   [columnMode]=\"config.columnMode\"\n                   [hasActionBar]=\"config.hasActionBar\"\n                   [hasStickyActionBar]=\"true\"\n                   [ownerContainer]=\"'#omv-workbench-router-outlet'\"\n                   [hasHeader]=\"config.hasHeader\"\n                   [hasFooter]=\"config.hasFooter\"\n                   [hasSearchField]=\"config.hasSearchField\"\n                   [limit]=\"config.limit\"\n                   [selectionType]=\"config.selectionType\"\n                   (selectionChangeEvent)=\"onSelectionChange($event)\"\n                   [updateSelectionOnReload]=\"config.updateSelectionOnReload\"\n                   (loadDataEvent)=\"loadData($event)\"\n                   [remoteSorting]=\"config.remoteSorting\"\n                   [remotePaging]=\"config.remotePaging\"\n                   [remoteSearching]=\"config.remoteSearching\"\n                   [sorters]=\"config.sorters\"\n                   [sortType]=\"config.sortType\">\n      <omv-datatable-actions [actions]=\"config.actions\"\n                             [selection]=\"selection\"\n                             [table]=\"table\">\n      </omv-datatable-actions>\n    </omv-datatable>\n  </mat-card-content>\n  <mat-card-actions *ngIf=\"config.buttons.length\"\n                    class=\"omv-display-flex omv-flex-row\"\n                    [ngClass]=\"{'omv-justify-content-start': config.buttonAlign === 'start', 'omv-justify-content-center': config.buttonAlign === 'center', 'omv-justify-content-end': config.buttonAlign === 'end'}\">\n    <ng-container *ngFor=\"let button of config.buttons\">\n      <omv-submit-button *ngIf=\"button.template === 'submit'\"\n                         [disabled]=\"button.disabled\"\n                         (buttonClick)=\"onButtonClick(button)\">\n        {{ button.text | transloco }}\n      </omv-submit-button>\n      <button *ngIf=\"button.template !== 'submit'\"\n              mat-flat-button\n              [class]=\"button.class\"\n              [disabled]=\"button.disabled\"\n              (click)=\"onButtonClick(button)\">\n        {{ button.text | transloco }}\n      </button>\n    </ng-container>\n  </mat-card-actions>\n</mat-card>\n\n<ng-template #renderCardHeader>\n  <ng-container *ngIf=\"config.title || config.subTitle\">\n    <ng-container *ngIf=\"config.icon\">\n      <mat-card-header>\n        <mat-icon mat-card-avatar\n                  svgIcon=\"{{ config.icon }}\">\n        </mat-icon>\n        <mat-card-title *ngIf=\"config.title\">\n          {{ config.title }}\n        </mat-card-title>\n        <mat-card-subtitle *ngIf=\"config.subTitle\">\n          {{ config.subTitle }}\n        </mat-card-subtitle>\n      </mat-card-header>\n    </ng-container>\n    <ng-container *ngIf=\"!config.icon\">\n      <mat-card-title-group>\n        <mat-card-title *ngIf=\"config.title\">\n          {{ config.title }}\n        </mat-card-title>\n        <mat-card-subtitle *ngIf=\"config.subTitle\">\n          {{ config.subTitle }}\n        </mat-card-subtitle>\n      </mat-card-title-group>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { finalize } from 'rxjs/operators';\n\nimport { FormComponent } from '~/app/core/components/intuition/form/form.component';\nimport { FormFieldName } from '~/app/core/components/intuition/models/form.type';\nimport { FormValues } from '~/app/core/components/intuition/models/form.type';\nimport {\n  FormDialogButtonConfig,\n  FormDialogConfig\n} from '~/app/core/components/intuition/models/form-dialog-config.type';\nimport { format, formatDeep, isFormatable } from '~/app/functions.helper';\nimport { translate } from '~/app/i18n.helper';\nimport { TaskDialogComponent } from '~/app/shared/components/task-dialog/task-dialog.component';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n/**\n * A dialog that renders the specified form fields. On clicking the\n * 'Submit' button the form values are returned as an object, otherwise\n * 'false' on 'Cancel'.\n */\n@Component({\n  selector: 'omv-intuition-form-dialog',\n  templateUrl: './form-dialog.component.html',\n  styleUrls: ['./form-dialog.component.scss']\n})\nexport class FormDialogComponent {\n  @ViewChild(FormComponent, { static: true })\n  form: FormComponent;\n\n  // Internal\n  public config: FormDialogConfig;\n\n  constructor(\n    private blockUiService: BlockUiService,\n    private dialogService: DialogService,\n    private router: Router,\n    private rpcService: RpcService,\n    private notificationService: NotificationService,\n    private matDialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data: FormDialogConfig\n  ) {\n    this.config = data;\n    this.sanitizeConfig();\n  }\n\n  /**\n   * Sets the form values.\n   *\n   * @param values The values to be set.\n   * @param markAsPristine Mark the form as pristine. Defaults to `true`.\n   */\n  setFormValues(values: FormValues, markAsPristine = true): void {\n    this.form.formGroup.patchValue(values);\n    if (markAsPristine) {\n      this.form.formGroup.markAsPristine();\n    }\n  }\n\n  /**\n   * Get the values to be submitted. Ignore form fields where\n   * 'submitValue=false' is set.\n   *\n   * @return Returns an object containing the form field values.\n   */\n  getFormValues(): FormValues {\n    const values: FormValues = _.pickBy(\n      this.form.formGroup.getRawValue(),\n      (value: any, key: FormFieldName) => {\n        const field = _.find(this.config.fields, { name: key });\n        if (_.isUndefined(field)) {\n          return true;\n        }\n        return _.defaultTo(field.submitValue, true);\n      }\n    );\n    return values;\n  }\n\n  onSubmit() {\n    this.onButtonClick(this.config.buttons.submit);\n  }\n\n  onCancel() {\n    this.onButtonClick(this.config.buttons.cancel);\n  }\n\n  protected sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      fields: [],\n      buttons: {\n        submit: {\n          text: gettext('Save')\n        },\n        cancel: {\n          text: gettext('Cancel'),\n          dialogResult: false\n        }\n      }\n    });\n  }\n\n  private onButtonClick(buttonConfig: FormDialogButtonConfig) {\n    const values: FormValues = this.getFormValues();\n    const dialogResult = _.defaultTo(buttonConfig.dialogResult, values);\n    switch (buttonConfig?.execute?.type) {\n      case 'url':\n        this.matDialogRef.close(dialogResult);\n        const url = format(buttonConfig.execute.url, values);\n        this.router.navigateByUrl(url);\n        break;\n      case 'request':\n        const request = buttonConfig.execute.request;\n        // Process the RPC parameters.\n        let params = _.merge({}, values, formatDeep(request.params, values));\n        if (_.get(request, 'intersectParams', false)) {\n          const keys = _.intersection(_.keys(request.params), _.keys(values));\n          params = _.pick(params, keys);\n        }\n        // Block UI and display the progress message.\n        if (_.isString(request.progressMessage)) {\n          this.blockUiService.start(translate(request.progressMessage));\n        }\n        this.rpcService[request.task ? 'requestTask' : 'request'](\n          request.service,\n          request.method,\n          params\n        )\n          .pipe(\n            finalize(() => {\n              if (_.isString(request.progressMessage)) {\n                this.blockUiService.stop();\n              }\n            })\n          )\n          .subscribe(() => {\n            // Close dialog on success only, so the user can change the\n            // data in case of an error without entering the form data\n            // again from scratch.\n            this.matDialogRef.close(dialogResult);\n            // Display a notification?\n            if (_.isString(request.successNotification)) {\n              this.notificationService.show(\n                NotificationType.success,\n                undefined,\n                format(request.successNotification, values)\n              );\n            }\n            // Navigate to a specified URL?\n            if (_.isString(request.successUrl)) {\n              const successUrl = format(request.successUrl, values);\n              this.router.navigateByUrl(successUrl);\n            }\n          });\n        break;\n      case 'taskDialog':\n        const taskDialog = _.cloneDeep(buttonConfig.execute.taskDialog);\n        // Process tokenized configuration properties.\n        _.forEach(['request.params'], (path) => {\n          const value = _.get(taskDialog.config, path);\n          if (isFormatable(value)) {\n            _.set(taskDialog.config, path, formatDeep(value, values));\n          }\n        });\n        const dialog = this.dialogService.open(TaskDialogComponent, {\n          width: _.get(taskDialog.config, 'width', '75%'),\n          data: _.omit(taskDialog.config, ['width'])\n        });\n        // Navigate to the specified URL if pressed button returns `true`.\n        dialog.afterClosed().subscribe((res) => {\n          if (res) {\n            // Close dialog on success only, so the user can change the\n            // data in case of an error without entering the form data\n            // again from scratch.\n            this.matDialogRef.close(dialogResult);\n            // Navigate to a specified URL?\n            if (_.isString(taskDialog.successUrl)) {\n              const successUrl = format(taskDialog.successUrl, values);\n              this.router.navigateByUrl(successUrl);\n            }\n          }\n        });\n        break;\n      default:\n        this.matDialogRef.close(dialogResult);\n        break;\n    }\n  }\n}\n","<ng-container *ngTemplateOutlet=\"renderDialogHeader\"></ng-container>\n<mat-dialog-content>\n  <!--\n  Wrap form inside a card like it is done in 'omv-intuition-form-page' to get\n  the same layout (incl. font size, line-height, ...) for the form fields.\n  -->\n  <mat-card>\n    <mat-card-content>\n      <omv-intuition-form [id]=\"config.id\"\n                          [config]=\"config.fields\">\n      </omv-intuition-form>\n    </mat-card-content>\n  </mat-card>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button *ngIf=\"config.buttons.cancel && !config.buttons.cancel.hidden\"\n          mat-flat-button\n          color=\"accent\"\n          (click)=\"onCancel()\">\n    {{ config.buttons.cancel.text | transloco }}\n  </button>\n  <omv-submit-button *ngIf=\"config.buttons.submit && !config.buttons.submit.hidden\"\n                     cdkFocusInitial\n                     [form]=\"config.id\"\n                     [formGroup]=\"form.formGroup\"\n                     [disabled]=\"form.formGroup.pristine\"\n                     (buttonClick)=\"onSubmit()\">\n    {{ config.buttons.submit.text | transloco }}\n  </omv-submit-button>\n</mat-dialog-actions>\n\n<ng-template #renderDialogHeader>\n  <mat-card *ngIf=\"config.title || config.subTitle\">\n    <ng-container *ngIf=\"config.icon\">\n      <mat-card-header>\n        <mat-icon mat-card-avatar\n                  svgIcon=\"{{ config.icon }}\">\n        </mat-icon>\n        <mat-card-title *ngIf=\"config.title\">\n          {{ config.title }}\n        </mat-card-title>\n        <mat-card-subtitle *ngIf=\"config.subTitle\">\n          {{ config.subTitle }}\n        </mat-card-subtitle>\n      </mat-card-header>\n    </ng-container>\n    <ng-container *ngIf=\"!config.icon\">\n      <mat-card-title-group>\n        <mat-card-title *ngIf=\"config.title\">\n          {{ config.title }}\n        </mat-card-title>\n        <mat-card-subtitle *ngIf=\"config.subTitle\">\n          {{ config.subTitle }}\n        </mat-card-subtitle>\n      </mat-card-title-group>\n    </ng-container>\n  </mat-card>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AfterViewInit, Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { EMPTY, Subscription } from 'rxjs';\nimport { catchError, debounceTime, finalize } from 'rxjs/operators';\n\nimport {\n  AbstractPageComponent,\n  PageContext\n} from '~/app/core/components/intuition/abstract-page-component';\nimport { FormComponent } from '~/app/core/components/intuition/form/form.component';\nimport {\n  flattenFormFieldConfig,\n  setupConfObjUuidFields\n} from '~/app/core/components/intuition/functions.helper';\nimport { FormFieldName } from '~/app/core/components/intuition/models/form.type';\nimport { FormValues } from '~/app/core/components/intuition/models/form.type';\nimport { FormFieldConfig } from '~/app/core/components/intuition/models/form-field-config.type';\nimport {\n  FormPageButtonConfig,\n  FormPageConfig\n} from '~/app/core/components/intuition/models/form-page-config.type';\nimport { Unsubscribe } from '~/app/decorators';\nimport { format, formatDeep, isFormatable, toBoolean } from '~/app/functions.helper';\nimport { translate } from '~/app/i18n.helper';\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { TaskDialogComponent } from '~/app/shared/components/task-dialog/task-dialog.component';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Dirty } from '~/app/shared/models/dirty.interface';\nimport { RpcObjectResponse } from '~/app/shared/models/rpc.model';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { ConstraintService } from '~/app/shared/services/constraint.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n/**\n * This component will render a page containing a form with the\n * configured form fields. By default, this page contains a 'Save'\n * and 'Cancel' button. The 'Save' button is enabled when the form\n * is dirty and the form validation was successfully.\n */\n@Component({\n  selector: 'omv-intuition-form-page',\n  templateUrl: './form-page.component.html',\n  styleUrls: ['./form-page.component.scss']\n})\nexport class FormPageComponent\n  extends AbstractPageComponent<FormPageConfig>\n  implements AfterViewInit, OnInit, Dirty\n{\n  @ViewChild(FormComponent, { static: true })\n  form: FormComponent;\n\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  // Internal\n  public editing = false;\n  public loading = false;\n  public error: HttpErrorResponse;\n\n  constructor(\n    @Inject(ActivatedRoute) activatedRoute: ActivatedRoute,\n    @Inject(AuthSessionService) authSessionService: AuthSessionService,\n    @Inject(Router) router: Router,\n    private blockUiService: BlockUiService,\n    private rpcService: RpcService,\n    private dialogService: DialogService,\n    private notificationService: NotificationService\n  ) {\n    super(activatedRoute, authSessionService, router);\n    // Set the form mode to 'Create' (default) or 'Edit'.\n    // This depends on the component configuration that is done via the\n    // router config.\n    // Examples:\n    // {\n    //   path: 'hdparm/create',\n    //   component: DiskFormPageComponent,\n    //   data: { title: gettext('Create'), editing: false }\n    // }\n    // {\n    //   path: 'hdparm/edit/:devicefile',\n    //   component: DiskFormPageComponent,\n    //   data: { title: gettext('Edit'), editing: true }\n    // }\n    this.editing = _.get(this.routeConfig, 'data.editing', false);\n  }\n\n  /**\n   * Append the current page mode. This can be editing or creating.\n   */\n  override get pageContext(): PageContext {\n    return _.merge(\n      {\n        _editing: this.editing\n      },\n      super.pageContext\n    );\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    // Flatten all form field configurations into an array to be able to\n    // iterate over them easily.\n    const allFields = flattenFormFieldConfig(this.config.fields);\n    // Process the 'disabled' attribute in all form field configurations.\n    _.forEach(allFields, (fieldConfig: FormFieldConfig) => {\n      if (_.has(fieldConfig, 'disabled') && isFormatable(fieldConfig.disabled)) {\n        fieldConfig.disabled = toBoolean(format(String(fieldConfig.disabled), this.pageContext));\n      }\n    });\n    // Process the 'required' validator in all form field configurations.\n    _.forEach(allFields, (fieldConfig: FormFieldConfig) => {\n      if (\n        _.has(fieldConfig, 'validators.required') &&\n        isFormatable(fieldConfig.validators.required)\n      ) {\n        fieldConfig.validators.required = toBoolean(\n          format(String(fieldConfig.validators.required), this.pageContext)\n        );\n      }\n    });\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    // Process all specified constraints per button.\n    if (_.some(this.config.buttons, (button) => _.isPlainObject(button.enabledConstraint))) {\n      this.subscriptions.add(\n        this.form.formGroup.valueChanges.pipe(debounceTime(5)).subscribe((values: FormValues) => {\n          _.forEach(this.config.buttons, (button) => {\n            if (_.isPlainObject(button.enabledConstraint)) {\n              button.disabled = !ConstraintService.test(button.enabledConstraint, values);\n            }\n          });\n        })\n      );\n    }\n  }\n\n  isDirty(): boolean {\n    return this.form.formGroup.dirty;\n  }\n\n  markAsDirty(): void {\n    this.form.formGroup.markAsDirty();\n  }\n\n  markAsPristine(): void {\n    this.form.formGroup.markAsPristine();\n  }\n\n  loadData(): void {\n    const request = this.config.request;\n    if (_.isString(request?.service) && _.isPlainObject(request?.get)) {\n      if (_.isString(request.get.onlyIf)) {\n        const result: string = format(request.get.onlyIf, this.pageContext);\n        if (false === toBoolean(result)) {\n          return;\n        }\n      }\n      this.loading = true;\n      // noinspection DuplicatedCode\n      this.rpcService[request.get.task ? 'requestTask' : 'request'](\n        request.service,\n        request.get.method,\n        request.get.params || {}\n      )\n        .pipe(\n          catchError((error) => {\n            this.error = error;\n            return EMPTY;\n          }),\n          finalize(() => {\n            this.loading = false;\n          })\n        )\n        .subscribe((res: RpcObjectResponse) => {\n          this.onLoadData(res);\n        });\n    }\n  }\n\n  onLoadData(res: RpcObjectResponse): void {\n    const request = this.config.request;\n    // Transform the request response?\n    if (_.isPlainObject(request?.get?.transform)) {\n      res = RpcObjectResponse.transform(res, request.get.transform);\n    }\n    // Filter the request response?\n    if (_.isPlainObject(request?.get?.filter)) {\n      const filterConfig = request.get.filter;\n      res = RpcObjectResponse.filter(res, filterConfig.props, filterConfig.mode);\n    }\n    // Update the form field values.\n    this.setFormValues(res);\n  }\n\n  /**\n   * Sets the form values.\n   *\n   * @param values The values to be set.\n   */\n  setFormValues(values: FormValues, markAsPristine = true): void {\n    this.form.formGroup.patchValue(values);\n    if (markAsPristine) {\n      this.form.formGroup.markAsPristine();\n    }\n  }\n\n  /**\n   * Get the values to be submitted. Ignore form fields where\n   * 'submitValue=false' is set.\n   *\n   * @return Returns an object containing the form field values.\n   */\n  getFormValues(): FormValues {\n    const allFields: Array<FormFieldConfig> = flattenFormFieldConfig(this.config.fields);\n    const values: FormValues = _.pickBy(\n      this.form.formGroup.getRawValue(),\n      (value: any, key: FormFieldName) => {\n        const field = _.find(allFields, { name: key });\n        if (_.isUndefined(field)) {\n          return true;\n        }\n        return _.defaultTo(field.submitValue, true);\n      }\n    );\n    return values;\n  }\n\n  onButtonClick(buttonConfig: FormPageButtonConfig) {\n    let values: FormValues = this.getFormValues();\n    // Closure that handles the button action.\n    const doButtonActionFn = () => {\n      switch (buttonConfig?.execute?.type) {\n        case 'click':\n          if (_.isFunction(buttonConfig.execute.click)) {\n            // Call the callback function.\n            buttonConfig.execute.click(buttonConfig, values);\n          }\n          break;\n        case 'url':\n          // Check if there is a return URL specified. This will override the configured URL.\n          const returnUrl = _.get(this.activatedRoute.snapshot.queryParams, 'returnUrl');\n          if (_.isString(returnUrl)) {\n            this.router.navigateByUrl(returnUrl);\n            break;\n          }\n          if (_.isString(buttonConfig.execute.url)) {\n            // Navigate to the specified URL.\n            const url = format(buttonConfig.execute.url, _.merge({}, values, this.pageContext));\n            this.router.navigateByUrl(url);\n          }\n          break;\n        case 'request':\n          if (_.isPlainObject(buttonConfig.execute.request)) {\n            // Execute the specified request.\n            const request = buttonConfig.execute.request;\n            if (_.isString(request.progressMessage)) {\n              this.blockUiService.start(translate(request.progressMessage));\n            }\n            this.rpcService[request.task ? 'requestTask' : 'request'](\n              request.service,\n              request.method,\n              formatDeep(request.params, this.pageContext)\n            )\n              .pipe(\n                finalize(() => {\n                  if (_.isString(request.progressMessage)) {\n                    this.blockUiService.stop();\n                  }\n                })\n              )\n              .subscribe((res: any) => {\n                // Display a notification?\n                if (_.isString(request.successNotification)) {\n                  this.notificationService.show(\n                    NotificationType.success,\n                    undefined,\n                    format(\n                      request.successNotification,\n                      _.merge({ _response: res }, this.pageContext, values)\n                    )\n                  );\n                }\n                // Navigate to a specified URL?\n                if (_.isString(request.successUrl)) {\n                  const url = format(\n                    request.successUrl,\n                    _.merge({ _response: res }, this.pageContext, values)\n                  );\n                  this.router.navigateByUrl(url);\n                }\n              });\n          }\n          break;\n        case 'taskDialog':\n          const taskDialog = _.cloneDeep(buttonConfig.execute.taskDialog);\n          // Process tokenized configuration properties.\n          _.forEach(['request.params'], (path) => {\n            const value = _.get(taskDialog.config, path);\n            if (isFormatable(value)) {\n              _.set(\n                taskDialog.config,\n                path,\n                formatDeep(value, _.merge({}, values, this.pageContext))\n              );\n            }\n          });\n          const dialog = this.dialogService.open(TaskDialogComponent, {\n            width: _.get(taskDialog.config, 'width', '75%'),\n            data: _.omit(taskDialog.config, ['width'])\n          });\n          // Navigate to the specified URL if pressed button returns `true`.\n          dialog.afterClosed().subscribe((res) => {\n            if (res && _.isString(taskDialog.successUrl)) {\n              const url = format(taskDialog.successUrl, _.merge({}, values, this.pageContext));\n              this.router.navigateByUrl(url);\n            }\n          });\n          break;\n      }\n    };\n    // Closure that handles the button pre-action.\n    const doPreButtonActionFn = () => {\n      // Must the user confirm the action?\n      if (_.isPlainObject(buttonConfig.confirmationDialogConfig)) {\n        const data = _.cloneDeep(buttonConfig.confirmationDialogConfig);\n        if (_.isString(data.message)) {\n          data.message = format(data.message, values);\n        }\n        const dialogRef = this.dialogService.open(ModalDialogComponent, {\n          width: _.get(data, 'width'),\n          data: _.omit(data, ['width'])\n        });\n        dialogRef.afterClosed().subscribe((res: any) => {\n          if (true === res) {\n            doButtonActionFn();\n          }\n        });\n      } else {\n        doButtonActionFn();\n      }\n    };\n    if ('submit' === buttonConfig.template || buttonConfig.submit) {\n      // Process 'Submit' buttons.\n      const request = this.config?.request;\n      if (\n        _.isPlainObject(request) &&\n        _.isString(request.service) &&\n        _.isPlainObject(request.post)\n      ) {\n        const doRpcRequestFn = () => {\n          // Process the RPC parameters.\n          if (_.isPlainObject(request.post.params)) {\n            const params = formatDeep(request.post.params, _.merge(this.pageContext, values));\n            let tmp = _.merge({}, values, params);\n            if (_.get(request.post, 'intersectParams', false)) {\n              const keys = _.intersection(_.keys(request.post.params), _.keys(values));\n              tmp = _.pick(tmp, keys);\n            }\n            values = tmp;\n          }\n          if (_.isString(request.post.progressMessage)) {\n            this.blockUiService.start(translate(request.post.progressMessage));\n          } else {\n            // Show a default progress message because the RPC might\n            // take some while.\n            this.blockUiService.start(translate(gettext('Please wait ...')));\n          }\n          this.rpcService[request.post.task ? 'requestTask' : 'request'](\n            request.service,\n            request.post.method,\n            values\n          )\n            .pipe(\n              finalize(() => {\n                this.blockUiService.stop();\n              })\n            )\n            .subscribe(() => {\n              // At this point we can assume the form values have been\n              // submitted and stored, so we can safely mark the form as\n              // pristine again.\n              this.markAsPristine();\n              // Display a success notification?\n              const notificationTitle = _.get(this.routeConfig, 'data.notificationTitle');\n              if (!_.isEmpty(notificationTitle)) {\n                this.notificationService.show(\n                  NotificationType.success,\n                  undefined,\n                  format(notificationTitle, _.merge({}, this.pageContext, values))\n                );\n              }\n              doPreButtonActionFn();\n            });\n        };\n        // Has the user to confirm the RPC request?\n        if (_.isPlainObject(request.post.confirmationDialogConfig)) {\n          const data = _.cloneDeep(request.post.confirmationDialogConfig);\n          if (_.isString(data.message)) {\n            data.message = format(data.message, values);\n          }\n          const dialogRef = this.dialogService.open(ModalDialogComponent, {\n            width: _.get(data, 'width'),\n            data: _.omit(data, ['width'])\n          });\n          dialogRef.afterClosed().subscribe((res: any) => {\n            if (true === res) {\n              // Execute the RPC request.\n              doRpcRequestFn();\n            }\n          });\n        } else {\n          doRpcRequestFn();\n        }\n      } else {\n        this.markAsPristine();\n        doPreButtonActionFn();\n      }\n    } else {\n      doPreButtonActionFn();\n    }\n  }\n\n  protected override sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      buttonAlign: 'end',\n      buttons: []\n    });\n    // Set the default hint properties.\n    this.sanitizeHintsConfig();\n    // Populate the datamodel identifier field. This must be done here\n    // in addition to the `FormComponent`, since the form has not yet\n    // been initialized at this point in time and the fields have\n    // therefore not yet been set up.\n    setupConfObjUuidFields(this.config.fields);\n    // Set the default values of the buttons.\n    _.forEach(this.config.buttons, (button) => {\n      _.defaultsDeep(button, {\n        disabled: false\n      });\n      const template = _.get(button, 'template');\n      switch (template) {\n        case 'back':\n          _.defaultsDeep(button, {\n            text: gettext('Back')\n          });\n          break;\n        case 'cancel':\n          _.defaultsDeep(button, {\n            text: gettext('Cancel')\n          });\n          break;\n        case 'submit':\n          _.defaultsDeep(button, {\n            submit: true,\n            text: gettext('Save')\n          });\n          break;\n      }\n    });\n    // Relocate the 'submit' button to the end of the list.\n    const index = _.findIndex(this.config.buttons, ['template', 'submit']);\n    if (index !== -1) {\n      const button = this.config.buttons[index];\n      this.config.buttons.splice(index, 1);\n      this.config.buttons.push(button);\n    }\n    // Map icon from 'foo' to 'mdi:foo' if necessary.\n    this.config.icon = _.get(Icon, this.config.icon, this.config.icon);\n  }\n\n  protected override onRouteParams() {\n    const allFields = flattenFormFieldConfig(this.config.fields);\n    // Format tokenized configuration properties.\n    this.formatConfig(['title', 'subTitle', 'request.get.method', 'request.get.params']);\n    this.formatHintsConfig();\n    // Load the content if form page is in 'editing' mode.\n    if (this.editing) {\n      this.loadData();\n    } else {\n      // Inject the query parameters of the route into the form fields.\n      // This will override the configured form field values.\n      _.forEach(allFields, (fieldConfig: FormFieldConfig) => {\n        if (_.has(this.routeQueryParams, fieldConfig.name)) {\n          fieldConfig.value = _.get(this.routeQueryParams, fieldConfig.name);\n        }\n      });\n    }\n    // Inject the route configuration and parameters into various form\n    // field configuration properties.\n    _.forEach(allFields, (fieldConfig: FormFieldConfig) => {\n      _.forEach(['store.proxy', 'store.filters', 'value', 'request.params'], (path) => {\n        const value = _.get(fieldConfig, path);\n        if (isFormatable(value)) {\n          _.set(fieldConfig, path, formatDeep(value, this.pageContext));\n        }\n      });\n    });\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  <omv-alert-panel type=\"info\">\n    {{ \"Please wait, the data is being loaded ...\" | transloco }}\n  </omv-alert-panel>\n</ng-container>\n<omv-alert-panel *ngIf=\"error && !loading\"\n                 type=\"error\">\n  {{ error | httpErrorResponse:'message' }}\n</omv-alert-panel>\n<div *ngIf=\"config.hints\"\n     [ngClass]=\"{'omv-display-none': loading || error}\"\n     class=\"omv-display-flex omv-flex-column\">\n  <omv-alert-panel *ngFor=\"let hint of config.hints\"\n                   class=\"omv-flex-1 omv-m omv-mb-z\"\n                   [type]=\"hint.type\"\n                   [hasTitle]=\"false\"\n                   [hasMargin]=\"false\"\n                   [dismissible]=\"hint.dismissible\"\n                   [stateId]=\"hint.stateId\">\n    <span [innerHtml]=\"hint.text | transloco | nl2br | sanitizeHtml\"></span>\n  </omv-alert-panel>\n</div>\n<mat-card [ngClass]=\"{'omv-display-none': loading || error}\">\n  <ng-container *ngTemplateOutlet=\"renderCardHeader\"></ng-container>\n  <mat-card-content>\n    <omv-intuition-form [id]=\"config.id\"\n                        [config]=\"config.fields\"\n                        [context]=\"pageContext\">\n    </omv-intuition-form>\n  </mat-card-content>\n  <mat-card-actions *ngIf=\"config.buttons.length\"\n                    class=\"omv-display-flex omv-flex-row\"\n                    [ngClass]=\"{'omv-justify-content-start': config.buttonAlign === 'start', 'omv-justify-content-center': config.buttonAlign === 'center', 'omv-justify-content-end': config.buttonAlign === 'end'}\">\n    <ng-container *ngFor=\"let button of config.buttons\">\n      <omv-submit-button *ngIf=\"button.template === 'submit'\"\n                         [form]=\"config.id\"\n                         [formGroup]=\"form.formGroup\"\n                         [disabled]=\"button.disabled || (editing && form.formGroup.pristine)\"\n                         (buttonClick)=\"onButtonClick(button)\">\n        {{ button.text | transloco }}\n      </omv-submit-button>\n      <button *ngIf=\"button.template !== 'submit'\"\n              mat-flat-button\n              [class]=\"button.class\"\n              [disabled]=\"button.disabled\"\n              (click)=\"onButtonClick(button)\">\n        {{ button.text | transloco }}\n      </button>\n    </ng-container>\n  </mat-card-actions>\n</mat-card>\n\n<ng-template #renderCardHeader>\n  <ng-container *ngIf=\"config.title || config.subTitle\">\n    <ng-container *ngIf=\"config.icon\">\n      <mat-card-header>\n        <mat-icon mat-card-avatar\n                  svgIcon=\"{{ config.icon }}\">\n        </mat-icon>\n        <mat-card-title *ngIf=\"config.title\">\n          {{ config.title }}\n        </mat-card-title>\n        <mat-card-subtitle *ngIf=\"config.subTitle\">\n          {{ config.subTitle }}\n        </mat-card-subtitle>\n      </mat-card-header>\n    </ng-container>\n    <ng-container *ngIf=\"!config.icon\">\n      <mat-card-title-group>\n        <mat-card-title *ngIf=\"config.title\">\n          {{ config.title }}\n        </mat-card-title>\n        <mat-card-subtitle *ngIf=\"config.subTitle\">\n          {{ config.subTitle }}\n        </mat-card-subtitle>\n      </mat-card-title-group>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { FormFieldConfig } from '~/app/core/components/intuition/models/form-field-config.type';\nimport { Icon } from '~/app/shared/enum/icon.enum';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AbstractFormFieldComponent implements OnInit {\n  @Input()\n  config: FormFieldConfig;\n\n  @Input()\n  formGroup: FormGroup;\n\n  public icon = Icon;\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n  }\n\n  /**\n   * Sanitize the configuration, e.g. set default values or convert\n   * properties.\n   */\n  protected sanitizeConfig(): void {\n    // Map icon from 'foo' to 'mdi:foo' if necessary.\n    this.config.icon = _.get(Icon, this.config.icon, this.config.icon);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\n\n@Component({\n  selector: 'omv-form-binary-unit-input',\n  templateUrl: './form-binary-unit-input.component.html',\n  styleUrls: ['./form-binary-unit-input.component.scss']\n})\nexport class FormBinaryUnitInputComponent extends AbstractFormFieldComponent {\n  constructor(private clipboardService: ClipboardService) {\n    super();\n  }\n\n  onCopyToClipboard(): void {\n    const control = this.formGroup.get(this.config.name);\n    this.clipboardService.copy(control.value);\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label }}</mat-label>\n  <input matInput\n         type=\"text\"\n         [formControlName]=\"config.name\"\n         [placeholder]=\"config.placeholder\"\n         [readonly]=\"config.readonly\"\n         [autofocus]=\"config.autofocus\"\n         [autocomplete]=\"config.autocomplete\"\n         [required]=\"config.validators?.required\"\n         binaryUnit\n         [defaultUnit]=\"config.defaultUnit\">\n  <mat-icon *ngIf=\"config.hasCopyToClipboardButton\"\n            matSuffix\n            matTooltip=\"{{ 'Copy to clipboard' | transloco }}\"\n            (click)=\"onCopyToClipboard()\"\n            svgIcon=\"{{ icon.copy }}\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n    <span *ngIf=\"formGroup.hasError('min', config.name)\">\n      The value must be at least {{ config.validators.min | binaryUnit }}.\n    </span>\n    <span *ngIf=\"formGroup.hasError('max', config.name)\">\n      The value cannot exceed {{ config.validators.max | binaryUnit }}.\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { finalize } from 'rxjs/operators';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { format, formatDeep } from '~/app/functions.helper';\nimport { translate } from '~/app/i18n.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  selector: 'omv-form-button',\n  templateUrl: './form-button.component.html',\n  styleUrls: ['./form-button.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormButtonComponent extends AbstractFormFieldComponent {\n  constructor(\n    private blockUiService: BlockUiService,\n    private clipboardService: ClipboardService,\n    private notificationService: NotificationService,\n    private rpcService: RpcService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  onClick() {\n    const formValues = this.formGroup.getRawValue();\n    if (_.isFunction(this.config.click)) {\n      // Call the callback function.\n      this.config.click();\n    } else if (_.isString(this.config.url)) {\n      // Navigate to the specified URL.\n      const url = format(this.config.url, formValues);\n      this.router.navigateByUrl(url);\n    } else if (_.isPlainObject(this.config.request)) {\n      // Execute the specified request.\n      const control: AbstractControl = this.formGroup.get(this.config.name);\n      const request = this.config.request;\n      const params = formatDeep(request.params, formValues);\n      if (_.isString(request.progressMessage)) {\n        this.blockUiService.start(translate(request.progressMessage));\n      }\n      control.disable();\n      this.rpcService[request.task ? 'requestTask' : 'request'](\n        request.service,\n        request.method,\n        params\n      )\n        .pipe(\n          finalize(() => {\n            control.enable();\n            if (_.isString(request.progressMessage)) {\n              this.blockUiService.stop();\n            }\n          })\n        )\n        .subscribe((res: any) => {\n          const data: Record<any, any> = _.merge({ _response: res }, formValues);\n          // Display a notification?\n          if (_.isString(request.successNotification)) {\n            const successNotification: string = format(request.successNotification, data);\n            this.notificationService.show(NotificationType.success, undefined, successNotification);\n          }\n          // Copy the response to the clipboard?\n          if (_.isString(request.successCopyToClipboard)) {\n            const successCopyToClipboard: string = format(request.successCopyToClipboard, data);\n            this.clipboardService.copy(successCopyToClipboard);\n          }\n          // Navigate to a specified URL?\n          if (_.isString(request.successUrl)) {\n            const successUrl: string = format(request.successUrl, data);\n            this.router.navigateByUrl(successUrl);\n          }\n        });\n    }\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <mat-form-button [formControlName]=\"config.name\"\n                   [autofocus]=\"config.autofocus\"\n                   matTooltip=\"{{ config.tooltip | transloco }}\"\n                   (click)=\"onClick()\">\n    {{ config.text | transloco }}\n  </mat-form-button>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-checkbox',\n  templateUrl: './form-checkbox.component.html',\n  styleUrls: ['./form-checkbox.component.scss']\n})\nexport class FormCheckboxComponent extends AbstractFormFieldComponent {}\n","<div class=\"omv-form-checkbox-wrapper mat-form-field omv-display-flex omv-flex-1 omv-flex-column\"\n     [formGroup]=\"formGroup\">\n  <mat-checkbox [formControlName]=\"config.name\"\n                [checked]=\"config.value\"\n                [required]=\"config.validators?.required\">\n    {{ config.label | transloco }}\n  </mat-checkbox>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0 && !formGroup.get(config.name)?.errors\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-code-editor',\n  templateUrl: './form-code-editor.component.html',\n  styleUrls: ['./form-code-editor.component.scss']\n})\nexport class FormCodeEditorComponent extends AbstractFormFieldComponent {}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <mat-form-code-editor [formControlName]=\"config.name\"\n                        [autofocus]=\"config.autofocus\"\n                        [required]=\"config.validators?.required\"\n                        [language]=\"config.language\"\n                        [lineNumbers]=\"config.lineNumbers\">\n  </mat-form-code-editor>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { Icon } from '~/app/shared/enum/icon.enum';\n\n@Component({\n  selector: 'omv-form-datatable',\n  templateUrl: './form-datatable.component.html',\n  styleUrls: ['./form-datatable.component.scss']\n})\nexport class FormDatatableComponent extends AbstractFormFieldComponent {\n  protected override sanitizeConfig(): void {\n    super.sanitizeConfig();\n    if (this.config.hasSearchField || this.config.actions.length) {\n      this.config.hasActionBar = true;\n    }\n    _.forEach(this.config.actions, (action) => {\n      switch (action.template) {\n        case 'add':\n          _.defaultsDeep(action, {\n            id: 'add',\n            type: 'iconButton',\n            tooltip: gettext('Add'),\n            icon: Icon.add\n          });\n          break;\n        case 'edit':\n          _.defaultsDeep(action, {\n            id: 'edit',\n            type: 'iconButton',\n            tooltip: gettext('Edit'),\n            icon: Icon.edit,\n            enabledConstraints: {\n              minSelected: 1,\n              maxSelected: 1\n            }\n          });\n          break;\n        case 'delete':\n          _.defaultsDeep(action, {\n            id: 'delete',\n            type: 'iconButton',\n            tooltip: gettext('Delete'),\n            icon: Icon.delete,\n            enabledConstraints: {\n              minSelected: 1\n            }\n          });\n          break;\n        default:\n          _.defaultsDeep(action, {\n            id: 'custom',\n            type: 'iconButton'\n          });\n          break;\n      }\n    });\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <mat-form-datatable [formControlName]=\"config.name\"\n                      [columns]=\"config.columns\"\n                      [columnMode]=\"config.columnMode\"\n                      [actions]=\"config.actions\"\n                      [hasActionBar]=\"config.hasActionBar || config.actions.length > 0\"\n                      [hasSearchField]=\"config.hasSearchField\"\n                      [hasFooter]=\"config.hasFooter\"\n                      [hasHeader]=\"config.hasHeader\"\n                      [selectionType]=\"config.selectionType\"\n                      [limit]=\"config.limit\"\n                      [sorters]=\"config.sorters\"\n                      [sortType]=\"config.sortType\"\n                      [valueType]=\"config.valueType\">\n  </mat-form-datatable>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-datepicker',\n  templateUrl: './form-datepicker.component.html',\n  styleUrls: ['./form-datepicker.component.scss']\n})\nexport class FormDatepickerComponent extends AbstractFormFieldComponent {}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label }}</mat-label>\n  <input matInput\n         [formControlName]=\"config.name\"\n         [matDatepicker]=\"picker\"\n         [placeholder]=\"config.placeholder\"\n         [required]=\"config.validators?.required\"\n         [min]=\"config.validators?.min\"\n         [max]=\"config.validators?.max\">\n  <mat-datepicker-toggle matSuffix\n                         [for]=\"picker\">\n  </mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-divider',\n  templateUrl: './form-divider.component.html',\n  styleUrls: ['./form-divider.component.scss']\n})\nexport class FormDividerComponent extends AbstractFormFieldComponent {}\n","<div class=\"omv-form-divider omv-flex-1\">\n  <mat-divider></mat-divider>\n  <div *ngIf=\"config.title\"\n       class=\"title\">\n    {{ config.title | transloco }}\n  </div>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-file-input',\n  templateUrl: './form-file-input.component.html',\n  styleUrls: ['./form-file-input.component.scss']\n})\nexport class FormFileInputComponent extends AbstractFormFieldComponent {\n  onChange(event: Event) {\n    const file: File = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', this.onFileReaderLoad.bind(this));\n    reader.readAsText(file, 'utf8');\n  }\n\n  protected onFileReaderLoad(event: ProgressEvent<FileReader>) {\n    const control: AbstractControl = this.formGroup.get(this.config.name);\n    const trim = _.defaultTo(this.config.trim, this.config.rows === 1);\n    control.setValue(trim ? event.target.result.toString().trim() : event.target.result);\n    control.markAsTouched();\n    control.markAsDirty();\n    control.updateValueAndValidity();\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <textarea *ngIf=\"config.rows > 1\"\n            matInput\n            [ngClass]=\"{'omv-text-monospace': config.monospace}\"\n            [formControlName]=\"config.name\"\n            [placeholder]=\"config.placeholder | transloco\"\n            [readonly]=\"config.readonly\"\n            [autocapitalize]=\"config.autocapitalize\"\n            [autofocus]=\"config.autofocus\"\n            [required]=\"config.validators?.required\"\n            [minlength]=\"config.validators?.minLength\"\n            [maxlength]=\"config.validators?.maxLength\"\n            [wrap]=\"config.wrap\"\n            [rows]=\"config.rows\"\n            [cols]=\"config.cols\"\n            spellcheck=\"false\">\n  </textarea>\n  <input *ngIf=\"config.rows === 1\"\n         matInput\n         type=\"text\"\n         class=\"omv-text-truncate\"\n         [ngClass]=\"{'omv-text-monospace': config.monospace}\"\n         [formControlName]=\"config.name\"\n         [placeholder]=\"config.placeholder | transloco\"\n         [readonly]=\"config.readonly\"\n         [autofocus]=\"config.autofocus\"\n         [autocapitalize]=\"config.autocapitalize\"\n         [autocomplete]=\"config.autocomplete\"\n         [required]=\"config.validators?.required\"\n         [minlength]=\"config.validators?.minLength\"\n         [maxlength]=\"config.validators?.maxLength\">\n  <input type=\"file\"\n         [accept]=\"config.accept\"\n         (change)=\"onChange($event)\">\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('minlength', config.name)\"\n          transloco=\"The value must be at least {{ config.validators.minLength }} characters long.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('maxlength', config.name)\"\n          transloco=\"The value cannot exceed {{ config.validators.maxLength }} characters.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { ConnectedPosition } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatSelectionListChange } from '@angular/material/list';\nimport * as _ from 'lodash';\nimport { EMPTY, from, Observable, Subject, Subscription } from 'rxjs';\nimport { catchError, concatMap, map, startWith, takeUntil, tap, toArray } from 'rxjs/operators';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { Unsubscribe } from '~/app/decorators';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  selector: 'omv-form-folderbrowser',\n  templateUrl: './form-folderbrowser.component.html',\n  styleUrls: ['./form-folderbrowser.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormFolderbrowserComponent\n  extends AbstractFormFieldComponent\n  implements OnInit, OnDestroy\n{\n  @ViewChild('trigger')\n  trigger: MatFormField;\n\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  isOpen = false;\n  folders: string[] = [];\n  filteredFolders$: Observable<string[]>;\n  searchFilter = new FormControl('');\n  triggerRect: DOMRect;\n  positions: ConnectedPosition[] = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top'\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom'\n    }\n  ];\n  dirPath = '';\n\n  protected currentPaths: Array<string> = [];\n  // Emits whenever the component is destroyed.\n  protected readonly destroy = new Subject<void>();\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private rpcService: RpcService,\n    private viewportRuler: ViewportRuler\n  ) {\n    super();\n  }\n\n  get currentPath(): string {\n    return this.joinPaths(this.currentPaths);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.viewportRuler\n      .change()\n      .pipe(takeUntil(this.destroy))\n      .subscribe(() => {\n        if (this.isOpen) {\n          this.getTriggerRect();\n          this.changeDetectorRef.markForCheck();\n        }\n      });\n    // Subscribe to changes of the 'dirRefIdField' field.\n    if (this.config.dirVisible) {\n      const dirRefIdControl: AbstractControl = this.formGroup.get(this.config.dirRefIdField);\n      if (dirRefIdControl) {\n        this.subscriptions.add(\n          dirRefIdControl.valueChanges.subscribe((value) => {\n            switch (this.config.dirType) {\n              case 'sharedfolder':\n                this.rpcService\n                  .request('ShareMgmt', 'getPath', {\n                    uuid: value\n                  })\n                  .subscribe((res: string) => {\n                    this.dirPath = _.trimEnd(res, '/') + '/';\n                  });\n                break;\n              case 'mntent':\n                this.rpcService\n                  .request('FsTab', 'get', {\n                    uuid: value\n                  })\n                  .subscribe((res: string) => {\n                    this.dirPath = _.trimEnd(_.get(res, 'dir'), '/') + '/';\n                  });\n                break;\n            }\n          })\n        );\n      }\n    }\n    // Subscribe to changes of the 'searchFilter' field.\n    this.filteredFolders$ = this.searchFilter.valueChanges.pipe(\n      startWith(''),\n      map((value: string) =>\n        this.folders.filter((folder: string) => folder.toLowerCase().includes(value.toLowerCase()))\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy.next();\n    this.destroy.complete();\n  }\n\n  open(): void {\n    const control = this.formGroup.get(this.config.name);\n    const path = _.trim(control.value, '/');\n    const paths = path.length ? _.split(path, '/') : [];\n\n    this.getTriggerRect();\n    this.folders = [];\n    this.currentPaths = [];\n\n    if (!paths.length) {\n      // Display root.\n      this.loadData(this.currentPaths).subscribe(() => {\n        this.isOpen = true;\n      });\n    } else {\n      // Enumerate all subdirectories and stop at the first one that\n      // does not exist.\n      from(paths)\n        .pipe(\n          concatMap((name) => {\n            const loadPath = this.joinPaths([...this.currentPaths, name]);\n            return this.requestData(loadPath).pipe(\n              map(() => {\n                this.currentPaths.push(name);\n                return name;\n              })\n            );\n          }),\n          catchError((error) => {\n            error.preventDefault?.();\n            return EMPTY;\n          }),\n          toArray()\n        )\n        .subscribe(() => {\n          this.loadData(this.currentPaths).subscribe(() => {\n            this.isOpen = true;\n          });\n        });\n    }\n  }\n\n  choose(): void {\n    this.updateValue();\n    this.close();\n  }\n\n  close(): void {\n    this.isOpen = false;\n  }\n\n  onSelectionChange(event: MatSelectionListChange): void {\n    const name = event.options[0].value;\n    event.source.deselectAll();\n    if ('..' === name) {\n      this.currentPaths.pop();\n    } else {\n      this.currentPaths.push(name);\n    }\n    this.loadData(this.currentPaths).subscribe();\n  }\n\n  private requestData(path): Observable<any> {\n    const dirRefIdControl = this.formGroup.get(this.config.dirRefIdField);\n    return this.rpcService.request('FolderBrowser', 'get', {\n      uuid: dirRefIdControl.value,\n      type: this.config.dirType,\n      path\n    });\n  }\n\n  private loadData(paths: Array<string>): Observable<any> {\n    const path = this.joinPaths(paths);\n    return this.requestData(path).pipe(\n      map((res: Array<string>) => {\n        res.sort(Intl.Collator().compare);\n        if (paths.length) {\n          res.unshift('..');\n        }\n        return res;\n      }),\n      tap((folders) => {\n        this.folders = folders;\n        this.searchFilter.setValue('');\n      })\n    );\n  }\n\n  /**\n   * Get the current selected path, e.g. 'foo/bar/'.\n   */\n  private joinPaths(paths: Array<string>): string {\n    return `${paths.join('/')}/`;\n  }\n\n  private getTriggerRect(): void {\n    this.triggerRect = this.trigger._elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  private updateValue(): void {\n    const control = this.formGroup.get(this.config.name);\n    control.setValue(this.currentPath);\n    control.markAsTouched();\n    control.markAsDirty();\n    control.updateValueAndValidity();\n  }\n}\n","<mat-form-field *ngIf=\"config.dirVisible\"\n                class=\"omv-flex-initial omv-w-25\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ 'Base path' | transloco }}</mat-label>\n  <input *ngIf=\"config.dirVisible\"\n         matInput\n         type=\"text\"\n         class=\"omv-text-truncate\"\n         [ngClass]=\"{'omv-text-monospace': config.monospace}\"\n         disabled=\"true\"\n         [matTooltip]=\"dirPath\"\n         [value]=\"dirPath\">\n</mat-form-field>\n<mat-form-field #origin=\"cdkOverlayOrigin\"\n                #trigger\n                cdkOverlayOrigin\n                class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <input matInput\n         type=\"text\"\n         [ngClass]=\"{'omv-text-monospace': config.monospace}\"\n         [formControlName]=\"config.name\"\n         [placeholder]=\"config.placeholder | transloco\"\n         [readonly]=\"config.readonly\"\n         [autocapitalize]=\"config.autocapitalize\"\n         [autofocus]=\"config.autofocus\"\n         [required]=\"config.validators?.required\"\n         [minlength]=\"config.validators?.minLength\"\n         [maxlength]=\"config.validators?.maxLength\">\n  <mat-icon *ngIf=\"formGroup.controls[config.dirRefIdField].value\"\n            matSuffix\n            matTooltip=\"{{ 'Browse directory' | transloco }}\"\n            (click)=\"open()\"\n            svgIcon=\"mdi:file-tree\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('minlength', config.name)\"\n          transloco=\"The value must be at least {{ config.validators.minLength }} characters long.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('maxlength', config.name)\"\n          transloco=\"The value cannot exceed {{ config.validators.maxLength }} characters.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n\n<ng-template cdkConnectedOverlay\n             cdkConnectedOverlayLockPosition\n             cdkConnectedOverlayHasBackdrop\n             cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n             [cdkConnectedOverlayPositions]=\"positions\"\n             [cdkConnectedOverlayOrigin]=\"origin\"\n             [cdkConnectedOverlayOpen]=\"isOpen\"\n             [cdkConnectedOverlayMinWidth]=\"triggerRect?.width!\"\n             (backdropClick)=\"close()\"\n             (detach)=\"close()\">\n  <div class=\"mat-select-panel-wrap\">\n    <div class=\"mat-select-panel mat-primary\">\n      <mat-toolbar class=\"omv-selection-header omv-display-flex omv-flex-row omv-justify-content-end\">\n        <mat-form-field>\n          <button mat-icon-button\n                  matPrefix>\n            <mat-icon svgIcon=\"{{ icon.search }}\"></mat-icon>\n          </button>\n          <input matInput\n                 type=\"search\"\n                 [formControl]=\"searchFilter\">\n          <button mat-icon-button\n                  matSuffix\n                  matTooltip=\"{{ 'Clear' | transloco }}\"\n                  (click)=\"searchFilter.setValue('')\">\n            <mat-icon svgIcon=\"{{ icon.clear }}\"></mat-icon>\n          </button>\n        </mat-form-field>\n      </mat-toolbar>\n      <div class=\"omv-scrollable-y\">\n        <mat-selection-list [multiple]=\"false\"\n                            (selectionChange)=\"onSelectionChange($event)\">\n          <mat-list-option *ngIf=\"!folders.length\"\n                           disabled>\n            <mat-icon matListIcon\n                      svgIcon=\"{{ icon.folder }}\"></mat-icon>\n            <span class=\"mat-option-text\">.</span>\n          </mat-list-option>\n          <mat-list-option *ngFor=\"let folder of filteredFolders$ | async\"\n                           [value]=\"folder\">\n            <mat-icon *ngIf=\"'..' === folder\"\n                      matListIcon\n                      svgIcon=\"{{ icon.chevronUp }}\"></mat-icon>\n            <mat-icon *ngIf=\"!['..'].includes(folder)\"\n                      matListIcon\n                      svgIcon=\"{{ icon.folder }}\"></mat-icon>\n            <span class=\"mat-option-text\">{{ folder }}</span>\n          </mat-list-option>\n        </mat-selection-list>\n      </div>\n      <div class=\"omv-selection-actions omv-display-flex omv-flex-row omv-justify-content-start omv-align-items-center\">\n        <mat-icon class=\"omv-text-muted omv-mr-q\"\n                  svgIcon=\"mdi:folder-open\">\n        </mat-icon>\n        <div class=\"omv-text-muted\">\n          {{ currentPath }}\n        </div>\n        <div class=\"omv-flex-1\"></div>\n        <button mat-flat-button\n                (click)=\"close()\">\n          {{ 'Cancel' | transloco }}\n        </button>\n        <omv-submit-button (buttonClick)=\"choose()\">\n          {{ 'Choose' | transloco }}\n        </omv-submit-button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-hint',\n  templateUrl: './form-hint.component.html',\n  styleUrls: ['./form-hint.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormHintComponent extends AbstractFormFieldComponent {}\n","<omv-alert-panel class=\"omv-flex-1\"\n                 [type]=\"config.hintType\"\n                 [hasTitle]=\"false\"\n                 [dismissible]=\"config.dismissible\"\n                 [stateId]=\"config.stateId\">\n  <span [innerHtml]=\"config.text | transloco | nl2br | sanitizeHtml\"></span>\n</omv-alert-panel>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\n\nimport { FormButtonComponent } from '~/app/core/components/intuition/form/components/form-button/form-button.component';\n\n@Component({\n  selector: 'omv-form-icon-button',\n  templateUrl: './form-icon-button.component.html',\n  styleUrls: ['./form-icon-button.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormIconButtonComponent extends FormButtonComponent {}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <mat-form-button [formControlName]=\"config.name\"\n                   [autofocus]=\"config.autofocus\"\n                   matTooltip=\"{{ config.tooltip | transloco }}\"\n                   (click)=\"onClick()\">\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>\n  </mat-form-button>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\n\n@Component({\n  selector: 'omv-form-number-input',\n  templateUrl: './form-number-input.component.html',\n  styleUrls: ['./form-number-input.component.scss']\n})\nexport class FormNumberInputComponent extends AbstractFormFieldComponent {\n  constructor(private clipboardService: ClipboardService) {\n    super();\n  }\n\n  onCopyToClipboard(): void {\n    const control: AbstractControl = this.formGroup.get(this.config.name);\n    this.clipboardService.copy(control.value);\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label }}</mat-label>\n  <input matInput\n         type=\"number\"\n         [formControlName]=\"config.name\"\n         [placeholder]=\"config.placeholder\"\n         [readonly]=\"config.readonly\"\n         [autofocus]=\"config.autofocus\"\n         [autocomplete]=\"config.autocomplete\"\n         [step]=\"config.step\"\n         [required]=\"config.validators?.required\"\n         [min]=\"config.validators?.min\"\n         [max]=\"config.validators?.max\">\n  <mat-icon *ngIf=\"config.hasCopyToClipboardButton\"\n            matSuffix\n            matTooltip=\"{{ 'Copy to clipboard' | transloco }}\"\n            (click)=\"onCopyToClipboard()\"\n            svgIcon=\"{{ icon.copy }}\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n    <span *ngIf=\"formGroup.hasError('min', config.name)\">\n      The value must be at least {{ config.validators.min }}.\n    </span>\n    <span *ngIf=\"formGroup.hasError('max', config.name)\">\n      The value cannot exceed {{ config.validators.max }}.\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-paragraph',\n  templateUrl: './form-paragraph.component.html',\n  styleUrls: ['./form-paragraph.component.scss']\n})\nexport class FormParagraphComponent extends AbstractFormFieldComponent {}\n","<div class=\"omv-form-paragraph\">\n  {{ config.title | transloco }}\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\n\n@Component({\n  selector: 'omv-form-password-input',\n  templateUrl: './form-password-input.component.html',\n  styleUrls: ['./form-password-input.component.scss']\n})\nexport class FormPasswordInputComponent extends AbstractFormFieldComponent {\n  constructor(private clipboardService: ClipboardService) {\n    super();\n  }\n\n  onCopyToClipboard(): void {\n    const control: AbstractControl = this.formGroup.get(this.config.name);\n    this.clipboardService.copy(control.value);\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <input #passwordInput\n         matInput\n         type=\"password\"\n         autocorrect=\"off\"\n         [autocomplete]=\"config.autocomplete\"\n         [autocapitalize]=\"config.autocapitalize\"\n         [formControlName]=\"config.name\"\n         [placeholder]=\"config.placeholder | transloco\"\n         [readonly]=\"config.readonly\"\n         [autofocus]=\"config.autofocus\"\n         [required]=\"config.validators?.required\"\n         [minlength]=\"config.validators?.minLength\"\n         [maxlength]=\"config.validators?.maxLength\">\n  <mat-icon matSuffix\n            matTooltip=\"{{ passwordInput.type === 'password' ? 'Show' : 'Hide' | transloco }}\"\n            (click)=\"passwordInput.type = passwordInput.type === 'password' ? 'text' : 'password'\"\n            svgIcon=\"mdi:eye-outline\">\n  </mat-icon>\n  <mat-icon *ngIf=\"config.hasCopyToClipboardButton\"\n            matSuffix\n            matTooltip=\"{{ 'Copy to clipboard' | transloco }}\"\n            (click)=\"onCopyToClipboard()\"\n            svgIcon=\"{{ icon.copy }}\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('minlength', config.name)\"\n          transloco=\"The value must be at least {{ config.validators.minLength }} characters long.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('maxlength', config.name)\"\n          transloco=\"The value cannot exceed {{ config.validators.maxLength }} characters.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport * as _ from 'lodash';\nimport { Subscription, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { Unsubscribe } from '~/app/decorators';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-form-select',\n  templateUrl: './form-select.component.html',\n  styleUrls: ['./form-select.component.scss']\n})\nexport class FormSelectComponent extends AbstractFormFieldComponent implements OnInit {\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  public loading = false;\n\n  constructor(private dataStoreService: DataStoreService) {\n    super();\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.doLoadStore();\n\n    const control = this.formGroup.get(this.config.name);\n    this.subscriptions.add(\n      control.valueChanges.subscribe((value) => {\n        this.config.value = value;\n      })\n    );\n  }\n\n  onSelectionChange(event: MatSelectChange): void {\n    if (_.isFunction(this.config.selectionChange)) {\n      const value = _.clone(event.value);\n      this.config.selectionChange(value);\n    }\n  }\n\n  private doLoadStore(): void {\n    this.loading = true;\n    this.dataStoreService\n      .load(this.config.store)\n      .pipe(\n        catchError((error) => {\n          this.loading = false;\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.loading = false;\n        if (this.config.hasEmptyOption) {\n          const item = {};\n          _.set(item, this.config.valueField, '');\n          _.set(item, this.config.textField, this.config.emptyOptionText);\n          this.config.store.data.unshift(item);\n        }\n      });\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <mat-select [formControlName]=\"config.name\"\n              [placeholder]=\"config.placeholder | transloco\"\n              [multiple]=\"config.multiple\"\n              [required]=\"config.validators?.required\"\n              (selectionChange)=\"onSelectionChange($event)\">\n    <ng-container *ngIf=\"!loading; else renderLoading\">\n      <mat-option *ngFor=\"let option of config.store.data\"\n                  [value]=\"option[config.valueField]\">\n        {{ option[config.textField] | transloco }}\n      </mat-option>\n    </ng-container>\n    <ng-template #renderLoading>\n      <mat-option disabled>\n        <div class=\"omv-display-flex omv-flex-row omv-align-items-center omv-align-content-center omv-justify-content-between\">\n          <span>{{ 'Loading ...' | transloco }}</span>\n          <mat-icon *ngIf=\"loading\"\n                    class=\"omv-icon-rotate-360-infinite\"\n                    svgIcon=\"mdi:loading\">\n          </mat-icon>\n        </div>\n      </mat-option>\n    </ng-template>\n  </mat-select>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { FormSelectComponent } from '~/app/core/components/intuition/form/components/form-select/form-select.component';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-form-sharedfolder-select',\n  templateUrl: './form-sharedfolder-select.component.html',\n  styleUrls: ['./form-sharedfolder-select.component.scss']\n})\nexport class FormSharedfolderSelectComponent extends FormSelectComponent {\n  constructor(\n    @Inject(DataStoreService) dataStoreService: DataStoreService,\n    private router: Router\n  ) {\n    super(dataStoreService);\n  }\n\n  public onCreate(): void {\n    this.router.navigate(['/storage/shared-folders/create'], {\n      queryParams: { returnUrl: this.router.url }\n    });\n  }\n\n  protected override sanitizeConfig(): void {\n    super.sanitizeConfig();\n    _.merge(this.config, {\n      valueField: 'uuid',\n      textField: 'description',\n      placeholder: gettext('Select a shared folder ...'),\n      store: {\n        proxy: {\n          service: 'ShareMgmt',\n          get: {\n            method: 'enumerateSharedFolders',\n            params: {}\n          }\n        },\n        sorters: [\n          {\n            dir: 'asc',\n            prop: 'name'\n          }\n        ]\n      }\n    });\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label }}</mat-label>\n  <mat-select [formControlName]=\"config.name\"\n              [placeholder]=\"config.placeholder | transloco\"\n              [required]=\"config.validators?.required\">\n    <mat-option *ngFor=\"let option of config.store.data\"\n                [value]=\"option[config.valueField]\">\n      {{option[config.textField]}}\n    </mat-option>\n  </mat-select>\n  <mat-icon *ngIf=\"config.hasCreateButton\"\n            matSuffix\n            matTooltip=\"{{ 'Create' | transloco }}\"\n            svgIcon=\"mdi:plus-circle-outline\"\n            (click)=\"onCreate()\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { MatSliderChange } from '@angular/material/slider';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-slider',\n  templateUrl: './form-slider.component.html',\n  styleUrls: ['./form-slider.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormSliderComponent extends AbstractFormFieldComponent {\n  onChange(event: MatSliderChange) {\n    const control = this.formGroup.get(this.config.name);\n    control.setValue(event.value);\n    control.markAsTouched();\n    control.markAsDirty();\n    control.updateValueAndValidity();\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label }}</mat-label>\n  <input #sliderInput\n         matInput\n         hidden\n         type=\"number\"\n         [formControlName]=\"config.name\">\n  <mat-slider class=\"omv-w-100\"\n              [value]=\"sliderInput.value\"\n              (change)=\"onChange($event)\"\n              [max]=\"config?.validators?.max\"\n              [min]=\"config?.validators?.min\"\n              [step]=\"config.step\"\n              thumbLabel=\"true\">\n  </mat-slider>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n    <span *ngIf=\"formGroup.hasError('min', config.name)\">\n      The value must be at least {{ config.validators.min }}.\n    </span>\n    <span *ngIf=\"formGroup.hasError('max', config.name)\">\n      The value cannot exceed {{ config.validators.max }}.\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\n\nimport { FormSelectComponent } from '~/app/core/components/intuition/form/components/form-select/form-select.component';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-form-sshcert-select',\n  templateUrl: './form-sshcert-select.component.html',\n  styleUrls: ['./form-sshcert-select.component.scss']\n})\nexport class FormSshcertSelectComponent extends FormSelectComponent {\n  constructor(\n    @Inject(DataStoreService) dataStoreService: DataStoreService,\n    private router: Router\n  ) {\n    super(dataStoreService);\n  }\n\n  public onCreate(): void {\n    this.router.navigate(['/system/certificate/ssh/create'], {\n      queryParams: { returnUrl: this.router.url }\n    });\n  }\n\n  protected override sanitizeConfig(): void {\n    super.sanitizeConfig();\n    _.merge(this.config, {\n      valueField: 'uuid',\n      textField: 'comment',\n      placeholder: 'Select a SSH certificate ...',\n      store: {\n        proxy: {\n          service: 'CertificateMgmt',\n          get: {\n            method: 'getSshList',\n            params: {\n              start: 0,\n              limit: -1\n            }\n          }\n        },\n        sorters: [\n          {\n            dir: 'asc',\n            field: 'name'\n          }\n        ]\n      }\n    });\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label }}</mat-label>\n  <mat-select [formControlName]=\"config.name\"\n              [placeholder]=\"config.placeholder\"\n              [required]=\"config.validators?.required\">\n    <mat-option *ngFor=\"let option of config.store.data\"\n                [value]=\"option[config.valueField]\">\n      {{ option[config.textField] }}\n    </mat-option>\n  </mat-select>\n  <mat-icon *ngIf=\"config.hasCreateButton\"\n            matSuffix\n            matTooltip=\"{{ 'Create' | transloco }}\"\n            svgIcon=\"mdi:plus-circle-outline\"\n            (click)=\"onCreate()\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\n\nimport { FormSelectComponent } from '~/app/core/components/intuition/form/components/form-select/form-select.component';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-form-sslcert-select',\n  templateUrl: './form-sslcert-select.component.html',\n  styleUrls: ['./form-sslcert-select.component.scss']\n})\nexport class FormSslcertSelectComponent extends FormSelectComponent {\n  constructor(\n    @Inject(DataStoreService) dataStoreService: DataStoreService,\n    private router: Router\n  ) {\n    super(dataStoreService);\n  }\n\n  public onCreate(): void {\n    this.router.navigate(['/system/certificate/ssl/create'], {\n      queryParams: { returnUrl: this.router.url }\n    });\n  }\n\n  protected override sanitizeConfig(): void {\n    super.sanitizeConfig();\n    _.merge(this.config, {\n      valueField: 'uuid',\n      textField: 'comment',\n      placeholder: 'Select a SSL certificate ...',\n      store: {\n        proxy: {\n          service: 'CertificateMgmt',\n          get: {\n            method: 'getList',\n            params: {\n              start: 0,\n              limit: -1\n            }\n          }\n        },\n        sorters: [\n          {\n            dir: 'asc',\n            field: 'name'\n          }\n        ]\n      }\n    });\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <mat-label>{{ config.label }}</mat-label>\n  <mat-select [formControlName]=\"config.name\"\n              [placeholder]=\"config.placeholder\"\n              [required]=\"config.validators?.required\">\n    <mat-option *ngFor=\"let option of config.store.data\"\n                [value]=\"option[config.valueField]\">\n      {{ option[config.textField] }}<ng-container *ngIf=\"option['validto']\"> [{{ 'Valid to' | transloco }} {{ option['validto'] | localeDate:'datetime' }}]</ng-container>\n    </mat-option>\n  </mat-select>\n  <mat-icon *ngIf=\"config.hasCreateButton\"\n            matSuffix\n            matTooltip=\"{{ 'Create' | transloco }}\"\n            svgIcon=\"mdi:plus-circle-outline\"\n            (click)=\"onCreate()\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      This field is required.\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-tag-input',\n  templateUrl: './form-tag-input.component.html',\n  styleUrls: ['./form-tag-input.component.scss']\n})\nexport class FormTagInputComponent extends AbstractFormFieldComponent {}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <mat-form-tag-input [formControlName]=\"config.name\"\n                      [placeholder]=\"config.placeholder | transloco\"\n                      [autofocus]=\"config.autofocus\"\n                      [required]=\"config.validators?.required\"\n                      [minlength]=\"config.validators?.minLength\"\n                      [maxlength]=\"config.validators?.maxLength\"\n                      [separator]=\"config.separator\">\n  </mat-form-tag-input>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('minlength', config.name)\"\n          transloco=\"The value must be at least {{ config.validators.minLength }} characters long.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('maxlength', config.name)\"\n          transloco=\"The value cannot exceed {{ config.validators.maxLength }} characters.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport * as _ from 'lodash';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, skipWhile, startWith } from 'rxjs/operators';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-form-text-input',\n  templateUrl: './form-text-input.component.html',\n  styleUrls: ['./form-text-input.component.scss']\n})\nexport class FormTextInputComponent extends AbstractFormFieldComponent implements OnInit {\n  @ViewChild(MatAutocompleteTrigger)\n  autocompleteTrigger: MatAutocompleteTrigger;\n\n  public loading = false;\n  public filteredOptions$: Observable<Record<string, any>>;\n\n  private abstractControl: AbstractControl;\n\n  constructor(\n    private clipboardService: ClipboardService,\n    private dataStoreService: DataStoreService\n  ) {\n    super();\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.abstractControl = this.formGroup.get(this.config.name);\n    this.filteredOptions$ = this.abstractControl.valueChanges.pipe(\n      startWith(this.abstractControl.value),\n      skipWhile(() => this.loading),\n      map((value) => {\n        return this.doFilter(value ?? '');\n      })\n    );\n    if (this.config.suggestions) {\n      this.doLoadStore();\n    }\n  }\n\n  onCopyToClipboard(): void {\n    this.clipboardService.copy(this.abstractControl.value);\n  }\n\n  private doLoadStore(): void {\n    this.loading = true;\n    this.dataStoreService\n      .load(this.config.store)\n      .pipe(\n        catchError((error) => {\n          this.loading = false;\n          return throwError(error);\n        })\n      )\n      .subscribe(() => {\n        this.loading = false;\n        // Update `filteredOptions$`.\n        this.abstractControl.updateValueAndValidity();\n      });\n  }\n\n  private doFilter(value: string): Record<string, any> {\n    return _.filter(this.config.store.data, (option) => {\n      return _.toLower(option[this.config.valueField]).includes(_.toLower(value));\n    });\n  }\n}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <input matInput\n         type=\"text\"\n         class=\"omv-text-truncate\"\n         [ngClass]=\"{'omv-text-monospace': config.monospace}\"\n         [formControlName]=\"config.name\"\n         [placeholder]=\"config.placeholder | transloco\"\n         [readonly]=\"config.readonly\"\n         [autofocus]=\"config.autofocus\"\n         [autocapitalize]=\"config.autocapitalize\"\n         [autocomplete]=\"config.autocomplete\"\n         [required]=\"config.validators?.required\"\n         [minlength]=\"config.validators?.minLength\"\n         [maxlength]=\"config.validators?.maxLength\"\n         [matAutocomplete]=\"autocomplete\"\n         [matAutocompleteDisabled]=\"!config.suggestions\">\n  <mat-autocomplete #autocomplete=\"matAutocomplete\"\n                    autoActiveFirstOption>\n    <ng-container *ngIf=\"!loading; else renderLoading\">\n      <mat-option *ngFor=\"let option of filteredOptions$ | async\"\n                  [value]=\"option[config.valueField]\">\n        {{ option[config.textField] | transloco }}\n      </mat-option>\n    </ng-container>\n    <ng-template #renderLoading>\n      <mat-option disabled>\n        <div class=\"omv-display-flex omv-flex-row omv-align-items-center omv-align-content-center omv-justify-content-between\">\n          <span>{{ 'Loading ...' | transloco }}</span>\n          <mat-icon *ngIf=\"loading\"\n                    class=\"omv-icon-rotate-360-infinite\"\n                    svgIcon=\"mdi:loading\">\n          </mat-icon>\n        </div>\n      </mat-option>\n    </ng-template>\n  </mat-autocomplete>\n  <mat-icon *ngIf=\"config.hasCopyToClipboardButton\"\n            matSuffix\n            matTooltip=\"{{ 'Copy to clipboard' | transloco }}\"\n            (click)=\"onCopyToClipboard()\"\n            svgIcon=\"{{ icon.copy }}\">\n  </mat-icon>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('minlength', config.name)\"\n          transloco=\"The value must be at least {{ config.validators.minLength }} characters long.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('maxlength', config.name)\"\n          transloco=\"The value cannot exceed {{ config.validators.maxLength }} characters.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { AbstractFormFieldComponent } from '~/app/core/components/intuition/form/components/abstract-form-field-component';\n\n@Component({\n  selector: 'omv-form-textarea',\n  templateUrl: './form-textarea.component.html',\n  styleUrls: ['./form-textarea.component.scss']\n})\nexport class FormTextareaComponent extends AbstractFormFieldComponent {}\n","<mat-form-field class=\"omv-flex-1\"\n                [formGroup]=\"formGroup\">\n  <div *ngIf=\"config.icon\"\n       matPrefix>\n    <mat-icon [svgIcon]=\"config.icon\"></mat-icon>&nbsp;\n  </div>\n  <mat-label>{{ config.label | transloco }}</mat-label>\n  <textarea matInput\n            [ngClass]=\"{'omv-text-monospace': config.monospace}\"\n            [formControlName]=\"config.name\"\n            [placeholder]=\"config.placeholder | transloco\"\n            [readonly]=\"config.readonly\"\n            [autocapitalize]=\"config.autocapitalize\"\n            [autofocus]=\"config.autofocus\"\n            [required]=\"config.validators?.required\"\n            [minlength]=\"config.validators?.minLength\"\n            [maxlength]=\"config.validators?.maxLength\"\n            [wrap]=\"config.wrap\"\n            [rows]=\"config.rows\"\n            [cols]=\"config.cols\"\n            spellcheck=\"false\">\n  </textarea>\n  <mat-error *ngIf=\"formGroup.invalid\">\n    <span *ngIf=\"formGroup.hasError('required', config.name)\">\n      {{ 'This field is required.' | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('minlength', config.name)\"\n          transloco=\"The value must be at least {{ config.validators.minLength }} characters long.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('maxlength', config.name)\"\n          transloco=\"The value cannot exceed {{ config.validators.maxLength }} characters.\">\n    </span>\n    <span *ngIf=\"formGroup.hasError('constraint', config.name)\">\n      {{ formGroup.getError('constraint', config.name) | transloco }}\n    </span>\n    <span *ngIf=\"formGroup.hasError('pattern', config.name)\">\n      {{ formGroup.getError('pattern', config.name) | transloco }}\n    </span>\n  </mat-error>\n  <mat-hint *ngIf=\"config.hint?.length > 0\"\n            [innerHTML]=\"config.hint | transloco | sanitizeHtml\">\n  </mat-hint>\n</mat-form-field>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport {\n  flattenFormFieldConfig,\n  setupConfObjUuidFields\n} from '~/app/core/components/intuition/functions.helper';\nimport { FormFieldName } from '~/app/core/components/intuition/models/form.type';\nimport {\n  FormFieldConfig,\n  FormFieldConstraintValidator,\n  FormFieldModifier\n} from '~/app/core/components/intuition/models/form-field-config.type';\nimport { Unsubscribe } from '~/app/decorators';\nimport { format, formatDeep } from '~/app/functions.helper';\nimport { CustomValidators } from '~/app/shared/forms/custom-validators';\nimport { ConstraintService } from '~/app/shared/services/constraint.service';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'omv-intuition-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements AfterViewInit, OnInit {\n  @Input()\n  id: string;\n\n  @Input()\n  config: FormFieldConfig[];\n\n  @Input()\n  context = {};\n\n  @Unsubscribe()\n  private subscriptions: Subscription = new Subscription();\n\n  public formGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n    this.createForm();\n    this.initializeModifiers();\n  }\n\n  ngAfterViewInit(): void {\n    // All form fields that are involved in a 'visible' or 'hidden' modifier\n    // must be updated. This will trigger the evaluation of the constraint\n    // which finally sets the correct (configured) state of the form field\n    // after form initialization.\n    const allFields: FormFieldConfig[] = flattenFormFieldConfig(this.config);\n    const fieldNamesToUpdate: FormFieldName[] = [];\n    _.forEach(allFields, (field: FormFieldConfig) => {\n      _.forEach(\n        _.filter(field?.modifiers, (modifier: FormFieldModifier) =>\n          ['visible', 'hidden'].includes(modifier.type)\n        ),\n        (modifier: FormFieldModifier) => {\n          // Determine the list of form fields that are involved in this\n          // constraint.\n          const fieldNames = ConstraintService.getProps(modifier.constraint);\n          fieldNamesToUpdate.push(...fieldNames);\n        }\n      );\n    });\n    _.forEach(_.uniq(fieldNamesToUpdate), (name: FormFieldName) => {\n      const control: AbstractControl = this.formGroup.get(name);\n      control?.updateValueAndValidity({ onlySelf: true, emitEvent: true });\n    });\n    // Trigger the modifiers to apply and display the current state.\n    // This is necessary because there are situations where a form\n    // does not trigger any `valueChanges` event during the whole\n    // initialization.\n    this.applyModifiers();\n  }\n\n  protected sanitizeConfig(): void {\n    // Create unique form identifier.\n    this.id = _.defaultTo(this.id, `omv-intuition-form-${++nextUniqueId}`);\n    // Sanitize the configuration of individual form fields.\n    const allFields: Array<FormFieldConfig> = flattenFormFieldConfig(this.config);\n    _.forEach(allFields, (field: FormFieldConfig) => {\n      switch (field.type) {\n        case 'binaryUnitInput':\n          _.defaultsDeep(field, {\n            defaultUnit: 'B',\n            fractionDigits: 0,\n            validators: {\n              patternType: 'binaryUnit'\n            }\n          });\n          break;\n        case 'datatable':\n          _.defaultsDeep(field, {\n            columnMode: 'flex',\n            hasHeader: true,\n            hasFooter: true,\n            selectionType: 'multi',\n            limit: 25,\n            columns: [],\n            actions: [],\n            sorters: [],\n            sortType: 'single',\n            valueType: 'object'\n          });\n          break;\n        case 'fileInput':\n          _.defaultsDeep(field, {\n            autocapitalize: 'none',\n            rows: 4,\n            wrap: 'soft',\n            trim: false\n          });\n          break;\n        case 'folderBrowser':\n          _.defaultsDeep(field, {\n            autocapitalize: 'none',\n            dirVisible: false\n          });\n          break;\n        case 'select':\n        case 'sharedFolderSelect':\n        case 'sshCertSelect':\n        case 'sslCertSelect':\n          _.defaultsDeep(field, {\n            valueField: 'value',\n            textField: 'text',\n            hasEmptyOption: false,\n            emptyOptionText: gettext('None'),\n            store: {\n              data: []\n            }\n          });\n          if (_.isArray(field.store.data) && _.isUndefined(field.store.fields)) {\n            _.merge(field.store, {\n              fields: _.uniq([field.valueField, field.textField])\n            });\n          }\n          if (['sharedFolderSelect', 'sshCertSelect', 'sslCertSelect'].includes(field.type)) {\n            _.defaultsDeep(field, {\n              hasCreateButton: true\n            });\n          }\n          break;\n        case 'passwordInput':\n          _.defaultsDeep(field, {\n            autocapitalize: 'none'\n          });\n          break;\n        case 'textInput':\n          _.defaultsDeep(field, {\n            autocapitalize: 'none',\n            valueField: 'value',\n            textField: 'text',\n            suggestions: false,\n            store: {\n              data: []\n            }\n          });\n          if (_.isArray(field.store.data) && _.isUndefined(field.store.fields)) {\n            _.merge(field.store, {\n              fields: _.uniq([field.valueField, field.textField])\n            });\n          }\n          break;\n        case 'textarea':\n          _.defaultsDeep(field, {\n            autocapitalize: 'none',\n            rows: 4,\n            wrap: 'soft'\n          });\n          break;\n        case 'hint':\n          _.defaultsDeep(field, {\n            hintType: 'info',\n            dismissible: false\n          });\n          break;\n        case 'codeEditor':\n          _.defaultsDeep(field, {\n            lineNumbers: true\n          });\n          break;\n        case 'tagInput':\n          _.defaultsDeep(field, {\n            separator: ','\n          });\n          break;\n      }\n    });\n    // Populate the data model identifier field.\n    setupConfObjUuidFields(this.config);\n  }\n\n  private createForm(): void {\n    const controlsConfig = {};\n    const allFields: Array<FormFieldConfig> = flattenFormFieldConfig(this.config);\n    _.forEach(allFields, (field: FormFieldConfig) => {\n      const validators: Array<ValidatorFn> = [];\n      // Build the validator configuration.\n      if (_.isPlainObject(field.validators)) {\n        if (_.isBoolean(field.validators.required) && field.validators.required) {\n          validators.push(Validators.required);\n        }\n        if (_.isNumber(field.validators.minLength) && field.validators.minLength > 0) {\n          validators.push(Validators.minLength(field.validators.minLength));\n        }\n        if (_.isNumber(field.validators.maxLength && field.validators.maxLength > 0)) {\n          validators.push(Validators.maxLength(field.validators.maxLength));\n        }\n        if (_.isNumber(field.validators.min)) {\n          if ('binaryUnitInput' === field.type) {\n            validators.push(CustomValidators.minBinaryUnit(field.validators.min));\n          } else {\n            validators.push(Validators.min(field.validators.min));\n          }\n        }\n        if (_.isNumber(field.validators.max)) {\n          if ('binaryUnitInput' === field.type) {\n            validators.push(CustomValidators.maxBinaryUnit(field.validators.max));\n          } else {\n            validators.push(Validators.max(field.validators.max));\n          }\n        }\n        if (_.isPlainObject(field.validators.pattern)) {\n          validators.push(\n            CustomValidators.pattern(\n              field.validators.pattern.pattern,\n              field.validators.pattern.errorData\n            )\n          );\n        }\n        if (_.isBoolean(field.validators.email) && field.validators.email) {\n          validators.push(Validators.email);\n        }\n        if (_.isPlainObject(field.validators.requiredIf)) {\n          validators.push(CustomValidators.requiredIf(field.validators.requiredIf));\n        }\n        if (_.isArray(field.validators.custom)) {\n          _.forEach(field.validators.custom, (custom: FormFieldConstraintValidator) => {\n            validators.push(\n              CustomValidators.constraint(\n                custom.constraint,\n                this.context,\n                custom.errorCode,\n                custom.errorData\n              )\n            );\n          });\n        }\n        if (_.isString(field.validators.patternType)) {\n          validators.push(CustomValidators.patternType(field.validators.patternType));\n        }\n      }\n      let value = _.defaultTo(field.value, null);\n      if (_.isString(value)) {\n        // Evaluate filters.\n        value = format(value, {});\n      }\n      // Create the form control.\n      controlsConfig[field.name] = new FormControl(\n        { value, disabled: _.defaultTo(field.disabled, false) },\n        { validators, updateOn: field.updateOn }\n      );\n    });\n    this.formGroup = this.formBuilder.group(controlsConfig);\n  }\n\n  private initializeModifiers(): void {\n    const allFields: FormFieldConfig[] = flattenFormFieldConfig(this.config);\n    _.forEach(\n      _.filter(allFields, (field) => !_.isEmpty(field.modifiers)),\n      (field: FormFieldConfig) => {\n        const control: AbstractControl = this.formGroup.get(field.name);\n        _.forEach(field.modifiers, (modifier: FormFieldModifier) => {\n          // Determine the list of form field names that this modifier\n          // depends on.\n          let deps: FormFieldName[] = [];\n          if (_.isPlainObject(modifier.constraint) && _.isArray(modifier.deps)) {\n            throw new Error('Both \"constraint\" and \"deps\" are mutually exclusive.');\n          }\n          if (_.isPlainObject(modifier.constraint)) {\n            deps = ConstraintService.getProps(modifier.constraint);\n          }\n          if (_.isArray(modifier.deps)) {\n            deps = _.cloneDeep(modifier.deps);\n          }\n          // Make sure, the field itself is not included in that list.\n          _.pull(deps, field.name);\n          // Subscribe to the `valueChanges` event for all involved fields.\n          // If a field which is part of the constraint changes its value,\n          // then the modifier is processed and applied.\n          _.forEach(deps, (fieldName: string) => {\n            this.subscriptions.add(\n              this.formGroup.get(fieldName)?.valueChanges.subscribe(() => {\n                this.doModifier(control, modifier);\n              })\n            );\n          });\n        });\n      }\n    );\n  }\n\n  private applyModifiers(): void {\n    const allFields: FormFieldConfig[] = flattenFormFieldConfig(this.config);\n    _.forEach(\n      _.filter(allFields, (field) => !_.isEmpty(field.modifiers)),\n      (field: FormFieldConfig) => {\n        const control: AbstractControl = this.formGroup.get(field.name);\n        _.forEach(field.modifiers, (modifier: FormFieldModifier) => {\n          this.doModifier(control, modifier);\n        });\n      }\n    );\n  }\n\n  private doModifier(control: AbstractControl, modifier: FormFieldModifier): void {\n    const opposite = _.defaultTo(modifier.opposite, true);\n    const nativeElement: HTMLElement = _.get(control, 'nativeElement');\n    const formFieldElement = nativeElement && nativeElement.closest('.mat-form-field');\n    // Note, use `getRawValue` here to get the latest values including\n    // those of disabled form fields as well. `values` is outdated at\n    // that moment because the event we are handling has not bubbled up\n    // to the form yet.\n    const values = _.merge({}, this.context, this.formGroup.getRawValue());\n    // If there is a constraint specified, then test it, otherwise assume\n    // the condition of the modifier is fulfilled. This is the case when\n    // the `deps` property is specified.\n    const fulfilled = _.isPlainObject(modifier.constraint)\n      ? ConstraintService.test(modifier.constraint, values)\n      : true;\n    switch (modifier.type) {\n      case 'disabled':\n        if (fulfilled) {\n          control.disable();\n        }\n        if (!fulfilled && opposite) {\n          control.enable();\n        }\n        break;\n      case 'enabled':\n        if (fulfilled) {\n          control.enable();\n        }\n        if (!fulfilled && opposite) {\n          control.disable();\n        }\n        break;\n      case 'checked':\n        if (fulfilled) {\n          control.setValue(true);\n        }\n        if (!fulfilled && opposite) {\n          control.setValue(false);\n        }\n        break;\n      case 'unchecked':\n        if (fulfilled) {\n          control.setValue(false);\n        }\n        if (!fulfilled && opposite) {\n          control.setValue(true);\n        }\n        break;\n      case 'focused':\n        if (fulfilled) {\n          setTimeout(() => {\n            nativeElement.focus();\n          });\n        }\n        break;\n      case 'visible':\n        if (!_.isUndefined(formFieldElement)) {\n          if (fulfilled) {\n            (formFieldElement as HTMLElement).parentElement.classList.remove('omv-display-none');\n          }\n          if (!fulfilled && opposite) {\n            (formFieldElement as HTMLElement).parentElement.classList.add('omv-display-none');\n          }\n        }\n        break;\n      case 'hidden':\n        if (!_.isUndefined(formFieldElement)) {\n          if (fulfilled) {\n            (formFieldElement as HTMLElement).parentElement.classList.add('omv-display-none');\n          }\n          if (!fulfilled && opposite) {\n            (formFieldElement as HTMLElement).parentElement.classList.remove('omv-display-none');\n          }\n        }\n        break;\n      case 'value':\n        if (fulfilled) {\n          const value = formatDeep(modifier.typeConfig, values);\n          control.setValue(value);\n        }\n        break;\n    }\n  }\n}\n","<form [attr.id]=\"id\"\n      [formGroup]=\"formGroup\">\n  <ng-container *ngFor=\"let field of config\">\n    <ng-container [ngTemplateOutlet]=\"renderFormField\"\n                  [ngTemplateOutletContext]=\"{ $implicit: field }\">\n    </ng-container>\n  </ng-container>\n</form>\n\n<ng-template #renderFormField\n             let-field>\n  <ng-container [ngSwitch]=\"field.type\">\n    <ng-template [ngSwitchCase]=\"'button'\">\n      <omv-form-button class=\"omv-display-flex\"\n                       [config]=\"field\"\n                       [formGroup]=\"formGroup\">\n      </omv-form-button>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'iconButton'\">\n      <omv-form-icon-button class=\"omv-display-flex\"\n                            [config]=\"field\"\n                            [formGroup]=\"formGroup\">\n      </omv-form-icon-button>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'textInput'\">\n      <omv-form-text-input class=\"omv-display-flex\"\n                           [config]=\"field\"\n                           [formGroup]=\"formGroup\">\n      </omv-form-text-input>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'tagInput'\">\n      <omv-form-tag-input class=\"omv-display-flex\"\n                          [config]=\"field\"\n                          [formGroup]=\"formGroup\">\n      </omv-form-tag-input>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'numberInput'\">\n      <omv-form-number-input class=\"omv-display-flex\"\n                             [config]=\"field\"\n                             [formGroup]=\"formGroup\">\n      </omv-form-number-input>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'binaryUnitInput'\">\n      <omv-form-binary-unit-input class=\"omv-display-flex\"\n                                  [config]=\"field\"\n                                  [formGroup]=\"formGroup\">\n      </omv-form-binary-unit-input>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'folderBrowser'\">\n      <omv-form-folderbrowser class=\"omv-display-flex\"\n                              [config]=\"field\"\n                              [formGroup]=\"formGroup\">\n      </omv-form-folderbrowser>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'checkbox'\">\n      <omv-form-checkbox class=\"omv-display-flex\"\n                         [config]=\"field\"\n                         [formGroup]=\"formGroup\">\n      </omv-form-checkbox>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'passwordInput'\">\n      <omv-form-password-input class=\"omv-display-flex\"\n                               [config]=\"field\"\n                               [formGroup]=\"formGroup\">\n      </omv-form-password-input>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'textarea'\">\n      <omv-form-textarea class=\"omv-display-flex\"\n                         [config]=\"field\"\n                         [formGroup]=\"formGroup\">\n      </omv-form-textarea>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'select'\">\n      <omv-form-select class=\"omv-display-flex\"\n                       [config]=\"field\"\n                       [formGroup]=\"formGroup\">\n      </omv-form-select>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'sharedFolderSelect'\">\n      <omv-form-sharedfolder-select class=\"omv-display-flex\"\n                                    [config]=\"field\"\n                                    [formGroup]=\"formGroup\">\n      </omv-form-sharedfolder-select>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'sshCertSelect'\">\n      <omv-form-sshcert-select class=\"omv-display-flex\"\n                               [config]=\"field\"\n                               [formGroup]=\"formGroup\">\n      </omv-form-sshcert-select>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'sslCertSelect'\">\n      <omv-form-sslcert-select class=\"omv-display-flex\"\n                               [config]=\"field\"\n                               [formGroup]=\"formGroup\">\n      </omv-form-sslcert-select>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'divider'\">\n      <omv-form-divider class=\"omv-display-flex\"\n                        [config]=\"field\"\n                        [formGroup]=\"formGroup\">\n      </omv-form-divider>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'paragraph'\">\n      <omv-form-paragraph class=\"omv-display-flex\"\n                          [config]=\"field\"\n                          [formGroup]=\"formGroup\">\n      </omv-form-paragraph>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'datePicker'\">\n      <omv-form-datepicker class=\"omv-display-flex\"\n                           [config]=\"field\"\n                           [formGroup]=\"formGroup\">\n      </omv-form-datepicker>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'datatable'\">\n      <omv-form-datatable class=\"omv-display-flex\"\n                          [config]=\"field\"\n                          [formGroup]=\"formGroup\">\n      </omv-form-datatable>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'slider'\">\n      <omv-form-slider class=\"omv-display-flex\"\n                       [config]=\"field\"\n                       [formGroup]=\"formGroup\">\n      </omv-form-slider>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'container'\">\n      <div class=\"omv-form-container omv-box-border omv-display-flex omv-flex-row omv-gap-3 omv-align-items-baseline\">\n        <div *ngFor=\"let innerField of field.fields\"\n             class=\"omv-form-container-item omv-max-w-{{ innerField.flex ?? 'none' }}\"\n             [ngClass]=\"{'omv-flex-grow': innerField.flex, 'omv-flex-1': !innerField.flex }\">\n          <ng-container [ngTemplateOutlet]=\"renderFormField\"\n                        [ngTemplateOutletContext]=\"{ $implicit: innerField }\">\n          </ng-container>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'fileInput'\">\n      <omv-form-file-input class=\"omv-display-flex\"\n                           [config]=\"field\"\n                           [formGroup]=\"formGroup\">\n      </omv-form-file-input>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'hint'\">\n      <omv-form-hint class=\"omv-display-flex\"\n                     [config]=\"field\"\n                     [formGroup]=\"formGroup\">\n      </omv-form-hint>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'codeEditor'\">\n      <omv-form-code-editor class=\"omv-display-flex\"\n                            [config]=\"field\"\n                            [formGroup]=\"formGroup\">\n      </omv-form-code-editor>\n    </ng-template>\n  </ng-container>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport * as _ from 'lodash';\n\nimport { FormFieldConfig } from '~/app/core/components/intuition/models/form-field-config.type';\n\n/**\n * Flatten the configuration the get all fields, including the ones used\n * in 'containers'.\n */\nexport const flattenFormFieldConfig = (fields: Array<FormFieldConfig>): Array<FormFieldConfig> =>\n  _.flatMap(\n    _.filter(\n      fields,\n      (field: FormFieldConfig) => !_.isUndefined(field.name) || _.isArray(field.fields)\n    ),\n    (field: FormFieldConfig) => {\n      if (_.isArray(field.fields)) {\n        return flattenFormFieldConfig(field.fields);\n      } else {\n        return field;\n      }\n    }\n  );\n\n/**\n * Helper function to set up 'confObjUuid' form fields.\n */\nexport const setupConfObjUuidFields = (fields: Array<FormFieldConfig>) => {\n  const filteredFields = _.filter(fields, { type: 'confObjUuid' });\n  if (filteredFields.length > 1) {\n    throw new Error(\"Only one 'confObjUuid' field per form is allowed.\");\n  }\n  if (filteredFields.length === 1) {\n    // Set the UUID that is used to tell the backend that the\n    // configuration object is new. The UUID will be replaced\n    // by another one automatically.\n    _.defaults(filteredFields[0], {\n      name: 'uuid',\n      value: '{{ _routeParams.uuid | default(newconfobjuuid) }}'\n    });\n  }\n};\n","/* eslint-disable max-len */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslocoModule } from '@ngneat/transloco';\n\nimport { DatatablePageComponent } from '~/app/core/components/intuition/datatable-page/datatable-page.component';\nimport { FormBinaryUnitInputComponent } from '~/app/core/components/intuition/form/components/form-binary-unit-input/form-binary-unit-input.component';\nimport { FormButtonComponent } from '~/app/core/components/intuition/form/components/form-button/form-button.component';\nimport { FormCheckboxComponent } from '~/app/core/components/intuition/form/components/form-checkbox/form-checkbox.component';\nimport { FormCodeEditorComponent } from '~/app/core/components/intuition/form/components/form-code-editor/form-code-editor.component';\nimport { FormDatatableComponent } from '~/app/core/components/intuition/form/components/form-datatable/form-datatable.component';\nimport { FormDatepickerComponent } from '~/app/core/components/intuition/form/components/form-datepicker/form-datepicker.component';\nimport { FormDividerComponent } from '~/app/core/components/intuition/form/components/form-divider/form-divider.component';\nimport { FormFileInputComponent } from '~/app/core/components/intuition/form/components/form-file-input/form-file-input.component';\nimport { FormFolderbrowserComponent } from '~/app/core/components/intuition/form/components/form-folderbrowser/form-folderbrowser.component';\nimport { FormHintComponent } from '~/app/core/components/intuition/form/components/form-hint/form-hint.component';\nimport { FormIconButtonComponent } from '~/app/core/components/intuition/form/components/form-icon-button/form-icon-button.component';\nimport { FormNumberInputComponent } from '~/app/core/components/intuition/form/components/form-number-input/form-number-input.component';\nimport { FormParagraphComponent } from '~/app/core/components/intuition/form/components/form-paragraph/form-paragraph.component';\nimport { FormPasswordInputComponent } from '~/app/core/components/intuition/form/components/form-password-input/form-password-input.component';\nimport { FormSelectComponent } from '~/app/core/components/intuition/form/components/form-select/form-select.component';\nimport { FormSharedfolderSelectComponent } from '~/app/core/components/intuition/form/components/form-sharedfolder-select/form-sharedfolder-select.component';\nimport { FormSliderComponent } from '~/app/core/components/intuition/form/components/form-slider/form-slider.component';\nimport { FormSshcertSelectComponent } from '~/app/core/components/intuition/form/components/form-sshcert-select/form-sshcert-select.component';\nimport { FormSslcertSelectComponent } from '~/app/core/components/intuition/form/components/form-sslcert-select/form-sslcert-select.component';\nimport { FormTagInputComponent } from '~/app/core/components/intuition/form/components/form-tag-input/form-tag-input.component';\nimport { FormTextInputComponent } from '~/app/core/components/intuition/form/components/form-text-input/form-text-input.component';\nimport { FormTextareaComponent } from '~/app/core/components/intuition/form/components/form-textarea/form-textarea.component';\nimport { FormComponent } from '~/app/core/components/intuition/form/form.component';\nimport { FormDialogComponent } from '~/app/core/components/intuition/form-dialog/form-dialog.component';\nimport { FormPageComponent } from '~/app/core/components/intuition/form-page/form-page.component';\nimport { MatFormButtonComponent } from '~/app/core/components/intuition/material/mat-form-button/mat-form-button.component';\nimport { MatFormCodeEditorComponent } from '~/app/core/components/intuition/material/mat-form-code-editor/mat-form-code-editor.component';\nimport { MatFormDatatableComponent } from '~/app/core/components/intuition/material/mat-form-datatable/mat-form-datatable.component';\nimport { MatFormTagInputComponent } from '~/app/core/components/intuition/material/mat-form-tag-input/mat-form-tag-input.component';\nimport { RrdPageComponent } from '~/app/core/components/intuition/rrd-page/rrd-page.component';\nimport { SelectionListPageComponent } from '~/app/core/components/intuition/selection-list-page/selection-list-page.component';\nimport { TabsPageComponent } from '~/app/core/components/intuition/tabs-page/tabs-page.component';\nimport { TextPageComponent } from '~/app/core/components/intuition/text-page/text-page.component';\nimport { MaterialModule } from '~/app/material.module';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    MatFormDatatableComponent,\n    MatFormCodeEditorComponent,\n    MatFormButtonComponent,\n    MatFormTagInputComponent,\n    FormComponent,\n    FormDialogComponent,\n    FormPageComponent,\n    FormCheckboxComponent,\n    FormNumberInputComponent,\n    FormTextInputComponent,\n    FormButtonComponent,\n    FormIconButtonComponent,\n    FormPasswordInputComponent,\n    FormBinaryUnitInputComponent,\n    FormTextareaComponent,\n    FormSelectComponent,\n    FormSharedfolderSelectComponent,\n    FormDividerComponent,\n    DatatablePageComponent,\n    FormDatepickerComponent,\n    FormDatatableComponent,\n    FormParagraphComponent,\n    FormSliderComponent,\n    FormHintComponent,\n    TextPageComponent,\n    FormSshcertSelectComponent,\n    FormSslcertSelectComponent,\n    TabsPageComponent,\n    FormFolderbrowserComponent,\n    FormFileInputComponent,\n    SelectionListPageComponent,\n    RrdPageComponent,\n    FormCodeEditorComponent,\n    FormTagInputComponent\n  ],\n  exports: [\n    DatatablePageComponent,\n    FormDialogComponent,\n    FormPageComponent,\n    TabsPageComponent,\n    TextPageComponent,\n    SelectionListPageComponent,\n    RrdPageComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslocoModule,\n    RouterModule\n  ]\n})\nexport class IntuitionModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n/* eslint-disable @typescript-eslint/member-ordering */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, Optional, Self, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport * as _ from 'lodash';\nimport { Subject } from 'rxjs';\n\nlet nextUniqueId = 0;\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-form-button',\n  exportAs: 'matFormButton',\n  templateUrl: './mat-form-button.component.html',\n  styleUrls: ['./mat-form-button.component.scss'],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: MatFormButtonComponent\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MatFormButtonComponent implements ControlValueAccessor, MatFormFieldControl<any> {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  public value: any; // Useless for a button.\n  public required: boolean; // Useless for a button.\n  public placeholder: string; // Useless for a button.\n  public empty = false; // Useless for a button.\n  public stateChanges = new Subject<void>();\n  public focused = false;\n  public shouldLabelFloat = false;\n  public errorState = false;\n  public controlType = 'button';\n\n  private _disabled = false;\n  private _uniqueId = `mat-form-button-${++nextUniqueId}`;\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (!_.isNull(this.ngControl)) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get id(): string {\n    return this._uniqueId;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  setDescribedByIds(ids: string[]): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  onContainerClick(event: MouseEvent): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","<button #button\n        mat-flat-button\n        color=\"primary\"\n        [disabled]=\"disabled\">\n  <ng-content></ng-content>\n</button>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n/* eslint-disable @typescript-eslint/member-ordering */\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n  Optional,\n  Self,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport {\n  autocompletion,\n  closeBrackets,\n  closeBracketsKeymap,\n  completionKeymap\n} from '@codemirror/autocomplete';\nimport { defaultKeymap, history, historyKeymap } from '@codemirror/commands';\nimport { json } from '@codemirror/lang-json';\nimport { python } from '@codemirror/lang-python';\nimport { xml } from '@codemirror/lang-xml';\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  foldGutter,\n  foldKeymap,\n  indentOnInput,\n  StreamLanguage,\n  syntaxHighlighting\n} from '@codemirror/language';\nimport { shell } from '@codemirror/legacy-modes/mode/shell';\nimport { yaml } from '@codemirror/legacy-modes/mode/yaml';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { Compartment, EditorState, Extension, StateEffect } from '@codemirror/state';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport {\n  EditorView,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  keymap,\n  lineNumbers,\n  ViewUpdate\n} from '@codemirror/view';\nimport * as _ from 'lodash';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { Unsubscribe } from '~/app/decorators';\nimport {\n  PrefersColorScheme,\n  PrefersColorSchemeService\n} from '~/app/shared/services/prefers-color-scheme.service';\n\nlet nextUniqueId = 0;\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-form-code-editor',\n  exportAs: 'matFormCodeEditor',\n  templateUrl: './mat-form-code-editor.component.html',\n  styleUrls: ['./mat-form-code-editor.component.scss'],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: MatFormCodeEditorComponent\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MatFormCodeEditorComponent\n  implements OnInit, AfterViewInit, ControlValueAccessor, MatFormFieldControl<string>\n{\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_required: BooleanInput;\n\n  @ViewChild('editorContainer', { static: true })\n  _editorContainer: ElementRef;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  public stateChanges = new Subject<void>();\n  public controlType = 'code-editor';\n\n  private _value = '';\n  private _focused = false;\n  private _disabled = false;\n  private _required = false;\n  private _placeholder: string;\n  private _uniqueId = `mat-form-code-editor-${++nextUniqueId}`;\n  private _editorState: EditorState;\n  private _editorView: EditorView;\n  private _useDarkTheme = false;\n\n  @Unsubscribe()\n  private subscriptions: Subscription = new Subscription();\n\n  // @ts-ignore\n  private onChange = (_value: any) => {};\n  // @ts-ignore\n  private onTouched = () => {};\n\n  constructor(\n    private prefersColorSchemeService: PrefersColorSchemeService,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    if (!_.isNull(this.ngControl)) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  @Input()\n  lineNumbers?: boolean = true;\n\n  @Input()\n  language?: 'json' | 'python' | 'shell' | 'xml' | 'yaml';\n\n  @Input()\n  get value(): string {\n    return this._value;\n  }\n  set value(value: string) {\n    if (this._editorView && !_.isEqual(value, this._value)) {\n      this._value = value;\n      const state: EditorState = this._editorView.state;\n      const transaction = state.update({\n        changes: { from: 0, to: state.doc.length, insert: value }\n      });\n      this._editorView.dispatch(transaction);\n      this.onChange(this.value);\n    }\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this._editorView) {\n      const stateEffect = new Compartment();\n      this._editorView.dispatch({\n        effects: stateEffect.reconfigure(EditorView.editable.of(value))\n      });\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n  set focused(value: boolean) {\n    this._focused = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get errorState(): boolean {\n    return this.ngControl?.touched && this.ngControl?.invalid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get empty(): boolean {\n    return !this.value;\n  }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.prefersColorSchemeService.change$.subscribe(\n        (prefersColorScheme: PrefersColorScheme): void => {\n          this._useDarkTheme = prefersColorScheme === 'dark';\n          this._editorView.dispatch({\n            effects: StateEffect.reconfigure.of(this.getExtensions())\n          });\n        }\n      )\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.createEditor();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get id(): string {\n    return this._uniqueId;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  setDescribedByIds(ids: string[]): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  onContainerClick(event: MouseEvent): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  private createEditor(): void {\n    this._editorState = EditorState.create({\n      doc: this.value,\n      extensions: this.getExtensions()\n    });\n    this._editorView = new EditorView({\n      parent: this._editorContainer.nativeElement,\n      state: this._editorState\n    });\n  }\n\n  private getExtensions(): Extension {\n    return [\n      bracketMatching(),\n      foldGutter(),\n      indentOnInput(),\n      autocompletion(),\n      closeBrackets(),\n      history(),\n      highlightActiveLine(),\n      highlightActiveLineGutter(),\n      highlightSelectionMatches(),\n      keymap.of([\n        ...defaultKeymap,\n        ...historyKeymap,\n        ...searchKeymap,\n        ...foldKeymap,\n        ...completionKeymap,\n        ...closeBracketsKeymap\n      ]),\n      EditorView.editable.of(!this.disabled),\n      EditorView.updateListener.of((vu: ViewUpdate) => {\n        if (vu.docChanged) {\n          this._value = vu.state.doc.toString();\n          this.onChange(this.value);\n        }\n        if (vu.focusChanged) {\n          this.focused = vu.view.hasFocus;\n        }\n      }),\n      EditorView.domEventHandlers({\n        blur: () => {\n          this.onTouched();\n          this.stateChanges.next();\n        }\n      }),\n      this.getLineNumbersExtensions(),\n      this.getThemeExtensions(),\n      this.getLanguageExtensions()\n    ];\n  }\n\n  private getThemeExtensions(): Extension {\n    return this._useDarkTheme ? oneDark : syntaxHighlighting(defaultHighlightStyle);\n  }\n\n  private getLanguageExtensions(): Extension {\n    return _.isString(this.language)\n      ? {\n          json: json(),\n          python: python(),\n          shell: StreamLanguage.define(shell),\n          xml: xml(),\n          yaml: StreamLanguage.define(yaml)\n        }[this.language]\n      : [];\n  }\n\n  private getLineNumbersExtensions(): Extension {\n    return this.lineNumbers ? lineNumbers() : [];\n  }\n}\n","<div #editorContainer\n     class=\"editor-container\">\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n/* eslint-disable @typescript-eslint/member-ordering */\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, OnChanges, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { Subject } from 'rxjs';\n\nimport { FormDialogComponent } from '~/app/core/components/intuition/form-dialog/form-dialog.component';\nimport { FormFieldConfig } from '~/app/core/components/intuition/models/form-field-config.type';\nimport { CoerceBoolean } from '~/app/decorators';\nimport { formatDeep } from '~/app/functions.helper';\nimport { DataTableCellChanged } from '~/app/shared/components/datatable/datatable.component';\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { DataStore } from '~/app/shared/models/data-store.type';\nimport { Datatable } from '~/app/shared/models/datatable.interface';\nimport { DatatableAction } from '~/app/shared/models/datatable-action.type';\nimport { DatatableColumn } from '~/app/shared/models/datatable-column.type';\nimport { DatatableSelection } from '~/app/shared/models/datatable-selection.model';\nimport { Sorter } from '~/app/shared/models/sorter.type';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\n\nlet nextUniqueId = 0;\n\nexport type MatFormDatatableAction = {\n  // Specifies a template which pre-configures the action button.\n  // add -    Shows a form dialog. When the dialog is successfully\n  //          closed, then the form values will be used to add a new\n  //          row to the datatable.\n  // edit -   Shows a form dialog which displays the data of the\n  //          current selected row. The action button is only enabled\n  //          when one row is selected. When the dialog is\n  //          successfully closed, then the form values are used\n  //          to update the current selected row.\n  // delete - The action button is only enabled when one row is\n  //          selected. If pressed, the current selected row will\n  //          be removed from the datatable.\n  template?: 'add' | 'edit' | 'delete';\n  formDialogConfig?: {\n    // The dialog title.\n    title?: string;\n    // Width of the dialog in 'px' or '%'. Defaults to '50%'.\n    width?: string;\n    // The form fields that is displayed in the dialog when the\n    // 'Add' or 'Edit' button is pressed.\n    fields?: Array<FormFieldConfig>;\n  };\n  // Transform the given keys in the form values after the dialog\n  // has been closed and before the datatable row will be added or\n  // updated.\n  // Example:\n  // Values = { foo: 'bar', num: '3', str: 'xyzzzz' }\n  // transform = {\n  //   foo: 'baz-{{ foo }}',\n  //   num: '{{ num | int }}',\n  //   str: '{{ str | strip(\"z\") }}',\n  //   add: 'aaa'\n  // }\n  // Result = { foo: 'baz-bar', num: 3, str: 'xy', add: 'aaa' }\n  transform?: { [key: string]: string };\n  // Internal\n  icon?: string;\n  tooltip?: string;\n  click?: () => void;\n};\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-form-datatable',\n  exportAs: 'matFormDatatable',\n  templateUrl: './mat-form-datatable.component.html',\n  styleUrls: ['./mat-form-datatable.component.scss'],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: MatFormDatatableComponent\n    }\n  ]\n})\nexport class MatFormDatatableComponent\n  implements ControlValueAccessor, MatFormFieldControl<any[]>, OnInit, OnDestroy, OnChanges\n{\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_disabled: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_required: BooleanInput;\n\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    if (!_.isEqual(value, this._value)) {\n      this.store.data = value;\n      this.dataStoreService.load(this.store).subscribe(() => {\n        this._value = _.cloneDeep(value);\n        this.onChange(this.value);\n        this.stateChanges.next();\n      });\n    }\n  }\n\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get id(): string {\n    return this._uniqueId;\n  }\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private dataStoreService: DataStoreService,\n    private dialogService: DialogService\n  ) {\n    // Replace the provider from above with this.\n    if (!_.isNull(this.ngControl)) {\n      // Setting the value accessor directly (instead of using\n      // the providers) to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /***********************************************************************\n   * Material related methods\n   **********************************************************************/\n\n  get empty(): boolean {\n    return !this._value.length;\n  }\n\n  @Input()\n  columns: DatatableColumn[] = [];\n\n  @Input()\n  columnMode?: 'standard' | 'flex' | 'force' = 'flex';\n\n  @Input()\n  actions: MatFormDatatableAction[] = [];\n\n  @CoerceBoolean()\n  @Input()\n  hasActionBar? = true;\n\n  @CoerceBoolean()\n  @Input()\n  hasSearchField? = false;\n\n  @CoerceBoolean()\n  @Input()\n  hasHeader? = true;\n\n  @CoerceBoolean()\n  @Input()\n  hasFooter? = true;\n\n  @Input()\n  limit? = 25;\n\n  @Input()\n  sorters?: Sorter[] = [];\n\n  @Input()\n  sortType?: 'single' | 'multi' = 'single';\n\n  @Input()\n  selectionType?: 'none' | 'single' | 'multi' = 'multi';\n\n  @Input()\n  valueType?: 'string' | 'integer' | 'number' | 'object' = 'object';\n\n  public controlType = 'datatable';\n  public stateChanges = new Subject<void>();\n  public shouldLabelFloat = true;\n  public errorState = false;\n  public focused = false;\n  public placeholder = '';\n  public selection = new DatatableSelection();\n  public store: DataStore = { data: [] };\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private _value = [];\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private _required = false;\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private _disabled = false;\n  // eslint-disable-next-line @typescript-eslint/naming-convention,no-underscore-dangle,id-blacklist,id-match\n  private _uniqueId = `mat-datatable-${++nextUniqueId}`;\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  private onChange = (_value: any) => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {}\n\n  setDescribedByIds(ids: string[]): void {\n    // Nothing to do here.\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    // Nothing to do here.\n  }\n\n  /***********************************************************************\n   * Component related methods\n   **********************************************************************/\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n    // Populate the store fields based on the configured columns.\n    this.store.fields = _.uniq(_.flatMap(this.columns, (column) => column.prop as string));\n  }\n\n  ngOnDestroy(): void {\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(): void {\n    this.stateChanges.next();\n  }\n\n  private sanitizeConfig() {\n    this.actions.forEach((action: DatatableAction) => {\n      _.defaultsDeep(action, {\n        click: this.onActionClick.bind(this)\n      });\n    });\n  }\n\n  onSelectionChange(selection: DatatableSelection) {\n    this.selection = selection;\n  }\n\n  onCellDataChanged(data: DataTableCellChanged) {\n    // The data store (`this.store.data`) contains the latest values.\n    // The internal representation needs to be updated.\n    this.syncValue();\n  }\n\n  onActionClick(action: DatatableAction, table: Datatable) {\n    const actionConfig = _.find(this.actions, { id: action.id });\n    switch (action.id) {\n      case 'add':\n      case 'edit':\n        const formDialogConfig: Record<string, any> = _.get(actionConfig, 'formDialogConfig');\n        const data = {\n          title: _.get(formDialogConfig, 'title'),\n          fields: _.get(formDialogConfig, 'fields')\n        };\n        if ('add' === action.id) {\n          _.defaultsDeep(data, {\n            buttons: {\n              submit: {\n                text: gettext('Add')\n              }\n            }\n          });\n        }\n        const formDialogRef = this.dialogService.open(FormDialogComponent, {\n          data,\n          width: _.get(formDialogConfig, 'width', '50%')\n        });\n        if ('edit' === action.id) {\n          // Update the form field values.\n          formDialogRef.afterOpened().subscribe(() => {\n            formDialogRef.componentInstance.setFormValues(table.selection.first());\n          });\n        }\n        formDialogRef.afterClosed().subscribe((res) => {\n          if (res) {\n            // Apply value transformation.\n            if (_.isPlainObject(formDialogConfig.transform)) {\n              const tmp = formatDeep(formDialogConfig.transform, res);\n              _.merge(res, tmp);\n            }\n            switch (action.id) {\n              case 'add':\n                this.store.data.push(res);\n                break;\n              case 'edit':\n                // We can process the `table.selection.selected` here\n                // because the objects are referencing the objects in\n                // `this.store.data`.\n                const selected = table.selection.first();\n                _.assign(selected, res);\n                break;\n            }\n            this.syncValue();\n          }\n        });\n        break;\n      case 'delete':\n        const modalDialogRef = this.dialogService.open(ModalDialogComponent, {\n          data: {\n            template: 'confirmation',\n            title: gettext('Delete'),\n            message: gettext('Do you really want to delete the selected item(s)?'),\n            buttons: [{}, { class: 'omv-background-color-pair-red' }]\n          }\n        });\n        modalDialogRef.afterClosed().subscribe((res) => {\n          if (res) {\n            this.store.data = _.pullAllWith(this.store.data, table.selection.selected, _.isEqual);\n            this.syncValue();\n          }\n        });\n        break;\n    }\n  }\n\n  private syncValue() {\n    const value = [];\n    _.forEach(this.store.data, (item: any) => {\n      switch (this.valueType) {\n        case 'integer':\n        case 'number':\n        case 'string':\n          // Use the first column of all columns to get the property\n          // name to be processed.\n          const column: DatatableColumn = _.first(this.columns);\n          item = _.get(item, column.prop);\n          // Convert the value.\n          switch (this.valueType) {\n            case 'integer':\n              item = _.toInteger(item);\n              break;\n            case 'number':\n              item = _.toNumber(item);\n              break;\n            case 'string':\n              item = _.toString(item);\n              break;\n          }\n          break;\n        case 'object':\n          // Nothing to do here.\n          break;\n      }\n      value.push(item);\n    });\n    this.writeValue(value);\n  }\n}\n","<omv-datatable #table\n               [data]=\"store.data\"\n               [autoReload]=\"false\"\n               [hasReloadButton]=\"false\"\n               [columns]=\"columns\"\n               [columnMode]=\"columnMode\"\n               [hasActionBar]=\"hasActionBar\"\n               [hasSearchField]=\"hasSearchField\"\n               [hasHeader]=\"hasHeader\"\n               [hasFooter]=\"hasFooter\"\n               [selectionType]=\"selectionType\"\n               (selectionChangeEvent)=\"onSelectionChange($event)\"\n               [limit]=\"limit\"\n               [sorters]=\"sorters\"\n               [sortType]=\"sortType\"\n               (cellDataChangedEvent)=\"onCellDataChanged($event)\">\n  <omv-datatable-actions [actions]=\"actions\"\n                         [selection]=\"selection\"\n                         [table]=\"table\">\n  </omv-datatable-actions>\n</omv-datatable>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n/* eslint-disable @typescript-eslint/member-ordering */\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, HostBinding, Input, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport * as _ from 'lodash';\nimport { Subject } from 'rxjs';\n\nimport { Icon } from '~/app/shared/enum/icon.enum';\n\nlet nextUniqueId = 0;\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'mat-form-tag-input',\n  exportAs: 'matFormTagInput',\n  templateUrl: './mat-form-tag-input.component.html',\n  styleUrls: ['./mat-form-tag-input.component.scss'],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: MatFormTagInputComponent\n    }\n  ]\n})\nexport class MatFormTagInputComponent implements ControlValueAccessor, MatFormFieldControl<string> {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_required: BooleanInput;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  public stateChanges = new Subject<void>();\n  public controlType = 'tag-input';\n\n  public icon = Icon;\n  public readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n  private _value: string[] = [];\n  private _focused = false;\n  private _disabled = false;\n  private _required = false;\n  private _placeholder: string;\n  private _uniqueId = `mat-form-tag-input-${++nextUniqueId}`;\n\n  // @ts-ignore\n  private onChange = (_value: any) => {};\n  // @ts-ignore\n  private onTouched = () => {};\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (!_.isNull(this.ngControl)) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  @Input()\n  separator?: string = String.fromCharCode(COMMA);\n\n  @Input()\n  get value(): string {\n    return this._value.join(this.separator);\n  }\n  set value(value: string) {\n    const tags: string[] = _.isEmpty(value) ? [] : value.split(this.separator);\n    if (!_.isEqual(tags, this._value)) {\n      this._value = tags;\n      this.onChange(value);\n    }\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n  set focused(value: boolean) {\n    this._focused = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get errorState(): boolean {\n    return this.ngControl?.touched && this.ngControl?.invalid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get empty(): boolean {\n    return !this._value.length;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  get id(): string {\n    return this._uniqueId;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  setDescribedByIds(ids: string[]): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   */\n  onContainerClick(event: MouseEvent): void {\n    // Nothing to do here.\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  onAdd(event: MatChipInputEvent): void {\n    const tag = (event.value || '').trim();\n    if (tag) {\n      this._value.push(tag);\n      this._value = _.uniq(this._value).sort();\n      this.onChange(this.value);\n    }\n    event.chipInput?.clear();\n  }\n\n  onRemove(tag: string): void {\n    const index = this._value.indexOf(tag);\n    if (index >= 0) {\n      this._value.splice(index, 1);\n      this.onChange(this.value);\n    }\n  }\n\n  onBlur(event: Event): void {\n    this.onTouched();\n    this.stateChanges.next();\n  }\n}\n","<mat-chip-list #chipList>\n  <mat-chip *ngFor=\"let tag of (value | split:separator)\"\n            removable\n            (removed)=\"onRemove(tag)\">\n    {{ tag | transloco }}\n    <button *ngIf=\"!disabled\"\n            matChipRemove>\n      <mat-icon [svgIcon]=\"icon.close\"></mat-icon>\n    </button>\n  </mat-chip>\n  <input *ngIf=\"!disabled\"\n         [placeholder]=\"empty && placeholder\"\n         [matChipInputFor]=\"chipList\"\n         [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n         matChipInputAddOnBlur\n         (blur)=\"onBlur($event)\"\n         (matChipInputTokenEnd)=\"onAdd($event)\">\n</mat-chip-list>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { EMPTY } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\nimport { AbstractPageComponent } from '~/app/core/components/intuition/abstract-page-component';\nimport {\n  RrdPageConfig,\n  RrdPageGraphConfig\n} from '~/app/core/components/intuition/models/rrd-page-config.type';\nimport { format, formatDeep, unixTimeStamp } from '~/app/functions.helper';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  selector: 'omv-intuition-rrd-page',\n  templateUrl: './rrd-page.component.html',\n  styleUrls: ['./rrd-page.component.scss']\n})\nexport class RrdPageComponent extends AbstractPageComponent<RrdPageConfig> implements OnInit {\n  public monitoringEnabled = true;\n  public error: HttpErrorResponse;\n  public icon = Icon;\n  public loading = false;\n  public time: number;\n  public tabs: Array<{\n    label: string;\n    graphs: Array<RrdPageGraphConfig>;\n  }> = [];\n\n  public monitoringDisabledMessage: string = gettext(\n    \"System monitoring is disabled. To enable it, please go to the <a href='#/system/monitoring'>settings page</a>.\"\n  );\n\n  constructor(\n    @Inject(ActivatedRoute) activatedRoute: ActivatedRoute,\n    @Inject(AuthSessionService) authSessionService: AuthSessionService,\n    @Inject(Router) router: Router,\n    private blockUiService: BlockUiService,\n    private dataStoreService: DataStoreService,\n    private rpcService: RpcService\n  ) {\n    super(activatedRoute, authSessionService, router);\n    // Check if monitoring is enabled.\n    this.rpcService.request('PerfStats', 'get',{}).subscribe((resp) => {\n      this.monitoringEnabled = _.get(resp, 'enable', false);\n    });\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.time = unixTimeStamp();\n    if (this.config?.store) {\n      this.loading = true;\n      this.dataStoreService\n        .load(this.config.store)\n        .pipe(\n          catchError((error) => {\n            this.error = error;\n            return EMPTY;\n          }),\n          finalize(() => {\n            this.loading = false;\n          })\n        )\n        .subscribe(() => {\n          _.forEach(this.config.store.data, (item: Record<any, any>) => {\n            const label = format(this.config.label, item);\n            const graphs: RrdPageGraphConfig[] = _.map(\n              this.config.graphs,\n              (graph: RrdPageGraphConfig) => formatDeep(graph, item) as RrdPageGraphConfig\n            );\n            this.tabs.push({ label, graphs });\n          });\n        });\n    }\n  }\n\n  onGenerate() {\n    this.blockUiService.start(gettext('Please wait, the statistic graphs will be regenerated ...'));\n    this.rpcService\n      .requestTask('Rrd', 'generate')\n      .pipe(\n        finalize(() => {\n          this.blockUiService.stop();\n        })\n      )\n      .subscribe(() => {\n        // Force redrawing the images.\n        this.time = unixTimeStamp();\n      });\n  }\n}\n","<omv-alert-panel *ngIf=\"!monitoringEnabled\"\n                 type=\"info\">\n  <span [innerHTML]=\"monitoringDisabledMessage | transloco | sanitizeHtml\"></span>\n</omv-alert-panel>\n\n<ng-container *ngIf=\"monitoringEnabled && !config.store\">\n  <ng-container [ngTemplateOutlet]=\"renderRrdGraphs\"\n                [ngTemplateOutletContext]=\"{ $implicit: config.graphs }\">\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"monitoringEnabled && config.store\">\n  <ng-container *ngIf=\"loading\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    <omv-alert-panel type=\"info\">\n      {{ \"Please wait, the data is being loaded ...\" | transloco }}\n    </omv-alert-panel>\n  </ng-container>\n  <omv-alert-panel *ngIf=\"error && !loading\"\n                   type=\"error\">\n    {{ error | httpErrorResponse:'message' }}\n  </omv-alert-panel>\n  <mat-tab-group [ngClass]=\"{'omv-display-none': loading || error}\">\n    <mat-tab *ngFor=\"let tab of tabs\"\n             [label]=\"tab.label\">\n      <ng-container [ngTemplateOutlet]=\"renderRrdGraphs\"\n                    [ngTemplateOutletContext]=\"{ $implicit: tab.graphs }\">\n      </ng-container>\n    </mat-tab>\n  </mat-tab-group>\n</ng-container>\n\n<ng-template #renderRrdGraphs\n             let-graphs>\n  <ng-container *ngIf=\"graphs.length === 1\">\n    <ng-container [ngTemplateOutlet]=\"renderRrdGraph\"\n                  [ngTemplateOutletContext]=\"{ $implicit: graphs[0].name }\">\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"graphs.length > 1\">\n    <mat-tab-group>\n      <mat-tab *ngFor=\"let graph of graphs\"\n               [label]=\"graph.label\">\n        <ng-container [ngTemplateOutlet]=\"renderRrdGraph\"\n                      [ngTemplateOutletContext]=\"{ $implicit: graph.name }\">\n        </ng-container>\n      </mat-tab>\n    </mat-tab-group>\n  </ng-container>\n</ng-template>\n\n<ng-template #renderRrdGraph\n             let-name>\n  <mat-card>\n    <mat-toolbar class=\"omv-display-flex omv-flex-row omv-justify-content-end omv-sticky\">\n      <button mat-icon-button\n              matTooltip=\"{{ 'Reload' | transloco }}\"\n              (click)=\"onGenerate()\">\n        <mat-icon svgIcon=\"{{ icon.reload }}\"></mat-icon>\n      </button>\n    </mat-toolbar>\n    <mat-card-content class=\"omv-display-flex omv-flex-column omv-justify-content-start omv-align-items-center\">\n      <div>\n        <img src=\"download.php?service=Rrd&method=getGraph&params=%7B%22kind%22:%22{{ name }}%22,%22period%22:%22hour%22%7D&time={{ time }}\"\n             loading=\"lazy\"\n             loadingState\n             alt=\"RRD graph - by hour\"/>\n      </div>\n      <div>\n        <img src=\"download.php?service=Rrd&method=getGraph&params=%7B%22kind%22:%22{{ name }}%22,%22period%22:%22day%22%7D&time={{ time }}\"\n             loading=\"lazy\"\n             loadingState\n             alt=\"RRD graph - by day\"/>\n      </div>\n      <div>\n        <img src=\"download.php?service=Rrd&method=getGraph&params=%7B%22kind%22:%22{{ name }}%22,%22period%22:%22week%22%7D&time={{ time }}\"\n             loading=\"lazy\"\n             loadingState\n             alt=\"RRD graph - by week\"/>\n      </div>\n      <div>\n        <img src=\"download.php?service=Rrd&method=getGraph&params=%7B%22kind%22:%22{{ name }}%22,%22period%22:%22month%22%7D&time={{ time }}\"\n             loading=\"lazy\"\n             loadingState\n             alt=\"RRD graph - by month\"/>\n      </div>\n      <div>\n        <img src=\"download.php?service=Rrd&method=getGraph&params=%7B%22kind%22:%22{{ name }}%22,%22period%22:%22year%22%7D&time={{ time }}\"\n             loading=\"lazy\"\n             loadingState\n             alt=\"RRD graph - by year\"/>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatSelectionList, MatSelectionListChange } from '@angular/material/list';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { EMPTY } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\nimport { AbstractPageComponent } from '~/app/core/components/intuition/abstract-page-component';\nimport {\n  SelectionListPageButtonConfig,\n  SelectionListPageConfig\n} from '~/app/core/components/intuition/models/selection-list-page-config.type';\nimport { format, toBoolean } from '~/app/functions.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { DataStore } from '~/app/shared/models/data-store.type';\nimport { Dirty } from '~/app/shared/models/dirty.interface';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Component({\n  selector: 'omv-intuition-selection-list-page',\n  templateUrl: './selection-list-page.component.html',\n  styleUrls: ['./selection-list-page.component.scss']\n})\nexport class SelectionListPageComponent\n  extends AbstractPageComponent<SelectionListPageConfig>\n  implements OnInit, Dirty\n{\n  @ViewChild('list', { static: true })\n  list: MatSelectionList;\n\n  public error: HttpErrorResponse;\n  public loading = false;\n  public dirty = false;\n  public data: Record<string, any>[] = [];\n\n  constructor(\n    @Inject(ActivatedRoute) activatedRoute: ActivatedRoute,\n    @Inject(AuthSessionService) authSessionService: AuthSessionService,\n    @Inject(Router) router: Router,\n    private dataStoreService: DataStoreService,\n    private notificationService: NotificationService\n  ) {\n    super(activatedRoute, authSessionService, router);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.loadData();\n  }\n\n  isDirty(): boolean {\n    return this.dirty;\n  }\n\n  markAsDirty(): void {\n    this.dirty = true;\n  }\n\n  markAsPristine(): void {\n    this.dirty = false;\n  }\n\n  onSelectAll(): void {\n    if (!_.isEmpty(this.config.selectedProp) && this.config.updateStoreOnSelectionChange) {\n      const allSelected = _.every(this.config.store.data, [this.config.selectedProp, true]);\n      if (!allSelected) {\n        this.list.selectAll();\n      } else {\n        this.list.deselectAll();\n      }\n      _.forEach(this.config.store.data, (item: Record<string, any>) => {\n        _.set(item, this.config.selectedProp, !allSelected);\n      });\n      this.markAsDirty();\n    }\n  }\n\n  onSelectionChange(event: MatSelectionListChange) {\n    if (!_.isEmpty(this.config.selectedProp) && this.config.updateStoreOnSelectionChange) {\n      const index = _.findIndex(this.config.store.data, [\n        this.config.valueProp,\n        event.options[0].value\n      ]);\n      if (-1 !== index) {\n        const item: Record<string, any> = _.nth(this.config.store.data, index);\n        _.set(item, this.config.selectedProp, event.options[0].selected);\n        this.markAsDirty();\n      }\n    }\n  }\n\n  onButtonClick(buttonConfig: SelectionListPageButtonConfig): void {\n    switch (buttonConfig?.execute?.type) {\n      case 'click':\n        if (_.isFunction(buttonConfig.execute.click)) {\n          const values = [];\n          _.forEach(this.list.selectedOptions.selected, (selected) => {\n            values.push(selected.value);\n          });\n          buttonConfig.execute.click(buttonConfig, this.config.store, values);\n        }\n        break;\n      case 'url':\n        if (_.isString(buttonConfig.execute.url)) {\n          this.router.navigateByUrl(buttonConfig.execute.url);\n        }\n        break;\n    }\n  }\n\n  onSubmit(buttonConfig: SelectionListPageButtonConfig, store: DataStore, value: Array<any>) {\n    this.dataStoreService\n      .save(store)\n      .pipe(\n        catchError((error) => {\n          this.error = error;\n          return EMPTY;\n        })\n      )\n      .subscribe(() => {\n        this.markAsPristine();\n        // Display the configured notification message.\n        const notificationTitle = _.get(this.routeConfig, 'data.notificationTitle');\n        if (!_.isEmpty(notificationTitle)) {\n          this.notificationService.show(\n            NotificationType.success,\n            undefined,\n            format(notificationTitle, this.pageContext)\n          );\n        }\n        // Navigate to an optional URL.\n        if (_.isString(buttonConfig.execute.url)) {\n          this.router.navigateByUrl(buttonConfig.execute.url);\n        }\n      });\n  }\n\n  protected override sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      hasSelectAllButton: false,\n      buttonAlign: 'end',\n      buttons: [],\n      multiple: false,\n      valueField: 'value',\n      textField: 'text',\n      selectedField: undefined,\n      updateInline: false,\n      value: []\n    });\n    // Set the default values of the buttons.\n    _.forEach(this.config.buttons, (button) => {\n      const template = _.get(button, 'template');\n      switch (template) {\n        case 'back':\n          _.defaultsDeep(button, {\n            text: gettext('Back')\n          });\n          break;\n        case 'cancel':\n          _.defaultsDeep(button, {\n            text: gettext('Cancel')\n          });\n          break;\n        case 'submit':\n          _.defaultsDeep(button, {\n            text: gettext('Save'),\n            execute: {\n              type: 'click',\n              click: this.onSubmit.bind(this)\n            }\n          });\n          break;\n      }\n    });\n    // Relocate the 'submit' button to the end of the list.\n    const index = _.findIndex(this.config.buttons, ['template', 'submit']);\n    if (index !== -1) {\n      const button = this.config.buttons[index];\n      this.config.buttons.splice(index, 1);\n      this.config.buttons.push(button);\n    }\n  }\n\n  private loadData() {\n    const store = this.config.store;\n    this.loading = true;\n    this.dataStoreService\n      .load(store)\n      .pipe(\n        catchError((error) => {\n          this.error = error;\n          return EMPTY;\n        }),\n        finalize(() => {\n          this.loading = false;\n        })\n      )\n      .subscribe(\n        () => {\n          // Extract the selected values from the loaded data.\n          if (!_.isEmpty(this.config.selectedProp)) {\n            const value = [];\n            _.forEach(this.config.store.data, (item) => {\n              const selectedFieldValue = _.get(item, this.config.selectedProp, false);\n              if (toBoolean(selectedFieldValue)) {\n                value.push(_.get(item, this.config.valueProp));\n              }\n            });\n            this.config.value = value;\n          }\n        },\n        () => {\n          store.data = [];\n        }\n      );\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  <omv-alert-panel type=\"info\">\n    {{ \"Please wait, the data is being loaded ...\" | transloco }}\n  </omv-alert-panel>\n</ng-container>\n<omv-alert-panel *ngIf=\"error && !loading\"\n                 type=\"error\">\n  {{ error | httpErrorResponse:'message' }}\n</omv-alert-panel>\n<mat-card [ngClass]=\"{'omv-display-none': loading || error}\">\n  <mat-toolbar *ngIf=\"config.multiple && config.hasSelectAllButton\"\n               class=\"omv-sticky\">\n    <button mat-icon-button\n            matTooltip=\"{{ 'Select all' | transloco }}\"\n            (click)=\"onSelectAll()\">\n      <mat-icon svgIcon=\"mdi:check-all\"></mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-card-title-group *ngIf=\"config.title || config.subTitle\">\n    <mat-card-title *ngIf=\"config.title\">\n      {{ config.title | transloco }}\n    </mat-card-title>\n    <mat-card-subtitle *ngIf=\"config.subTitle\">\n      {{ config.subTitle | transloco }}\n    </mat-card-subtitle>\n  </mat-card-title-group>\n  <mat-card-content>\n    <mat-selection-list #list\n                        [multiple]=\"config.multiple\"\n                        (selectionChange)=\"onSelectionChange($event)\">\n      <mat-list-option *ngFor=\"let option of config.store.data\"\n                       checkboxPosition=\"before\"\n                       [value]=\"option[config.valueProp]\"\n                       [selected]=\"config.value.includes(option[config.valueProp])\">\n        {{ option[config.textProp] | transloco }}\n        <mat-hint *ngIf=\"config.hintProp && option[config.hintProp]\">\n          {{ option[config.hintProp] | transloco }}\n        </mat-hint>\n      </mat-list-option>\n    </mat-selection-list>\n  </mat-card-content>\n  <mat-card-actions *ngIf=\"config.buttons.length\"\n                    class=\"omv-display-flex omv-flex-row\"\n                    [ngClass]=\"{'omv-justify-content-start': config.buttonAlign === 'start', 'omv-justify-content-center': config.buttonAlign === 'center', 'omv-justify-content-end': config.buttonAlign === 'end'}\">\n    <ng-container *ngFor=\"let button of config.buttons\">\n      <omv-submit-button *ngIf=\"button.template === 'submit'\"\n                         [disabled]=\"!dirty\"\n                         (buttonClick)=\"onButtonClick(button)\">\n        {{ button.text | transloco }}\n      </omv-submit-button>\n      <button *ngIf=\"button.template !== 'submit'\"\n              mat-flat-button\n              [class]=\"button.class\"\n              (click)=\"onButtonClick(button)\">\n        {{ button.text | transloco }}\n      </button>\n    </ng-container>\n  </mat-card-actions>\n</mat-card>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'lodash';\n\nimport { AbstractPageComponent } from '~/app/core/components/intuition/abstract-page-component';\nimport { TabsPageConfig } from '~/app/core/components/intuition/models/tabs-page-config.type';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\n\n/**\n * This component will render a page containing tabs.\n */\n@Component({\n  selector: 'omv-intuition-tabs-page',\n  templateUrl: './tabs-page.component.html',\n  styleUrls: ['./tabs-page.component.scss']\n})\nexport class TabsPageComponent extends AbstractPageComponent<TabsPageConfig> {\n  constructor(\n    @Inject(ActivatedRoute) activatedRoute,\n    @Inject(AuthSessionService) authSessionService: AuthSessionService,\n    @Inject(Router) router: Router\n  ) {\n    super(activatedRoute, authSessionService, router);\n  }\n\n  protected override sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      singleRoute: true,\n      tabs: []\n    });\n  }\n}\n","<ng-container *ngIf=\"config.singleRoute\">\n  <mat-tab-group>\n    <mat-tab *ngFor=\"let tab of config.tabs\"\n             label=\"{{ tab.label | transloco }}\">\n      <ng-container [ngSwitch]=\"tab.type\">\n        <ng-template [ngSwitchCase]=\"'form'\">\n          <omv-intuition-form-page [config]=\"tab.config\"></omv-intuition-form-page>\n        </ng-template>\n\n        <ng-template [ngSwitchCase]=\"'datatable'\">\n          <omv-intuition-datatable-page [config]=\"tab.config\"></omv-intuition-datatable-page>\n        </ng-template>\n\n        <ng-template [ngSwitchCase]=\"'text'\">\n          <omv-intuition-text-page [config]=\"tab.config\"></omv-intuition-text-page>\n        </ng-template>\n\n        <ng-template [ngSwitchCase]=\"'selectionlist'\">\n          <omv-intuition-selection-list-page [config]=\"tab.config\"></omv-intuition-selection-list-page>\n        </ng-template>\n      </ng-container>\n    </mat-tab>\n  </mat-tab-group>\n</ng-container>\n<ng-container *ngIf=\"!config.singleRoute\">\n  <nav mat-tab-nav-bar>\n    <a *ngFor=\"let tab of config.tabs\"\n       mat-tab-link\n       [routerLink]=\"tab.url\"\n       routerLinkActive\n       #rla=\"routerLinkActive\"\n       [active]=\"rla.isActive\">\n      {{ tab.label | transloco }}\n    </a>\n  </nav>\n  <router-outlet></router-outlet>\n</ng-container>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { EMPTY, Subscription, timer } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\n\nimport { AbstractPageComponent } from '~/app/core/components/intuition/abstract-page-component';\nimport {\n  TextPageButtonConfig,\n  TextPageConfig\n} from '~/app/core/components/intuition/models/text-page-config.type';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n/**\n * Display text in a read-only textarea using a non-proportional font.\n */\n@Component({\n  selector: 'omv-intuition-text-page',\n  templateUrl: './text-page.component.html',\n  styleUrls: ['./text-page.component.scss']\n})\nexport class TextPageComponent\n  extends AbstractPageComponent<TextPageConfig>\n  implements OnInit, OnDestroy\n{\n  public error: HttpErrorResponse;\n  public icon = Icon;\n  public loading = false;\n  public text = '';\n\n  private reloadSubscription: Subscription;\n\n  constructor(\n    @Inject(ActivatedRoute) activatedRoute: ActivatedRoute,\n    @Inject(AuthSessionService) authSessionService: AuthSessionService,\n    @Inject(Router) router: Router,\n    private clipboardService: ClipboardService,\n    private rpcService: RpcService\n  ) {\n    super(activatedRoute, authSessionService, router);\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.reloadSubscription = timer(\n      0,\n      _.isNumber(this.config.autoReload) ? (this.config.autoReload as number) : null\n    ).subscribe(() => {\n      this.loadData();\n    });\n  }\n\n  override ngOnDestroy(): void {\n    this.reloadSubscription?.unsubscribe();\n    super.ngOnDestroy();\n  }\n\n  onCopyToClipboard() {\n    this.clipboardService.copy(this.text);\n  }\n\n  onButtonClick(buttonConfig: TextPageButtonConfig) {\n    if (_.isFunction(buttonConfig.click)) {\n      buttonConfig.click();\n    } else {\n      this.router.navigateByUrl(buttonConfig.url);\n    }\n  }\n\n  loadData() {\n    if (\n      _.isPlainObject(this.config.request) &&\n      _.isString(this.config.request.service) &&\n      _.isPlainObject(this.config.request.get)\n    ) {\n      this.loading = true;\n      // noinspection DuplicatedCode\n      this.rpcService[this.config.request.get.task ? 'requestTask' : 'request'](\n        this.config.request.service,\n        this.config.request.get.method,\n        this.config.request.get.params\n      )\n        .pipe(\n          catchError((error) => {\n            this.error = error;\n            return EMPTY;\n          }),\n          finalize(() => {\n            this.loading = false;\n          })\n        )\n        .subscribe((res: any) => {\n          this.text = res;\n        });\n    }\n  }\n\n  protected override sanitizeConfig() {\n    _.defaultsDeep(this.config, {\n      autoReload: false,\n      hasReloadButton: false,\n      hasCopyToClipboardButton: false,\n      buttonAlign: 'end',\n      buttons: []\n    });\n    // Set the default values of the buttons.\n    _.forEach(this.config.buttons, (button) => {\n      const template = _.get(button, 'template');\n      switch (template) {\n        case 'back':\n          _.defaultsDeep(button, {\n            text: gettext('Back')\n          });\n          break;\n        case 'cancel':\n          _.defaultsDeep(button, {\n            text: gettext('Cancel')\n          });\n          break;\n      }\n    });\n  }\n\n  protected override onRouteParams() {\n    // Format tokenized configuration properties.\n    this.formatConfig(['title', 'subTitle', 'request.get.method', 'request.get.params']);\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  <omv-alert-panel type=\"info\">\n    {{ \"Please wait, the data is being loaded ...\" | transloco }}\n  </omv-alert-panel>\n</ng-container>\n<omv-alert-panel *ngIf=\"error && !loading\"\n                 type=\"error\">\n  {{ error | httpErrorResponse:'message' }}\n</omv-alert-panel>\n<mat-card [ngClass]=\"{'omv-display-none': loading || error}\">\n  <mat-toolbar *ngIf=\"config.hasCopyToClipboardButton || (config.hasReloadButton && !config.autoReload)\"\n               class=\"omv-display-flex omv-flex-row omv-sticky\">\n    <button *ngIf=\"config.hasCopyToClipboardButton\"\n            mat-icon-button\n            matTooltip=\"{{ 'Copy to clipboard' | transloco }}\"\n            (click)=\"onCopyToClipboard()\">\n      <mat-icon svgIcon=\"{{ icon.copy }}\"></mat-icon>\n    </button>\n    <div class=\"omv-flex-1\"></div>\n    <button *ngIf=\"config.hasReloadButton && !config.autoReload\"\n            mat-icon-button\n            matTooltip=\"{{ 'Reload' | transloco }}\"\n            (click)=\"loadData()\">\n      <mat-icon svgIcon=\"{{ icon.reload }}\"></mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-card-title-group *ngIf=\"config.title || config.subTitle\">\n    <mat-card-title *ngIf=\"config.title\">\n      {{ config.title | transloco }}\n    </mat-card-title>\n    <mat-card-subtitle *ngIf=\"config.subTitle\">\n      {{ config.subTitle | transloco }}\n    </mat-card-subtitle>\n  </mat-card-title-group>\n  <mat-card-content class=\"omv-scrollable-xy\">\n    <div class=\"omv-text-wrap omv-text-monospace\">{{ text }}</div>\n  </mat-card-content>\n  <mat-card-actions *ngIf=\"config.buttons.length\"\n                    class=\"omv-display-flex omv-flex-row\"\n                    [ngClass]=\"{'omv-justify-content-start': config.buttonAlign === 'start', 'omv-justify-content-center': config.buttonAlign === 'center', 'omv-justify-content-end': config.buttonAlign === 'end'}\">\n    <button *ngFor=\"let button of config.buttons\"\n            mat-flat-button\n            [class]=\"button.class\"\n            (click)=\"onButtonClick(button)\">\n      {{ button.text | transloco }}\n    </button>\n  </mat-card-actions>\n</mat-card>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'omv-blank-layout',\n  templateUrl: './blank-layout.component.html',\n  styleUrls: ['./blank-layout.component.scss']\n})\nexport class BlankLayoutComponent {\n  constructor() {}\n}\n","<router-outlet></router-outlet>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDrawerMode, MatSidenav } from '@angular/material/sidenav';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { forkJoin, Subscription } from 'rxjs';\nimport { delay, filter, finalize, take, tap } from 'rxjs/operators';\n\nimport { DashboardWidgetConfigService } from '~/app/core/services/dashboard-widget-config.service';\nimport { LogConfigService } from '~/app/core/services/log-config.service';\nimport { MkfsConfigService } from '~/app/core/services/mkfs-config.service';\nimport { NavigationConfigService } from '~/app/core/services/navigation-config.service';\nimport { Unsubscribe } from '~/app/decorators';\nimport { translate } from '~/app/i18n.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PrefersColorSchemeService } from '~/app/shared/services/prefers-color-scheme.service';\nimport { SystemInformationService } from '~/app/shared/services/system-information.service';\nimport { RunningTasks, TaskRunnerService } from '~/app/shared/services/task-runner.service';\nimport { UserLocalStorageService } from '~/app/shared/services/user-local-storage.service';\n\n@Component({\n  selector: 'omv-workbench-layout',\n  templateUrl: './workbench-layout.component.html',\n  styleUrls: ['./workbench-layout.component.scss']\n})\nexport class WorkbenchLayoutComponent implements OnInit {\n  @ViewChild('navigationSidenav', { static: false })\n  private navigationSidenav: MatSidenav;\n\n  @ViewChild('notificationSidenav', { static: false })\n  private notificationSidenav: MatSidenav;\n\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  public loading = true;\n  public sideNavMode: MatDrawerMode;\n  public sideNavOpened = false;\n  public displayWelcomeMessage = false;\n\n  private isSmallScreen: boolean;\n\n  constructor(\n    private authSessionService: AuthSessionService,\n    private blockUiService: BlockUiService,\n    private dashboardWidgetConfigService: DashboardWidgetConfigService,\n    private breakpointObserver: BreakpointObserver,\n    private navigationConfig: NavigationConfigService,\n    private notificationService: NotificationService,\n    private prefersColorSchemeService: PrefersColorSchemeService,\n    private router: Router,\n    private logConfigService: LogConfigService,\n    private mkfsConfigService: MkfsConfigService,\n    private systemInformationService: SystemInformationService,\n    private taskRunnerService: TaskRunnerService,\n    private userLocalStorageService: UserLocalStorageService\n  ) {\n    this.initLayout();\n    // Do not subscribe on login page.\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event: Event) => event instanceof NavigationEnd))\n        .subscribe(() => {\n          if (this.isSmallScreen) {\n            // Is not available on login page.\n            this.navigationSidenav?.close();\n          }\n        })\n    );\n    this.subscriptions.add(\n      breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small]).subscribe(() => {\n        this.updateState();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    this.updateState();\n  }\n\n  onToggleNavigation() {\n    this.navigationSidenav?.toggle();\n  }\n\n  onToggleNotification() {\n    this.notificationSidenav?.toggle();\n  }\n\n  private updateState() {\n    this.isSmallScreen =\n      this.breakpointObserver.isMatched(Breakpoints.XSmall) ||\n      this.breakpointObserver.isMatched(Breakpoints.Small);\n    setTimeout(() => {\n      this.sideNavOpened = !this.isSmallScreen;\n      this.sideNavMode = this.isSmallScreen ? 'over' : 'side';\n    });\n  }\n\n  private initLayout(): void {\n    // Load the navigation, dashboard widgets and logging configuration.\n    // Additionally, load the users local storage settings and apply them\n    // to the browsers local storage.\n    this.loading = true;\n    this.blockUiService.start(translate(gettext('Loading ...')));\n    forkJoin([\n      this.navigationConfig.load(),\n      this.dashboardWidgetConfigService.load(),\n      this.logConfigService.load(),\n      this.mkfsConfigService.load(),\n      this.userLocalStorageService.load().pipe(\n        tap(() => {\n          // The theme settings may need to be synchronized and applied\n          // after the local storage settings have been transferred from\n          // the server.\n          this.prefersColorSchemeService.sync();\n        })\n      )\n    ])\n      .pipe(\n        // Delay a second, otherwise the display of the loading progress\n        // bar looks like screen flickering.\n        delay(1000),\n        finalize(() => {\n          this.loading = false;\n          this.blockUiService.stop();\n          this.onAfterInitLayout();\n        })\n      )\n      .subscribe();\n  }\n\n  private onAfterInitLayout(): void {\n    if (this.authSessionService.hasAdminRole()) {\n      this.taskRunnerService.enumerate().subscribe((tasks: RunningTasks) => {\n        if (_.keys(tasks).length) {\n          this.notificationService.show(\n            NotificationType.info,\n            gettext('A running background task was detected.'),\n            gettext('Go to the notification sidebar to attach to it.')\n          );\n        }\n      });\n      this.systemInformationService.systemInfo$.pipe(take(1)).subscribe((sysInfo) => {\n        this.displayWelcomeMessage = sysInfo.displayWelcomeMessage;\n      });\n    }\n  }\n}\n","<mat-sidenav-container *ngIf=\"!loading\"\n                       class=\"omv-flex-fill\"\n                       autosize>\n  <mat-sidenav #navigationSidenav\n               id=\"omv-workbench-navigation\"\n               position=\"start\"\n               [mode]=\"sideNavMode\"\n               [opened]=\"sideNavOpened\">\n    <omv-navigation-bar></omv-navigation-bar>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"omv-display-flex omv-flex-column\">\n    <omv-top-bar (navigationToggleChange)=\"onToggleNavigation()\"\n                 (notificationToggleChange)=\"onToggleNotification()\">\n    </omv-top-bar>\n    <omv-welcome-panel *ngIf=\"displayWelcomeMessage\"></omv-welcome-panel>\n    <omv-apply-config-panel></omv-apply-config-panel>\n    <omv-breadcrumb class=\"omv-mx omv-my-q\"></omv-breadcrumb>\n    <div id=\"omv-workbench-router-outlet\"\n         class=\"omv-scrollable-y\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n  <mat-sidenav #notificationSidenav\n               mode=\"over\"\n               position=\"end\">\n    <omv-notification-bar [sidenav]=\"notificationSidenav\"></omv-notification-bar>\n  </mat-sidenav>\n</mat-sidenav-container>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Event, NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NavigationBarListItem } from '~/app/core/components/navigation-bar/navigation-bar-list-item/navigation-bar-list-item.type';\nimport { Unsubscribe } from '~/app/decorators';\nimport { Icon } from '~/app/shared/enum/icon.enum';\n\n@Component({\n  selector: 'omv-navigation-bar-list-item',\n  templateUrl: './navigation-bar-list-item.component.html',\n  styleUrls: ['./navigation-bar-list-item.component.scss']\n})\nexport class NavigationBarListItemComponent implements OnInit {\n  @Input()\n  item: NavigationBarListItem;\n\n  @Input()\n  depth = 0;\n\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  public icon = Icon;\n\n  constructor(private router: Router) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event: Event) => event instanceof NavigationStart))\n        .subscribe((event: NavigationStart) => {\n          this.item.active = false;\n          this.item.expanded = _.startsWith(event.url, this.item.url);\n        })\n    );\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event: Event) => event instanceof NavigationEnd))\n        .subscribe((event: NavigationEnd) => {\n          if (this.item.children && this.item.children.length > 0) {\n            // If the item has children, the compare the whole URL.\n            this.item.active = event.url === this.item.url;\n          } else {\n            // If the item is a leaf, then compare the beginning of the\n            // string, so the item will be displayed as active if a page\n            // is shown that is using parts of the items URL, e.g.:\n            // - Route of the menu item: /system/powermgmt/tasks/\n            // - Route of the displayed page: /system/powermgmt/tasks/create\n            this.item.active = _.startsWith(event.url, this.item.url);\n          }\n        })\n    );\n  }\n\n  ngOnInit(): void {\n    if (this.item.children && this.item.children.length > 0) {\n      this.item.active = this.router.url === this.item.url;\n    } else {\n      this.item.active = _.startsWith(this.router.url, this.item.url);\n    }\n    this.item.expanded = _.startsWith(this.router.url, this.item.url);\n  }\n\n  onClick(item: NavigationBarListItem) {\n    if (item.children && item.children.length > 0) {\n      item.expanded = !item.expanded;\n    }\n    if (item.url) {\n      this.router.navigate([item.url]);\n    }\n  }\n}\n","<mat-list-item role=\"listitem\"\n               [ngClass]=\"{'active': item.active}\"\n               (click)=\"onClick(item)\">\n  <div class=\"omv-list-item-indent-z{{ depth }}\"></div>\n  <mat-icon svgIcon=\"{{ item.icon | mapIconEnum }}\"></mat-icon>\n  <div class=\"omv-text-truncate\">\n    {{ item.text | transloco }}\n  </div>\n  <div *ngIf=\"item.children?.length > 0\"\n       class=\"omv-display-flex omv-flex-row omv-flex-1\">\n    <div class=\"omv-flex-1\"></div>\n    <mat-icon svgIcon=\"{{ item.expanded ? icon.chevronDown : icon.chevronRight }}\"></mat-icon>\n  </div>\n</mat-list-item>\n<div *ngIf=\"item.expanded && item.children?.length > 0\">\n  <omv-navigation-bar-list-item *ngFor=\"let child of item.children\"\n                                [item]=\"child\"\n                                [depth]=\"depth + 1\">\n  </omv-navigation-bar-list-item>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  NavigationConfigService,\n  NavigationMenuItem\n} from '~/app/core/services/navigation-config.service';\n\n@Component({\n  selector: 'omv-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.scss']\n})\nexport class NavigationBarComponent implements OnInit, OnDestroy {\n  public menuItems: NavigationMenuItem[];\n\n  private subscription: Subscription;\n\n  constructor(private navigationConfig: NavigationConfigService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.navigationConfig.configs$.subscribe((menuItems) => {\n      this.menuItems = menuItems;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"omv-navigation-bar omv-display-flex omv-flex-column\">\n  <mat-toolbar class=\"header\">\n    <div class=\"logo\"></div>\n  </mat-toolbar>\n  <div class=\"content omv-flex-1\">\n    <ng-scrollbar appearance=\"standard\"\n                  visibility=\"hover\">\n      <mat-nav-list role=\"list\">\n        <omv-navigation-bar-list-item *ngFor=\"let item of menuItems\"\n                                      [item]=\"item\">\n        </omv-navigation-bar-list-item>\n      </mat-nav-list>\n    </ng-scrollbar>\n  </div>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { Subscription, timer } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\n\nimport { Unsubscribe } from '~/app/decorators';\nimport { TaskDialogComponent } from '~/app/shared/components/task-dialog/task-dialog.component';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Notification } from '~/app/shared/models/notification.model';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\nimport {\n  SystemInformation,\n  SystemInformationService\n} from '~/app/shared/services/system-information.service';\nimport { RunningTasks, TaskRunnerService } from '~/app/shared/services/task-runner.service';\n\n@Component({\n  selector: 'omv-notification-bar',\n  templateUrl: './notification-bar.component.html',\n  styleUrls: ['./notification-bar.component.scss']\n})\nexport class NotificationBarComponent implements OnInit {\n  @Input()\n  sidenav?: MatSidenav;\n\n  @Unsubscribe()\n  private subscriptions: Subscription = new Subscription();\n\n  public icon = Icon;\n  public notifications: Notification[] = [];\n  public tasks: RunningTasks;\n  public dismissibleNotifications = false;\n\n  constructor(\n    private authSessionService: AuthSessionService,\n    private clipboardService: ClipboardService,\n    private dialogService: DialogService,\n    private notificationService: NotificationService,\n    private router: Router,\n    private rpcService: RpcService,\n    private systemInformationService: SystemInformationService,\n    private taskRunnerService: TaskRunnerService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.notificationService.notifications$.subscribe(() => this.updateNotifications())\n    );\n    this.subscriptions.add(\n      this.systemInformationService.systemInfo$.subscribe(() => this.updateNotifications())\n    );\n    if (this.authSessionService.hasAdminRole()) {\n      this.subscriptions.add(\n        this.sidenav.openedStart.subscribe(() => {\n          timer(0, 5000)\n            .pipe(takeUntil(this.sidenav.closedStart))\n            .subscribe(() => this.loadTasks());\n        })\n      );\n    }\n  }\n\n  onRemoveNotification(notification: Notification): void {\n    this.notificationService.remove(notification);\n  }\n\n  onRemoveAllNotifications(): void {\n    this.notificationService.removeAll();\n  }\n\n  onCopyNotification(notification: Notification): void {\n    this.clipboardService.copy(`${notification.message}\\n\\n${notification.traceback}`);\n  }\n\n  onStopTask(filename: string): void {\n    this.rpcService\n      .request('Exec', 'stop', {\n        filename\n      })\n      .subscribe({\n        complete: () => this.loadTasks()\n      });\n  }\n\n  onAttachTask(filename: string): void {\n    this.sidenav.close();\n    this.dialogService.open(TaskDialogComponent, {\n      width: '75%',\n      data: {\n        title: gettext('Background task'),\n        startOnInit: true,\n        request: {\n          service: 'Exec',\n          method: 'attach',\n          params: {\n            filename\n          }\n        }\n      }\n    });\n  }\n\n  onNavigate(url?: string): void {\n    if (_.isString(url)) {\n      this.sidenav.close();\n      this.router.navigate([url]);\n    }\n  }\n\n  private loadTasks(): void {\n    this.taskRunnerService.enumerate().subscribe((tasks: RunningTasks) => {\n      this.tasks = tasks;\n    });\n  }\n\n  private updateNotifications(): void {\n    this.systemInformationService.systemInfo$\n      .pipe(take(1))\n      .subscribe((sysInfo: SystemInformation) => {\n        // Make a deep copy of the notifications and reverse the order.\n        const notifications = _.reverse(_.clone(this.notificationService.getAll()));\n        // Append additional notifications.\n        if (sysInfo.rebootRequired) {\n          const notification: Notification = new Notification(\n            NotificationType.info,\n            gettext('System restart required'),\n            gettext(\n              'A reboot is needed to fully apply the changes introduced by package installation or upgrade.'\n            )\n          );\n          notification.dismissible = false;\n          notification.timestamp = undefined;\n          notifications.unshift(notification);\n        }\n        if (sysInfo.availablePkgUpdates > 0) {\n          const notification: Notification = new Notification(\n            NotificationType.info,\n            gettext('Updates available'),\n            gettext('New package updates are available for installation.')\n          );\n          notification.dismissible = false;\n          notification.timestamp = undefined;\n          notification.url = '/system/updatemgmt/updates';\n          notifications.unshift(notification);\n        }\n        this.dismissibleNotifications = _.filter(notifications, ['dismissible', true]).length > 0;\n        this.notifications = notifications;\n      });\n  }\n}\n","<div class=\"omv-notification-bar\">\n  <mat-toolbar>\n    <button mat-icon-button\n            class=\"omv-color-primary\"\n            matTooltip=\"{{ 'Dismiss all' | transloco }}\"\n            [disabled]=\"!dismissibleNotifications\"\n            (click)=\"onRemoveAllNotifications()\">\n      <mat-icon svgIcon=\"{{ icon.delete }}\"></mat-icon>\n    </button>\n  </mat-toolbar>\n  <mat-list role=\"list\">\n    <mat-list-item *ngFor=\"let task of tasks | keyvalue\"\n                   role=\"listitem\">\n      <mat-icon mat-list-icon\n                svgIcon=\"{{ icon.console }}\">\n      </mat-icon>\n      <span mat-line\n            class=\"list-item-message\">\n        {{ \"Background task\" | transloco }}\n      </span>\n      <span mat-line\n            class=\"list-item-timestamp\">\n        {{ task.value.startTime | localeDate:'relative' }}\n      </span>\n      <button mat-icon-button\n              [matMenuTriggerFor]=\"taskActionMenu\">\n        <mat-icon svgIcon=\"{{ icon.dotmenu }}\"></mat-icon>\n      </button>\n      <mat-menu #taskActionMenu=\"matMenu\">\n        <ng-template matMenuContent>\n          <button mat-menu-item\n                  (click)=\"onAttachTask(task.key)\">\n            <mat-icon svgIcon=\"{{ icon.console }}\"></mat-icon>\n            <span>{{ 'Attach' | transloco }}</span>\n          </button>\n          <mat-divider></mat-divider>\n          <button mat-menu-item\n                  (click)=\"onStopTask(task.key)\">\n            <mat-icon svgIcon=\"{{ icon.stop }}\"></mat-icon>\n            <span>{{ 'Stop' | transloco }}</span>\n          </button>\n        </ng-template>\n      </mat-menu>\n    </mat-list-item>\n\n    <mat-divider *ngIf=\"tasks | count\"></mat-divider>\n\n    <mat-list-item *ngIf=\"!notifications.length\"\n                   role=\"listitem\">\n      <mat-icon mat-list-icon\n                class=\"omv-color-info\"\n                svgIcon=\"{{ icon.information }}\">\n      </mat-icon>\n      <p mat-line\n         class=\"list-item-title omv-font-weight-bold\">\n        {{ 'There are no notifications.' | transloco }}\n      </p>\n    </mat-list-item>\n\n    <mat-list-item *ngFor=\"let notification of notifications\"\n                   role=\"listitem\">\n      <mat-icon *ngIf=\"notification.type === 'success'\"\n                mat-list-icon\n                class=\"omv-color-success\"\n                svgIcon=\"{{ icon.success }}\">\n      </mat-icon>\n      <mat-icon *ngIf=\"notification.type === 'error'\"\n                mat-list-icon\n                class=\"omv-color-error\"\n                svgIcon=\"{{ icon.error }}\">\n      </mat-icon>\n      <mat-icon *ngIf=\"notification.type === 'warning'\"\n                mat-list-icon\n                class=\"omv-color-warning\"\n                svgIcon=\"{{ icon.warning }}\">\n      </mat-icon>\n      <mat-icon *ngIf=\"notification.type === 'info'\"\n                mat-list-icon\n                class=\"omv-color-info\"\n                svgIcon=\"{{ icon.information }}\">\n      </mat-icon>\n      <span mat-line\n            class=\"list-item-title omv-font-weight-bold\"\n            [ngClass]=\"{'omv-cursor-pointer': notification.url}\"\n            (click)=\"onNavigate(notification.url)\">\n        {{ notification.title | transloco | truncate:100 }}\n      </span>\n      <span mat-line\n            class=\"list-item-message\"\n            [ngClass]=\"{'omv-cursor-pointer': notification.url}\"\n            (click)=\"onNavigate(notification.url)\">\n        {{ notification.message | transloco | truncate:100 }}\n        <mat-icon *ngIf=\"notification.url\"\n                  class=\"omv-icon-sm\"\n                  svgIcon=\"{{ icon.link }}\">\n        </mat-icon>\n      </span>\n      <span *ngIf=\"notification.timestamp\"\n            mat-line\n            class=\"list-item-timestamp\">\n        {{ notification.timestamp | localeDate:'relative' }}\n      </span>\n      <button mat-icon-button\n              [matMenuTriggerFor]=\"notificationActionMenu\">\n        <mat-icon svgIcon=\"{{ icon.dotmenu }}\"></mat-icon>\n      </button>\n      <mat-menu #notificationActionMenu=\"matMenu\">\n        <ng-template matMenuContent>\n          <button mat-menu-item\n                  [disabled]=\"!notification.message?.length\"\n                  (click)=\"onCopyNotification(notification)\">\n            <mat-icon svgIcon=\"{{ icon.copy }}\"></mat-icon>\n            <span>{{ 'Copy to clipboard' | transloco }}</span>\n          </button>\n          <button mat-menu-item\n                  [disabled]=\"!notification.dismissible\"\n                  (click)=\"onRemoveNotification(notification)\">\n            <mat-icon svgIcon=\"{{ icon.delete }}\"></mat-icon>\n            <span>{{ 'Dismiss' | transloco }}</span>\n          </button>\n        </ng-template>\n      </mat-menu>\n    </mat-list-item>\n  </mat-list>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport { EMPTY, interval, Subscription } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\n\nimport { Unsubscribe } from '~/app/decorators';\nimport { format } from '~/app/functions.helper';\nimport { translate } from '~/app/i18n.helper';\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { Permissions, Roles } from '~/app/shared/models/permissions.model';\nimport { AuthService } from '~/app/shared/services/auth.service';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { LocaleService } from '~/app/shared/services/locale.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { PrefersColorSchemeService } from '~/app/shared/services/prefers-color-scheme.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\nimport {\n  SystemInformation,\n  SystemInformationService\n} from '~/app/shared/services/system-information.service';\nimport { UserLocalStorageService } from '~/app/shared/services/user-local-storage.service';\n\n@Component({\n  selector: 'omv-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent {\n  @Output()\n  readonly navigationToggleChange = new EventEmitter();\n\n  @Output()\n  readonly notificationToggleChange = new EventEmitter();\n\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  public icon = Icon;\n  public currentLocale: string;\n  public locales: Record<string, string> = {};\n  public username: string;\n  public hostname: string;\n  public permissions: Permissions;\n  public readonly roles = Roles;\n  public numNotifications: undefined | number;\n  public darkModeEnabled: boolean;\n  public loggedInAs: string;\n\n  constructor(\n    private blockUiService: BlockUiService,\n    private authService: AuthService,\n    private authSessionService: AuthSessionService,\n    private prefersColorSchemeService: PrefersColorSchemeService,\n    private router: Router,\n    private rpcService: RpcService,\n    private userLocalStorageService: UserLocalStorageService,\n    private dialogService: DialogService,\n    private notificationService: NotificationService,\n    private systemInformationService: SystemInformationService\n  ) {\n    this.currentLocale = LocaleService.getCurrentLocale();\n    this.locales = LocaleService.getSupportedLocales();\n    this.username = this.authSessionService.getUsername();\n    this.loggedInAs = gettext(\n      format('Logged in as <strong>{{ username }}</strong>', { username: this.username })\n    );\n    this.permissions = this.authSessionService.getPermissions();\n    this.darkModeEnabled = this.prefersColorSchemeService.current === 'dark';\n    this.subscriptions.add(\n      this.notificationService.notifications$.subscribe(() => this.updateNumNotifications())\n    );\n    this.subscriptions.add(\n      this.systemInformationService.systemInfo$.subscribe((sysInfo: SystemInformation) => {\n        this.hostname = sysInfo.hostname;\n        this.updateNumNotifications();\n      })\n    );\n  }\n\n  onToggleNavigation(event: Event): void {\n    event.stopPropagation();\n    this.navigationToggleChange.emit();\n  }\n\n  onToggleNotification(event: Event): void {\n    event.stopPropagation();\n    this.notificationToggleChange.emit();\n  }\n\n  onLogout(): void {\n    this.showDialog(\n      gettext('Logout'),\n      gettext('Do you really want to logout?'),\n      'confirmation',\n      () => {\n        this.blockUiService.start(translate(gettext('Please wait ...')));\n        this.authService.logout().subscribe();\n      }\n    );\n  }\n\n  onReboot(): void {\n    this.showDialog(\n      gettext('Reboot'),\n      gettext('Do you really want to reboot the system?'),\n      'confirmation-critical',\n      () => {\n        this.rpcService.request('System', 'reboot', { delay: 0 }).subscribe(() => {\n          this.blockUiService.start(\n            translate(gettext('The system will reboot now. This may take some time ...'))\n          );\n          const subscription = interval(5000)\n            .pipe(\n              switchMap(() =>\n                this.rpcService.request('System', 'noop').pipe(\n                  catchError((error) => {\n                    // Do not show an error notification.\n                    error.preventDefault?.();\n                    // Check if we got a 'HTTP 401 Unauthorized status'.\n                    // In that case the request was successful, but\n                    // authentication failed => this means the system is\n                    // up again.\n                    if (error.status === 401) {\n                      subscription.unsubscribe();\n                      this.blockUiService.stop();\n                    }\n                    return EMPTY;\n                  })\n                )\n              )\n            )\n            .subscribe();\n        });\n      }\n    );\n  }\n\n  onStandby(): void {\n    this.showDialog(\n      gettext('Standby'),\n      gettext('Do you really want to put the system into standby?'),\n      'confirmation-critical',\n      () => {\n        this.rpcService.request('System', 'standby', { delay: 0 }).subscribe(() => {\n          this.router.navigate(['/standby']);\n        });\n      }\n    );\n  }\n\n  onShutdown(): void {\n    this.showDialog(\n      gettext('Shutdown'),\n      gettext('Do you really want to shutdown the system?'),\n      'confirmation-critical',\n      () => {\n        this.rpcService.request('System', 'shutdown', { delay: 0 }).subscribe(() => {\n          this.router.navigate(['/shutdown']);\n        });\n      }\n    );\n  }\n\n  onLocale(locale): void {\n    // Update browser cookie and reload page.\n    LocaleService.setCurrentLocale(locale);\n    this.router.navigate(['/reload']);\n  }\n\n  onClearStateStorage(): void {\n    // Clear browser cookies and reload page.\n    this.showDialog(\n      gettext('Reset UI to defaults'),\n      gettext('Do you really want to reset the UI settings to their default values?'),\n      'confirmation',\n      () => {\n        this.userLocalStorageService.clear();\n        this.router.navigate(['/reload']);\n      }\n    );\n  }\n\n  onToggleDarkMode(): void {\n    this.prefersColorSchemeService.toggle();\n    this.darkModeEnabled = !this.darkModeEnabled;\n  }\n\n  private showDialog(title: string, message: string, template: string, callback: () => void): void {\n    const dialogRef = this.dialogService.open(ModalDialogComponent, {\n      data: { template, title, message }\n    });\n    dialogRef.afterClosed().subscribe((res) => {\n      if (res) {\n        callback();\n      }\n    });\n  }\n\n  private updateNumNotifications(): void {\n    this.systemInformationService.systemInfo$\n      .pipe(take(1))\n      .subscribe((sysInfo: SystemInformation) => {\n        let numNotifications: number = this.notificationService.getAll().length;\n        if (sysInfo.rebootRequired) {\n          numNotifications += 1;\n        }\n        if (sysInfo.availablePkgUpdates > 0) {\n          numNotifications += 1;\n        }\n        this.numNotifications = numNotifications;\n      });\n  }\n}\n","<mat-toolbar class=\"omv-top-bar\"\n             color=\"primary\">\n  <button mat-icon-button\n          matTooltip=\"{{ 'Show/Hide navigation' | transloco }}\"\n          (click)=\"onToggleNavigation($event)\">\n    <mat-icon svgIcon=\"{{ icon.menu }}\"></mat-icon>\n  </button>\n  <span class=\"omv-flex-1\"></span>\n  <span class=\"hostname\">{{ hostname }}</span>\n  <mat-divider *ngIf=\"hostname\"\n               vertical=\"true\">\n  </mat-divider>\n  <button *ngIf=\"permissions?.role.includes(roles.admin)\"\n          mat-icon-button\n          matTooltip=\"{{ 'Notifications' | transloco }}\"\n          (click)=\"onToggleNotification($event)\">\n    <mat-icon svgIcon=\"{{ icon.bell }}\"\n              [matBadge]=\"numNotifications\"\n              [matBadgeHidden]=\"!numNotifications\"\n              matBadgeColor=\"accent\"\n              matBadgeOverlap=\"true\"\n              matBadgeSize=\"small\">\n    </mat-icon>\n  </button>\n  <button mat-icon-button\n          matTooltip=\"{{ 'Help' | transloco }}\"\n          [matMenuTriggerFor]=\"helpMenu\">\n    <mat-icon svgIcon=\"{{ icon.help }}\"></mat-icon>\n  </button>\n  <button mat-icon-button\n          matTooltip=\"{{ 'User Settings' | transloco }}\"\n          [matMenuTriggerFor]=\"settingsMenu\">\n    <mat-icon svgIcon=\"{{ icon.user }}\"></mat-icon>\n  </button>\n  <button *ngIf=\"permissions?.role.includes(roles.admin)\"\n          mat-icon-button\n          matTooltip=\"{{ 'Power' | transloco }}\"\n          [matMenuTriggerFor]=\"powerMenu\">\n    <mat-icon svgIcon=\"{{ icon.power }}\"></mat-icon>\n  </button>\n\n  <mat-menu #settingsMenu=\"matMenu\">\n    <ng-template matMenuContent>\n      <button mat-menu-item\n              disabled>\n        <mat-icon svgIcon=\"{{ icon.user }}\"></mat-icon>\n        <span [innerHTML]=\"loggedInAs | transloco | sanitizeHtml\"></span>\n      </button>\n      <button *ngIf=\"permissions?.role.includes(roles.user)\"\n              mat-menu-item\n              routerLink=\"/usermgmt/profile\">\n        <mat-icon svgIcon=\"mdi:account-details\"></mat-icon>\n        <span>{{ 'Your profile' | transloco }}</span>\n      </button>\n      <!-- <button mat-menu-item\n              routerLink=\"/usermgmt/change-password\">\n        <mat-icon svgIcon=\"{{ icon.password }}\"></mat-icon>\n        <span>{{ 'Change Password' | transloco }}</span>\n      </button> -->\n      <button mat-menu-item\n              (click)=\"onLogout()\">\n        <mat-icon svgIcon=\"{{ icon.logout }}\"></mat-icon>\n        <span>{{ 'Logout' | transloco }}</span>\n      </button>\n      <mat-divider></mat-divider>\n      <button mat-menu-item\n              [ngClass]=\"{'active': darkModeEnabled}\"\n              (click)=\"onToggleDarkMode()\">\n        <mat-icon svgIcon=\"mdi:weather-night\"></mat-icon>\n        <mat-slide-toggle [checked]=\"darkModeEnabled\">{{ 'Dark mode' | transloco }}</mat-slide-toggle>\n      </button>\n      <button mat-menu-item\n              [matMenuTriggerFor]=\"localeMenu\">\n        <mat-icon svgIcon=\"mdi:earth\"></mat-icon>\n        <span>{{ 'Language' | transloco }}</span>\n      </button>\n      <button mat-menu-item\n              routerLink=\"/dashboard/settings\">\n        <mat-icon svgIcon=\"{{ icon.apps }}\"></mat-icon>\n        <span>{{ 'Dashboard' | transloco }}</span>\n      </button>\n      <mat-divider></mat-divider>\n      <button mat-menu-item\n              (click)=\"onClearStateStorage()\">\n        <mat-icon svgIcon=\"{{ icon.reset }}\"></mat-icon>\n        <span>{{ 'Reset UI to defaults' | transloco }}</span>\n      </button>\n    </ng-template>\n  </mat-menu>\n\n  <mat-menu #powerMenu=\"matMenu\">\n    <ng-template matMenuContent>\n      <button mat-menu-item\n              (click)=\"onReboot()\">\n        <mat-icon svgIcon=\"{{ icon.reboot }}\"></mat-icon>\n        <span>{{ 'Reboot' | transloco }}</span>\n      </button>\n      <button mat-menu-item\n              (click)=\"onStandby()\">\n        <mat-icon svgIcon=\"{{ icon.standby }}\"></mat-icon>\n        <span>{{ 'Standby' | transloco }}</span>\n      </button>\n      <button mat-menu-item\n              (click)=\"onShutdown()\">\n        <mat-icon svgIcon=\"{{ icon.shutdown }}\"></mat-icon>\n        <span>{{ 'Shutdown' | transloco }}</span>\n      </button>\n    </ng-template>\n  </mat-menu>\n\n  <mat-menu #localeMenu=\"matMenu\">\n    <ng-template matMenuContent>\n      <button *ngFor=\"let locale of locales | keyvalue\"\n              mat-menu-item\n              [ngClass]=\"{'active': locale.key === currentLocale}\"\n              [disabled]=\"locale.key === currentLocale\"\n              (click)=\"onLocale(locale.key)\">\n        <span>{{ locale.value }}</span>\n      </button>\n    </ng-template>\n  </mat-menu>\n\n  <mat-menu #helpMenu=\"matMenu\">\n    <ng-template matMenuContent>\n      <a class=\"omv-text-decoration-none\"\n         href=\"https://doc.nextzenos.com/howtouse/h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn-s%E1%BB%AD-d%E1%BB%A5ng-theo-t%C3%ADnh-n%C4%83ng/qu%E1%BA%A3n-l%C3%AD-%E1%BB%95-c%E1%BB%A9ng-nas.html\">\n        <button mat-menu-item>\n          <mat-icon svgIcon=\"mdi:script-text\"></mat-icon>\n          <span>{{ 'Documentation' | transloco }}</span>\n        </button>\n      </a>\n      <!-- <a class=\"omv-text-decoration-none\"\n         href=\"https://forum.openmediavault.org\">\n        <button mat-menu-item>\n          <mat-icon svgIcon=\"mdi:forum\"></mat-icon>\n          <span>{{ 'Forum' | transloco }}</span>\n        </button>\n      </a> -->\n      <a class=\"omv-text-decoration-none\"\n         href=\"https://nextzenos.com/\">\n        <button mat-menu-item>\n          <mat-icon svgIcon=\"mdi:web\"></mat-icon>\n          <span>{{ 'Homepage' | transloco }}</span>\n        </button>\n      </a>\n\n      <mat-divider></mat-divider>\n      <a class=\"omv-text-decoration-none\"\n      href=\"https://nextzenos.com/gioi-thieu\">\n     <button mat-menu-item>\n      <mat-icon svgIcon=\"{{ icon.information }}\"></mat-icon>\n       <span>{{ 'About' | transloco }}</span>\n     </button>\n   </a>\n      <!-- <button mat-menu-item\n              routerLink=\"/about\">\n        <mat-icon svgIcon=\"{{ icon.information }}\"></mat-icon>\n        <span>{{ 'About' | transloco }}</span>\n      </button> -->\n    </ng-template>\n  </mat-menu>\n</mat-toolbar>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  selector: 'omv-welcome-panel',\n  templateUrl: './welcome-panel.component.html',\n  styleUrls: ['./welcome-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WelcomePanelComponent {\n  constructor(private rpcService: RpcService) {}\n  onClosed(): void {\n    this.rpcService.request('WebGui', 'dismissWelcomeMessage',{}).subscribe();\n  }\n}\n","<omv-alert-panel type=\"info\"\n                 title=\"{{ 'Welcome to openmediavault' | transloco }}\"\n                 dismissible\n                 (closed)=\"onClosed()\">\n  This <a href=\"https://en.wikipedia.org/wiki/OpenMediaVault\">project</a> is developed by me, <a href=\"https://github.com/votdev\">Volker Theile</a>, with heart and soul and a lot of commitment since 2009 in the hope that it will be of use to you. If you like it I would be happy about a small donation to support me and the project.\n  <br><br>\n  <div class=\"omv-text-center\">\n    <form action=\"https://www.paypal.com/cgi-bin/webscr\"\n          method=\"post\"\n          target=\"_blank\">\n      <input type=\"hidden\"\n             name=\"cmd\"\n             value=\"_s-xclick\">\n      <input type=\"hidden\"\n             name=\"hosted_button_id\"\n             value=\"95MF5UQ66PW2E\">\n      <input class=\"omv-text-center\"\n             type=\"image\"\n             src=\"./assets/images/donate.gif\"\n             name=\"submit\"\n             alt=\"PayPal - The safer, easier way to pay online!\">\n    </form>\n  </div>\n  <br>\n  You can find more information about <strong>openmediavault</strong> here:\n  <ul>\n    <li><a href=\"https://www.openmediavault.org\">Homepage</a></li>\n    <li><a href=\"https://forum.openmediavault.org\">Forum</a></li>\n    <li><a href=\"https://docs.openmediavault.org\">Documentation</a></li>\n  </ul>\n  Additional plugins created by <strong>openmediavault</strong> enthusiasts can be found <a href=\"https://github.com/OpenMediaVault-Plugin-Developers\">here</a>.\n</omv-alert-panel>\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ComponentsModule } from '~/app/core/components/components.module';\nimport { PagesModule } from '~/app/core/pages/pages.module';\nimport { DashboardWidgetConfigService } from '~/app/core/services/dashboard-widget-config.service';\nimport { LogConfigService } from '~/app/core/services/log-config.service';\nimport { NavigationConfigService } from '~/app/core/services/navigation-config.service';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ComponentsModule, PagesModule],\n  exports: [ComponentsModule, PagesModule]\n})\nexport class CoreModule {\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        // These services must be singletons across the whole app.\n        DashboardWidgetConfigService,\n        LogConfigService,\n        NavigationConfigService,\n        RouteConfigService\n      ]\n    };\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'omv-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent {\n  constructor() {}\n}\n","<div class=\"omv-about-page\">\n  <mat-card class=\"omv-cursor-amiga13-select omv-cursor-amiga13-link\">\n    <div class=\"titlebar omv-display-flex omv-flex-row\">\n      <div class=\"title\">{{ 'About' | transloco }}</div>\n      <div class=\"mid omv-flex-grow-1\"></div>\n      <div class=\"mid-end\"></div>\n      <div class=\"position\"></div>\n    </div>\n    <mat-card-content>\n      <div class=\"logo omv-text-monospace omv-display-flex omv-flex-column\">\n        <pre class=\"ascii-art\">\n                                               .__.__                         .__   __\n  ____ ______   ____   ____   _____   ____   __| _|_______ ___  ______   __ __|  |_/  |_\n /  _ \\\\____ \\_/ __ \\ /    \\ /     \\_/ __ \\ / __ ||  \\__  \\\\  \\/ \\__  \\ |  |  |  |\\   __\\\n(  &lt;_&gt; |  |_&gt; \\  ___/|   |  |  Y Y  \\  ___// /_/ ||  |/ __ \\\\   / / __ \\|  |  |  |_|  |\n \\____/|   __/ \\___  |___|  |__|_|  /\\___  \\____ ||__(____  /\\_/ (____  |____/|____|__|\n       |__|        \\/     \\/      \\/     \\/     \\/        \\/          \\/\n        </pre>\n        <div class=\"side-scroller omv-display-flex omv-flex-row\">\n          <div class=\"text omv-flex-1\">\n            gREETINGS gO tO [Edith] ♦ [Räuberweg] ♦ [B69] ♦ [Chris] ♦ [lENNY dEE] ♦ [iCARUS] ♦ [lUCAS] ♦ [sHALLOW] ♦ [lUCKY] ♦ [gREMLIN] ♦ [bLACKY] ♦ [-jOE cOOL!] ♦ [tHALER] ♦ [nEUROdANCER] ♦ [iNTERCODE] ♦ [sUNSET] ♦ [E.F.A.] ♦ [sISKO] ♦ [bBC] ♦ [bILBO bAGGINS] ♦ ] jOKER [ ♦ [wENDIGO] ♦ [bRAINDEAD] ♦ [ryecoaaron] ♦ [Adoby] ♦ [Agricola] ♦ [crashtest] ♦ [geaves] ♦ [KM0201] ♦ [macom] ♦ [davidh2k] ♦ [donh] ♦ [jhmiller] ♦ [SerErris] ♦ [Solo0815] ♦ [Spy Alelo] ♦ [subzero79] ♦ [tekkb] ♦ [WastlJ] ... sORRY tO aLL i hAVE fORGOTTEN ...\n          </div>\n        </div>\n      </div>\n      &nbsp;\n      <div>\n        <a href=\"https://en.wikipedia.org/wiki/OpenMediaVault\">openmediavault</a> is Copyright © 2009-2024 by <a href=\"https://github.com/votdev\">Volker Theile</a> (volker.theile@openmediavault.org).\n      </div>\n      <div>\n        All rights reserved.\n      </div>\n      &nbsp;\n      <div>\n        openmediavault is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License v3 as published by the Free Software Foundation.\n      </div>\n      &nbsp;\n      <div>\n        openmediavault is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the <a href=\"http://www.gnu.org/licenses\">GNU General Public License</a> for more details.\n      </div>\n      &nbsp;\n      <div class=\"omv-text-center\">\n        <form action=\"https://www.paypal.com/cgi-bin/webscr\"\n              method=\"post\"\n              target=\"_blank\">\n          <input type=\"hidden\"\n                 name=\"cmd\"\n                 value=\"_s-xclick\">\n          <input type=\"hidden\"\n                 name=\"hosted_button_id\"\n                 value=\"95MF5UQ66PW2E\">\n          <input class=\"omv-text-center\"\n                 type=\"image\"\n                 src=\"./assets/images/donate.gif\"\n                 name=\"submit\"\n                 alt=\"PayPal - The safer, easier way to pay online!\">\n        </form>\n      </div>\n      &nbsp;\n      <div>\n        1> <span class=\"cursor omv-text-monospace\">█</span>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'omv-blank-page',\n  templateUrl: './blank-page.component.html',\n  styleUrls: ['./blank-page.component.scss']\n})\nexport class BlankPageComponent {\n  constructor() {}\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { DashboardWidgetConfigService } from '~/app/core/services/dashboard-widget-config.service';\n\n@Component({\n  selector: 'omv-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit {\n  public widgets: Array<DashboardWidgetConfig> = [];\n\n  public notConfiguredMessage: string = gettext(\n    \"The dashboard has not yet been configured. To personalize it, please go to the <a href='#/dashboard/settings'>settings page</a>.\"\n  );\n\n  constructor(private dashboardWidgetConfigService: DashboardWidgetConfigService) {}\n\n  ngOnInit(): void {\n    this.dashboardWidgetConfigService.configs$.subscribe(\n      (widgets: Array<DashboardWidgetConfig>) => {\n        const enabledWidgets: Array<string> = this.dashboardWidgetConfigService.getEnabled();\n        this.widgets = [];\n        _.forEach(enabledWidgets, (id) => {\n          const widget = _.find(widgets, ['id', id]);\n          if (!_.isUndefined(widget)) {\n            this.widgets.push(widget);\n          }\n        });\n      }\n    );\n  }\n}\n","<div class=\"omv-dashboard-page-container\">\n  <omv-alert-panel *ngIf=\"!widgets.length\"\n                   type=\"info\"\n                   [hasMargin]=\"false\">\n    <span [innerHTML]=\"notConfiguredMessage | transloco | sanitizeHtml\"></span>\n  </omv-alert-panel>\n  <div class=\"widgets-container\">\n    <div *ngFor=\"let widget of widgets\">\n      <ng-container [ngTemplateOutlet]=\"renderWidget\"\n                    [ngTemplateOutletContext]=\"{ $implicit: widget }\">\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #renderWidget\n             let-widget>\n  <ng-container [ngSwitch]=\"widget.type\">\n    <ng-template [ngSwitchCase]=\"'grid'\">\n      <omv-dashboard-widget-grid [config]=\"widget\">\n      </omv-dashboard-widget-grid>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'datatable'\">\n      <omv-dashboard-widget-datatable [config]=\"widget\">\n      </omv-dashboard-widget-datatable>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'rrd'\">\n      <omv-dashboard-widget-rrd [config]=\"widget\">\n      </omv-dashboard-widget-rrd>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'chart'\">\n      <omv-dashboard-widget-chart [config]=\"widget\">\n      </omv-dashboard-widget-chart>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'text'\">\n      <omv-dashboard-widget-text [config]=\"widget\">\n      </omv-dashboard-widget-text>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'value'\">\n      <omv-dashboard-widget-value [config]=\"widget\">\n      </omv-dashboard-widget-value>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'system-information'\">\n      <omv-dashboard-widget-system-information [config]=\"widget\">\n      </omv-dashboard-widget-system-information>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'filesystems-status'\">\n      <omv-dashboard-widget-filesystems-status [config]=\"widget\">\n      </omv-dashboard-widget-filesystems-status>\n    </ng-template>\n  </ng-container>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'lodash';\n\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\n\n@Component({\n  selector: 'omv-guru-meditation-page',\n  templateUrl: './guru-meditation-page.component.html',\n  styleUrls: ['./guru-meditation-page.component.scss']\n})\nexport class GuruMeditationPageComponent implements OnInit, OnDestroy {\n  // https://web.archive.org/web/20120628060356/http://www.scotek.demon.co.uk/guru.html\n  // https://www.amigalove.com/viewtopic.php?t=500\n  // https://github.com/deplinenoise/amiga-sdk/blob/master/sdkinclude/exec/alerts.i\n  message = 'Guru Meditation #31000000.48454C50';\n  url = '/';\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private blockUiService: BlockUiService,\n    private dialogService: DialogService,\n    private elementRef: ElementRef,\n    private router: Router\n  ) {\n    _.forEach(['message', 'url'], (queryParam: string) => {\n      _.forEach(['routeConfig.data', 'snapshot.queryParams'], (path: string) => {\n        if (_.hasIn(this.activatedRoute, `${path}.${queryParam}`)) {\n          _.set(this, queryParam, _.get(this.activatedRoute, `${path}.${queryParam}`));\n          return false; // Abort loop.\n        }\n        return true;\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.blockUiService.resetGlobal();\n    // Ensure all currently opened dialogs are closed.\n    this.dialogService.closeAll();\n    this.elementRef.nativeElement.addEventListener('click', this.onClick.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.elementRef.nativeElement.removeEventListener('click', this.onClick);\n  }\n\n  private onClick() {\n    this.router.navigate([this.url]);\n  }\n}\n","<div class=\"omv-guru-meditation-page omv-cursor-amiga20-select\">\n  <omv-guru-meditation>{{ message | transloco }}</omv-guru-meditation>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { finalize } from 'rxjs/operators';\n\nimport {\n  FormPageButtonConfig,\n  FormPageConfig\n} from '~/app/core/components/intuition/models/form-page-config.type';\nimport { translate } from '~/app/i18n.helper';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { AuthService } from '~/app/shared/services/auth.service';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { DialogService } from '~/app/shared/services/dialog.service';\nimport { LocaleService } from '~/app/shared/services/locale.service';\n\n@Component({\n  selector: 'omv-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoginPageComponent implements OnInit {\n  public currentLocale: string;\n  public locales: Record<string, string> = {};\n\n  public config: FormPageConfig = {\n    id: 'login',\n    fields: [\n      {\n        type: 'textInput',\n        name: 'username',\n        label: gettext('User name'),\n        autofocus: true,\n        autocomplete: 'username',\n        icon: Icon.user,\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'password',\n        label: gettext('Password'),\n        icon: Icon.password,\n        autocomplete: 'current-password',\n        validators: {\n          required: true\n        }\n      }\n    ],\n    buttonAlign: 'center',\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Log in'),\n        execute: {\n          type: 'click',\n          click: this.onLogin.bind(this)\n        }\n      }\n    ]\n  };\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    private blockUiService: BlockUiService,\n    private dialogService: DialogService,\n    private router: Router\n  ) {\n    this.currentLocale = LocaleService.getCurrentLocale();\n    this.locales = LocaleService.getSupportedLocales();\n  }\n\n  ngOnInit(): void {\n    this.blockUiService.resetGlobal();\n    // Ensure all currently opened dialogs are closed.\n    this.dialogService.closeAll();\n  }\n\n  onLogin(buttonConfig: FormPageButtonConfig, values: Record<string, any>) {\n    this.blockUiService.start(translate(gettext('Please wait ...')));\n    this.authService\n      .login(values.username, values.password)\n      .pipe(\n        finalize(() => {\n          this.blockUiService.stop();\n        })\n      )\n      .subscribe(() => {\n        const url = _.get(this.activatedRoute.snapshot.queryParams, 'returnUrl', '/dashboard');\n        this.router.navigate([url]);\n      });\n  }\n\n  onSelectLocale(locale) {\n    // Update the browser cookie and reload the page.\n    LocaleService.setCurrentLocale(locale);\n    this.router.navigate(['/reload']);\n  }\n}\n","<div class=\"omv-overflow-hidden omv-position-relative omv-display-flex omv-flex-fill\">\n  <div class=\"background omv-position-absolute omv-flex-fill\"></div>\n  <omv-green-rain class=\"omv-position-absolute omv-flex-fill\"\n                  delay=\"30000\"\n                  primaryColor=\"#5dacdf\"\n                  secondaryColor=\"#f8d400\">\n  </omv-green-rain>\n  <div class=\"omv-position-absolute omv-w-100\">\n    <mat-toolbar class=\"topbar omv-background-color-transparent omv-display-flex omv-justify-content-between\">\n      <button mat-icon-button></button>\n      <div class=\"logo\"></div>\n      <button mat-icon-button\n              matTooltip=\"{{ 'Language' | transloco }}\"\n              [matMenuTriggerFor]=\"localeMenu\">\n        <mat-icon svgIcon=\"mdi:earth\"\n                  class=\"omv-color-white\">\n        </mat-icon>\n      </button>\n    </mat-toolbar>\n  </div>\n  <div class=\"content omv-flex-fill\">\n    <omv-intuition-form-page class=\"omv-h-100 omv-display-flex omv-justify-content-center omv-align-items-center\"\n                             [config]=\"this.config\">\n    </omv-intuition-form-page>\n  </div>\n</div>\n\n<mat-menu #localeMenu=\"matMenu\">\n  <ng-template matMenuContent>\n    <button *ngFor=\"let locale of locales | keyvalue\"\n            mat-menu-item\n            [ngClass]=\"{'active': locale.key === currentLocale}\"\n            [disabled]=\"locale.key === currentLocale\"\n            (click)=\"onSelectLocale(locale.key)\">\n      <span>{{ locale.value }}</span>\n    </button>\n  </ng-template>\n</mat-menu>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\n\nimport {\n  NavigationConfigService,\n  NavigationMenuItem\n} from '~/app/core/services/navigation-config.service';\nimport { Icon } from '~/app/shared/enum/icon.enum';\n\n@Component({\n  selector: 'omv-navigation-page',\n  templateUrl: './navigation-page.component.html',\n  styleUrls: ['./navigation-page.component.scss']\n})\nexport class NavigationPageComponent implements OnInit {\n  public menuItems: NavigationMenuItem[] = [];\n\n  constructor(private router: Router, private navigationConfig: NavigationConfigService) {}\n\n  ngOnInit(): void {\n    this.navigationConfig\n      .getChildrenByUrl(this.router.url)\n      .subscribe((menuItems: NavigationMenuItem[]) => {\n        this.menuItems = menuItems;\n        this.sanitizeConfig();\n      });\n  }\n\n  onClick(item: NavigationMenuItem) {\n    if (item.url) {\n      this.router.navigate([item.url]);\n    }\n  }\n\n  protected sanitizeConfig() {\n    _.forEach(this.menuItems, (menuItem: NavigationMenuItem) => {\n      // Map icon from 'foo' to 'mdi:foo' if necessary.\n      menuItem.icon = _.get(Icon, menuItem.icon, menuItem.icon);\n    });\n  }\n}\n","<div class=\"omv-navigation-page omv-grid omv-gap-3\">\n  <mat-card *ngFor=\"let item of menuItems\"\n            class=\"omv-box-border omv-display-flex omv-flex-column omv-align-content-center omv-justify-content-center omv-align-items-center\"\n            mat-ripple\n            tabindex=\"0\"\n            (keyup.space)=\"onClick(item)\"\n            (keyup.enter)=\"onClick(item)\"\n            (click)=\"onClick(item)\">\n    <mat-icon *ngIf=\"item.icon\"\n              svgIcon=\"{{ item.icon }}\"></mat-icon>\n    <div class=\"omv-text-center omv-text-truncate omv-w-100\">\n      {{ item.text | transloco }}\n    </div>\n  </mat-card>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslocoModule } from '@ngneat/transloco';\n\nimport { ComponentsModule } from '~/app/core/components/components.module';\nimport { DashboardModule } from '~/app/core/components/dashboard/dashboard.module';\nimport { AboutPageComponent } from '~/app/core/pages/about-page/about-page.component';\nimport { BlankPageComponent } from '~/app/core/pages/blank-page/blank-page.component';\nimport { DashboardPageComponent } from '~/app/core/pages/dashboard-page/dashboard-page.component';\nimport { GuruMeditationPageComponent } from '~/app/core/pages/guru-meditation-page/guru-meditation-page.component';\nimport { LoginPageComponent } from '~/app/core/pages/login-page/login-page.component';\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { ShutdownPageComponent } from '~/app/core/pages/shutdown-page/shutdown-page.component';\nimport { StandbyPageComponent } from '~/app/core/pages/standby-page/standby-page.component';\nimport { MaterialModule } from '~/app/material.module';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    GuruMeditationPageComponent,\n    LoginPageComponent,\n    NavigationPageComponent,\n    ShutdownPageComponent,\n    StandbyPageComponent,\n    DashboardPageComponent,\n    AboutPageComponent,\n    BlankPageComponent\n  ],\n  exports: [\n    GuruMeditationPageComponent,\n    LoginPageComponent,\n    NavigationPageComponent,\n    ShutdownPageComponent,\n    StandbyPageComponent,\n    DashboardPageComponent,\n    AboutPageComponent,\n    BlankPageComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ComponentsModule,\n    MaterialModule,\n    RouterModule,\n    TranslocoModule,\n    DashboardModule\n  ]\n})\nexport class PagesModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'omv-shutdown',\n  templateUrl: './shutdown-page.component.html',\n  styleUrls: ['./shutdown-page.component.scss']\n})\nexport class ShutdownPageComponent {}\n","<div class=\"background omv-position-absolute omv-flex-fill\"></div>\n<mat-toolbar class=\"topbar omv-background-color-transparent omv-display-flex omv-justify-content-center\">\n  <div class=\"logo\"></div>\n</mat-toolbar>\n<mat-icon class=\"icon-background omv-position-absolute omv-color-red\"\n          svgIcon=\"mdi:circle\">\n</mat-icon>\n<mat-icon class=\"icon omv-position-absolute omv-color-white\"\n          svgIcon=\"mdi:power\">\n</mat-icon>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'omv-standby',\n  templateUrl: './standby-page.component.html',\n  styleUrls: ['./standby-page.component.scss']\n})\nexport class StandbyPageComponent {}\n","<div class=\"background omv-position-absolute omv-flex-fill\"></div>\n<mat-toolbar class=\"topbar omv-background-color-transparent omv-display-flex omv-justify-content-center\">\n  <div class=\"logo\"></div>\n</mat-toolbar>\n<mat-icon class=\"icon-background omv-position-absolute omv-color-red\"\n          svgIcon=\"mdi:circle\">\n</mat-icon>\n<mat-icon class=\"icon omv-position-absolute omv-color-white\"\n          svgIcon=\"mdi:pause\">\n</mat-icon>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { Permissions, Roles } from '~/app/shared/models/permissions.model';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { UserLocalStorageService } from '~/app/shared/services/user-local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardWidgetConfigService {\n  public readonly configs$: Observable<DashboardWidgetConfig[]>;\n\n  private configsSource = new BehaviorSubject<DashboardWidgetConfig[]>([]);\n\n  constructor(\n    private authSessionService: AuthSessionService,\n    private http: HttpClient,\n    private userLocalStorageService: UserLocalStorageService\n  ) {\n    this.configs$ = this.configsSource.asObservable();\n  }\n\n  /**\n   * Load the dashboard widget configuration. Widgets that require more\n   * permissions than the current user owns are automatically filtered out.\n   */\n  public load(): Observable<DashboardWidgetConfig[]> {\n    return this.http.get('./assets/dashboard-widget-config.json').pipe(\n      catchError((error) => {\n        error.preventDefault?.();\n        return of([]);\n      }),\n      map((widgets: Array<DashboardWidgetConfig>) => {\n        const result: Array<DashboardWidgetConfig> = [];\n        _.forEach(widgets, (widget: DashboardWidgetConfig) => {\n          // Sanitize the widget configuration.\n          widget.permissions = Permissions.fromObject(\n            widget.permissions ? widget.permissions : { role: _.values(Roles) }\n          );\n          // Append the widget if the privileges of the logged in user\n          // match those of the widget.\n          if (Permissions.validate(widget.permissions, this.authSessionService.getPermissions())) {\n            result.push(widget);\n          }\n        });\n        return result;\n      }),\n      tap((config: Array<DashboardWidgetConfig>) => {\n        this.configsSource.next(config);\n      })\n    );\n  }\n\n  /**\n   * Get the identifiers of all enabled widgets of the current user.\n   *\n   * @return Returns a list of widget identifiers (UUID).\n   */\n  public getEnabled(): Array<string> {\n    const value = this.userLocalStorageService.get('dashboard_widgets', '[]');\n    const result: Array<string> = JSON.parse(value);\n    return result;\n  }\n\n  /**\n   * Set the identifiers of all enabled widgets for the current user.\n   *\n   * @param ids The list of identifiers of the enabled widgets.\n   */\n  public setEnabled(ids: Array<string>) {\n    const value = JSON.stringify(ids);\n    this.userLocalStorageService.set('dashboard_widgets', value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { DatatableColumn } from '~/app/shared/models/datatable-column.type';\n\nexport type LogConfig = {\n  // A unique identifier.\n  id: string;\n  text: string;\n  request?: {\n    service?: string;\n    method?: string;\n    params?: Record<string, any>;\n  };\n  // The datatable columns.\n  columns: Array<DatatableColumn>;\n  // The datatable sorters.\n  sorters?: Array<{\n    dir: 'asc' | 'desc';\n    prop: string;\n  }>;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogConfigService {\n  public readonly configs$: Observable<LogConfig[]>;\n\n  private configsSource = new ReplaySubject<LogConfig[]>(1);\n\n  constructor(private http: HttpClient) {\n    this.configs$ = this.configsSource.asObservable();\n  }\n\n  public load(): Observable<LogConfig[]> {\n    return this.http.get('./assets/log-config.json').pipe(\n      catchError((error) => {\n        error.preventDefault?.();\n        return of([]);\n      }),\n      tap((logs: Array<LogConfig>) => {\n        this.configsSource.next(logs);\n      })\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nexport type MkfsConfig = {\n  text: string;\n  url: string;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MkfsConfigService {\n  public readonly configs$: Observable<MkfsConfig[]>;\n\n  private configsSource = new ReplaySubject<MkfsConfig[]>(1);\n\n  constructor(private http: HttpClient) {\n    this.configs$ = this.configsSource.asObservable();\n  }\n\n  public load(): Observable<MkfsConfig[]> {\n    return this.http.get('./assets/mkfs-config.json').pipe(\n      catchError((error) => {\n        error.preventDefault?.();\n        return of([]);\n      }),\n      tap((logs: Array<MkfsConfig>) => {\n        this.configsSource.next(logs);\n      })\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Permissions } from '~/app/shared/models/permissions.model';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\n\n// The structure of a menu item in the 'navigation-config.json' asset file.\ntype MenuItem = {\n  // The position of the menu item. This including the text is used\n  // to sort the order of the menu items.\n  position?: number;\n  // The path where to insert and show the menu item, e.g.\n  // 'system.certificate.ssl' or 'services.nfs.settings'.\n  // The following root paths exists:\n  // * diagnostics\n  // * network\n  // * services\n  // * storage\n  // * system\n  // * usermgmt\n  path: string;\n  // The menu item text. This is used for sorting the order of the\n  // menu items.\n  text: string;\n  // The icon to be displayed, e.g. the shorthand of an icon listed\n  // in 'icon.enums' like 'plus' or 'mdi:xxx' for an icon that is\n  // not listed there. See https://materialdesignicons.com/ for the\n  // names of the available icons.\n  icon?: string;\n  // The routing url used to access the page in the browser, e.g.\n  // '/services/ssh' or '/system/powermgmt/settings'.\n  url: string;\n  // The permissions if you only want to show the menu item to\n  // specific accounts.\n  permissions?: Permissions;\n  // Set to `true` to hide the menu.\n  hidden?: boolean;\n};\n\n// The internal navigation menu structure.\nexport type NavigationMenuItem = MenuItem & {\n  children?: NavigationMenuItem[];\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationConfigService {\n  public readonly configs$: Observable<NavigationMenuItem[]>;\n\n  private configsSource = new BehaviorSubject<NavigationMenuItem[]>([]);\n\n  constructor(private authSessionService: AuthSessionService, private http: HttpClient) {\n    this.configs$ = this.configsSource.asObservable().pipe(\n      map((configs: NavigationMenuItem[]) => {\n        const permissions: Permissions = this.authSessionService.getPermissions();\n        const filterFn = (items: NavigationMenuItem[]): NavigationMenuItem[] => {\n          const result = [];\n          items.forEach((item: NavigationMenuItem) => {\n            if (item.hidden === true) {\n              return;\n            }\n            if (_.has(item, 'permissions')) {\n              // Check if the current user has the permission to view this\n              // menu item.\n              if (!Permissions.validate(item.permissions, permissions)) {\n                return;\n              }\n            }\n            const newItem = _.clone(item);\n            if (_.has(item, 'children') && _.isArray(item.children)) {\n              newItem.children = filterFn(item.children);\n            }\n            result.push(newItem);\n          });\n          return result;\n        };\n        return filterFn(configs);\n      })\n    );\n  }\n\n  public load(): Observable<NavigationMenuItem[]> {\n    /**\n     * Load the navigation asset file and build the navigation configuration\n     * used by the `NavigationBarComponent` and `NavigationPageComponent` components.\n     */\n    return this.http.get('./assets/navigation-config.json').pipe(\n      catchError((error) => {\n        error.preventDefault?.();\n        return of([]);\n      }),\n      map((menuItemConfigs: Array<MenuItem>) => {\n        const pushMenuItem = (\n          collection: Array<NavigationMenuItem>,\n          menuItemConfig: MenuItem,\n          parentPath: string = undefined\n        ) => {\n          const pathParts = _.filter(\n            _.split(_.trim(menuItemConfig.path, '.').replace(parentPath, ''), '.'),\n            (value) => !_.isEmpty(value)\n          );\n          let currentPath = `${pathParts.shift()}`;\n          if (parentPath) {\n            currentPath = `${parentPath}.${currentPath}`;\n          }\n\n          let element = _.find(collection, ['path', currentPath]);\n          if (_.isUndefined(element)) {\n            // Create a temporary placeholder menu item. This should be\n            // configured correctly sometime while processing all navigation\n            // menus.\n            element = {\n              position: 0,\n              path: currentPath,\n              text: '???',\n              url: '/404'\n            };\n            collection.push(element);\n          }\n\n          if (pathParts.length) {\n            const children = _.get(element, 'children', []);\n            pushMenuItem(children, menuItemConfig, currentPath);\n            element.children = children;\n          } else {\n            element.position = menuItemConfig.position;\n            element.text = menuItemConfig.text;\n            element.url = menuItemConfig.url;\n            if (menuItemConfig.icon) {\n              element.icon = menuItemConfig.icon;\n            }\n            if (menuItemConfig.permissions) {\n              element.permissions = menuItemConfig.permissions;\n            }\n            element.hidden = _.defaultTo(menuItemConfig.hidden, false);\n          }\n\n          // Sort the menu items.\n          const sorted = _.sortBy(collection, ['position', 'text']);\n          collection.length = 0;\n          collection.push(...sorted);\n        };\n\n        const navMenuItems: Array<NavigationMenuItem> = [];\n        _.forEach(menuItemConfigs, (menuItemConfig: MenuItem) => {\n          pushMenuItem(navMenuItems, menuItemConfig);\n        });\n        return navMenuItems;\n      }),\n      tap((config: Array<NavigationMenuItem>) => {\n        this.configsSource.next(config);\n      })\n    );\n  }\n\n  public getChildrenByUrl(url): Observable<NavigationMenuItem[]> {\n    return this.configs$.pipe(\n      map((configs: NavigationMenuItem[]) => {\n        const filterFn = (items: NavigationMenuItem[]): NavigationMenuItem[] => {\n          const result = [];\n          items.forEach((item: NavigationMenuItem) => {\n            if (item.url === url && _.isArray(item.children) && !item.hidden) {\n              result.push(...item.children);\n            } else if (_.startsWith(url, `${item.url}/`) && _.isArray(item.children)) {\n              result.push(...filterFn(item.children));\n            }\n          });\n          return result;\n        };\n        if ('/' === url) {\n          return configs;\n        }\n        return filterFn(configs);\n      })\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Type } from '@angular/core';\nimport { Route, Routes } from '@angular/router';\nimport * as _ from 'lodash';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { DatatablePageComponent } from '~/app/core/components/intuition/datatable-page/datatable-page.component';\nimport { FormPageComponent } from '~/app/core/components/intuition/form-page/form-page.component';\nimport { RrdPageComponent } from '~/app/core/components/intuition/rrd-page/rrd-page.component';\nimport { SelectionListPageComponent } from '~/app/core/components/intuition/selection-list-page/selection-list-page.component';\nimport { TabsPageComponent } from '~/app/core/components/intuition/tabs-page/tabs-page.component';\nimport { TextPageComponent } from '~/app/core/components/intuition/text-page/text-page.component';\nimport { BlankPageComponent } from '~/app/core/pages/blank-page/blank-page.component';\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { IsDirtyGuardService } from '~/app/shared/services/is-dirty-guard.service';\n\nconst componentMap: Record<string, Type<any>> = {\n  blankPage: BlankPageComponent,\n  navigationPage: NavigationPageComponent,\n  formPage: FormPageComponent,\n  selectionListPage: SelectionListPageComponent,\n  textPage: TextPageComponent,\n  tabsPage: TabsPageComponent,\n  datatablePage: DatatablePageComponent,\n  rrdPage: RrdPageComponent\n};\n\ntype RouteConfig = {\n  url: string;\n  title?: string;\n  breadcrumb?: {\n    text: string;\n    request?: {\n      service: string;\n      method: string;\n      params?: Record<string, any>;\n    };\n  };\n  editing?: boolean;\n  notificationTitle?: string;\n  component: {\n    type:\n      | 'blankPage'\n      | 'navigationPage'\n      | 'formPage'\n      | 'selectionListPage'\n      | 'textPage'\n      | 'tabsPage'\n      | 'datatablePage'\n      | 'rrdPage';\n    config: Record<string, any>;\n  };\n};\n\nconst getSegments = (path: string): Array<string> => {\n  return _.split(_.trim(path, '/'), '/');\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteConfigService {\n  public readonly configs$: Observable<Routes>;\n\n  private configsSource = new ReplaySubject<Routes>(1);\n\n  constructor(private http: HttpClient) {\n    this.configs$ = this.configsSource.asObservable();\n  }\n\n  public load(): Observable<Routes> {\n    return this.http.get('./assets/route-config.json').pipe(\n      catchError((error) => {\n        error.preventDefault?.();\n        return of([]);\n      }),\n      map((configs: Array<RouteConfig>) => {\n        const routes: Routes = [];\n        // Convert the loaded route configuration into Angular\n        // 'Route' objects.\n        _.forEach(configs, (config) => {\n          const route: Route = {\n            path: config.url,\n            component: componentMap[config.component.type],\n            data: {\n              title: config.title,\n              breadcrumb: config.breadcrumb,\n              editing: config.editing,\n              notificationTitle: config.notificationTitle,\n              config: config.component.config\n            }\n          };\n          switch (config.component.type) {\n            case 'formPage':\n            case 'selectionListPage':\n              _.merge(route, {\n                canDeactivate: [IsDirtyGuardService]\n              });\n              break;\n          }\n          routes.push(route);\n        });\n        this.configsSource.next(routes);\n        return routes;\n      })\n    );\n  }\n\n  /**\n   * @param rootSegment The name of the root segment, this can be 'diagnostics',\n   *   'network', 'services', 'storage', 'system' or 'usermgmt'.\n   * @param targetNode The root node where to add the custom routes.\n   */\n  public inject(rootSegment: string, targetNode: Routes): void {\n    this.configs$.subscribe((customRoutes) => {\n      // Get the custom routes to inject at the given node. Sort the\n      // filtered routes by the number of segments, thus new child\n      // nodes are created in the correct order.\n      const filteredRoutes: Routes = _.sortBy(\n        _.filter(customRoutes, (customRoute: Route) => {\n          const segments = getSegments(customRoute.path);\n          return segments[0] === rootSegment;\n        }),\n        (customRoute: Route) => {\n          const segments = getSegments(customRoute.path);\n          return segments;\n        }\n      );\n      _.forEach(filteredRoutes, (filteredRoute: Route) => {\n        // eslint-disable-next-line no-shadow\n        const getParentNode = (routes: Routes, segments: Array<string>): Routes => {\n          if (!segments.length) {\n            return routes;\n          }\n          const segment: string = segments.shift();\n          let node = _.find(routes, (route: Route) => route.path === segment);\n          if (_.isUndefined(node)) {\n            // Create the missing node. Use the URL segment name as\n            // default title.\n            node = {\n              path: segment,\n              data: {\n                title: _.upperFirst(segment)\n              },\n              children: []\n            };\n            routes.push(node);\n          }\n          if (_.isArray(node.children) && segments.length) {\n            return getParentNode(node.children, segments);\n          }\n          if (!node.children) {\n            // If we are here then the requested path does not exist\n            // right now and the node is a leaf.\n            node.children = [];\n            // If there is a configured component, then we need to\n            // rebuild the route configuration.\n            // If no component exists, then append the 'NavigationPageComponent'\n            // by default.\n            if (node.component) {\n              node.children.push({\n                path: '',\n                component: node.component,\n                data: _.pick(node.data, ['config']),\n                canDeactivate: node.canDeactivate\n              });\n              node.data = _.pick(node.data, ['title']);\n              delete node.component;\n            } else {\n              node.children.push({\n                path: '',\n                component: NavigationPageComponent\n              });\n            }\n          }\n          return node.children;\n        };\n\n        // Process the path.\n        const routeSegments: Array<string> = getSegments(filteredRoute.path);\n        // Remove the first segment.\n        routeSegments.shift();\n        // Remove the last segment.\n        let childPath: string = routeSegments.pop();\n        if (_.startsWith(childPath, ':')) {\n          // Process paths like 'edit/:name'.\n          childPath = [routeSegments.pop(), childPath].join('/');\n        }\n\n        const parentNode = getParentNode(targetNode, routeSegments);\n        if (!_.isUndefined(parentNode)) {\n          const childNode = _.find(parentNode, ['path', childPath]);\n          if (childNode) {\n            childNode.data = { title: filteredRoute.data.title };\n            childNode.children.push(\n              _.merge(\n                { path: '', data: { config: filteredRoute.data.config } },\n                _.omit(filteredRoute, 'data', 'path')\n              )\n            );\n          } else {\n            parentNode.push(_.merge({ path: childPath }, _.omit(filteredRoute, 'path')));\n          }\n        }\n      });\n    });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as _ from 'lodash';\n\n/**\n * A property decorator to automatically unsubscribe subscriptions.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention,prefer-arrow/prefer-arrow-functions\nexport function Unsubscribe() {\n  return (target: any, propertyKey: string) => {\n    const originalFn = target.ngOnDestroy;\n    // eslint-disable-next-line prefer-arrow/prefer-arrow-functions\n    target.ngOnDestroy = function () {\n      const property = this[propertyKey];\n      property?.unsubscribe?.();\n      originalFn?.apply?.(this, arguments);\n    };\n  };\n}\n\n/**\n * A method decorator that creates a debounced function that delays\n * invoking func until after wait milliseconds have elapsed since the\n * last time the debounced function was invoked.\n *\n * @param wait The number of milliseconds to delay.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention,prefer-arrow/prefer-arrow-functions\nexport function Debounce(wait: number) {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalFn = descriptor.value;\n    descriptor.value = _.debounce(originalFn, wait);\n    return descriptor;\n  };\n}\n\n/**\n * A method decorator that creates a throttled function that only\n * invokes func at most once per every wait milliseconds.\n *\n * @param wait The number of milliseconds to throttle invocations to.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention,prefer-arrow/prefer-arrow-functions\nexport function Throttle(wait: number) {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalFn = descriptor.value;\n    descriptor.value = _.throttle(originalFn, wait);\n    return descriptor;\n  };\n}\n\n/**\n * A property decorator to coercing a data-bound value (typically\n * a string) to a boolean.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention,prefer-arrow/prefer-arrow-functions\nexport function CoerceBoolean() {\n  return (target: any, propertyKey: string): any => {\n    const _propertyKey = Symbol(propertyKey);\n    target[_propertyKey] = target[propertyKey];\n    Object.defineProperty(target, _propertyKey, {\n      configurable: true,\n      writable: true\n    });\n    return {\n      get() {\n        return this[_propertyKey];\n      },\n      set(value: any) {\n        this[_propertyKey] = coerceBooleanProperty(value);\n      }\n    };\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport 'cronstrue/locales/de';\nimport 'cronstrue/locales/ru';\nimport 'cronstrue/locales/nl';\nimport 'cronstrue/locales/it';\nimport 'cronstrue/locales/tr';\nimport 'cronstrue/locales/fr';\nimport 'cronstrue/locales/pl';\nimport 'cronstrue/locales/cs';\nimport 'cronstrue/locales/es';\nimport 'cronstrue/locales/ca';\nimport 'cronstrue/locales/hu';\nimport 'cronstrue/locales/da';\nimport 'cronstrue/locales/uk';\nimport 'cronstrue/locales/sv';\nimport 'cronstrue/locales/pt_PT';\nimport 'cronstrue/locales/sl';\nimport 'cronstrue/locales/zh_CN';\nimport 'cronstrue/locales/zh_TW';\nimport 'cronstrue/locales/ja';\nimport 'cronstrue/locales/ko';\nimport 'cronstrue/locales/ar';\n\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport cronstrue from 'cronstrue';\nimport dayjs from 'dayjs';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport * as _ from 'lodash';\nimport * as nunjucks from 'nunjucks';\nimport validator from 'validator';\n\nimport { getCurrentLocale, translate } from '~/app/i18n.helper';\n\n//////////////////////////////////////////////////////////////////////////\n// Initialize additional dayjs plugins.\ndayjs.extend(advancedFormat);\ndayjs.extend(relativeTime);\n\n//////////////////////////////////////////////////////////////////////////\n// Create Nunjucks environment.\nconst nunjucksEnv = new nunjucks.Environment();\n\n/**\n * Convert a value to a boolean.\n *\n * @param value The value to convert.\n * @return Returns `true` if the value represents true,\n *   otherwise `false`.\n */\nexport const toBoolean = (value: any): boolean => {\n  let result = false;\n  switch (value) {\n    case true:\n    case 1:\n    case 'y':\n    case 'Y':\n    case 'yes':\n    case 'Yes':\n    case 'YES':\n    case 't':\n    case 'true':\n    case 'True':\n    case 'TRUE':\n    case 'on':\n    case 'On':\n    case 'ON':\n    case 'ok':\n    case 'Ok':\n    case 'OK':\n    case '1':\n      result = true;\n      break;\n  }\n  return result;\n};\n\n/**\n * Convert a boolean value to string.\n *\n * @param value The boolean value to convert.\n * @return Returns `Yes` if the value represents true,\n *   otherwise `No`.\n */\nexport const yesNo = (value: any): string => (toBoolean(value) ? gettext('Yes') : gettext('No'));\n\n/**\n * Render a Nunjucks/Jinja2 template.\n *\n * @param str The template to render.\n * @param data The object containing the data to replace\n *   the tokens.\n * @return Returns the rendered template.\n */\nexport const renderTemplate = (str: string, data: Record<any, any>): string => {\n  const template = nunjucks.compile(str, nunjucksEnv);\n  return template.render(data);\n};\n\n/**\n * Checks if value is can be formatted.\n *\n * @param value The value to check.\n * @return Returns `true` if value can be formatted, otherwise `false`.\n */\nexport const isFormatable = (value: any): boolean =>\n  _.isString(value) || _.isPlainObject(value) || _.isArray(value);\n\n/**\n * Allows you to define a tokenized string and pass an object\n * to replace the tokens.\n *\n * Note, output with dangerous characters is escaped automatically.\n * Use the `safe` filter to bypass this behaviour.\n *\n * @param str The string to format.\n *   Examples:\n *     '/storage/disks/edit/{{ hdparm.uuid }}'\n *     'Hello, my name is {{ name }}.'\n *     'Current count is: {{ count }}'\n *     '{{ qux[1] }}'\n * @param data The object containing the data to replace\n *   the tokens.\n *   Example:\n *     { hdparm: { uuid: 'xxx}, name: 'Hugo', count: 2, qux: ['a', 'b'] }\n * @return Returns the formatted string.\n */\nexport const format = (str: string, data: Record<any, any>): string => renderTemplate(str, data);\n\n/**\n * Format all tokenized string values recursively in the given\n * object.\n *\n * Note, output with dangerous characters is escaped automatically.\n * Use the `safe` filter to bypass this behaviour.\n *\n * @param value The object to format.\n * @param data The object containing the data to replace.\n * @return Returns a deep copy of the given object with the\n *   modified string values.\n */\nexport const formatDeep = (value: any, data: Record<any, any>): Record<any, any> => {\n  const fn = (m) => {\n    if (_.isPlainObject(m) || _.isArray(m)) {\n      _.forEach(m, (v, k) => {\n        m[k] = fn(v);\n      });\n    } else if (_.isString(m)) {\n      m = format(m, data);\n    }\n    return m;\n  };\n  return fn(_.cloneDeep(value));\n};\n\n/**\n * Allows you to define a tokenized URI and pass an object\n * to replace the tokens. The URI parameters will be encoded.\n *\n * Note, output with dangerous characters is escaped automatically.\n * Use the `safe` filter to bypass this behaviour.\n *\n * @param uri The URI to format.\n * @param params The object containing the parameters to replace\n *   the tokens.\n * @return Returns the formatted URI.\n */\nexport const formatURI = (uri: string, params: Record<any, any>): string =>\n  format(uri, encodeURIComponentDeep(params));\n\n/**\n * Encode all string values recursively in the given object.\n *\n * @param o The object to be processed.\n * @return Returns a deep copy of the given object with the\n *   modified encoded values.\n */\nexport const encodeURIComponentDeep = (o: Record<any, any> | undefined): Record<any, any> => {\n  const fn = (m) => {\n    if (_.isPlainObject(m) || _.isArray(m)) {\n      _.forEach(m, (v, k) => {\n        m[k] = fn(v);\n      });\n    } else if (_.isString(m)) {\n      m = encodeURIComponent(m);\n    }\n    return m;\n  };\n  return fn(_.cloneDeep(o));\n};\n\n/**\n * Decode all string values recursively in the given object.\n *\n * @param o The object to be processed.\n * @return Returns a deep copy of the given object with the\n *   modified decoded values.\n */\nexport const decodeURIComponentDeep = (o: Record<any, any> | undefined): Record<any, any> => {\n  const fn = (m) => {\n    if (_.isPlainObject(m) || _.isArray(m)) {\n      _.forEach(m, (v, k) => {\n        m[k] = fn(v);\n      });\n    } else if (_.isString(m)) {\n      m = decodeURIComponent(m);\n    }\n    return m;\n  };\n  return fn(_.cloneDeep(o));\n};\n\n/**\n * Check whether a variable is an UUIDv4.\n *\n * @deprecated\n * @param value The variable being evaluated.\n * @return `true` if the variable is an UUIDv4, otherwise `false`.\n */\nexport const isUUIDv4 = (value: any): boolean => isUUID(value);\n\n/**\n * Check whether a variable is a UUID.\n *\n * @param value The variable being evaluated.\n * @param version The UUID version.\n * @return `true` if the variable is a UUID, otherwise `false`.\n */\nexport const isUUID = (value: any, version?: validator.UUIDVersion): boolean => {\n  if (!_.isString(value) || _.isEmpty(value)) {\n    return false;\n  }\n  return validator.isUUID(value, version);\n};\n\n/**\n * Check whether a variable is an UUIDv4 that represents a new database\n * configuration object.\n *\n * @param value The variable being evaluated.\n * @return Returns `true` if the UUIDv4 represents the identifier of a\n *   new database configuration object, otherwise `false`.\n */\nexport const isNewConfObjUuid = (value: any): boolean => {\n  if (!isUUID(value)) {\n    return false;\n  }\n  return value === format('{{ newconfobjuuid }}', {});\n};\n\n/**\n * Convert a binary value into bytes.\n *\n * @param value The value to be converted, e.g. 512, 2048B or 2.50 MiB.\n * @returns Returns the given value as number in bytes without any unit\n *   appended or an empty string in case of an error.\n */\nexport const toBytes = (value: string | number): number | string => {\n  const base = 1024;\n  const units = ['b', 'k', 'm', 'g', 't', 'p', 'e', 'z', 'y'];\n  const matches = RegExp('^(\\\\d+(.\\\\d+)?)\\\\s?([' + units.join('') + ']?(b|ib|B/s)?)?$', 'i').exec(\n    String(value)\n  );\n  if (_.isNull(matches)) {\n    return '';\n  }\n  let bytes = parseFloat(matches[1]);\n  if (_.isString(matches[3])) {\n    bytes = bytes * Math.pow(base, units.indexOf(matches[3].toLowerCase()[0]));\n  }\n  return Math.round(bytes);\n};\n\n/**\n * Convert a number of bytes into the highest possible binary unit.\n * Example: 2097152 will become 2.00 MiB\n *\n * @param value The number of bytes to be converted.\n * @param fractionDigits The number of digits after the decimal point.\n *   Defaults to 2.\n * @param maxUnit The max. unit to be used, e.g. 'KiB' or 'MiB'.\n * @return The converted value, e.g. '2.50 MiB'. Negative values will\n *   return an empty string. A value of 0 will return a '0' string\n *   without a unit.\n */\nexport const binaryUnit = (\n  value: string | number,\n  fractionDigits?: number,\n  maxUnit?: string\n): string => {\n  const prefixes = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let curExp = 0;\n  let maxExp = prefixes.length;\n  let numberValue = value;\n\n  if (_.isString(numberValue)) {\n    // Convert to number, empty strings will become NaN.\n    numberValue = _.parseInt(numberValue);\n  }\n\n  if (!_.isFinite(numberValue)) {\n    return String(value);\n  }\n\n  // Negative values do not make sense.\n  if (numberValue < 0) {\n    return '';\n  }\n\n  fractionDigits = _.isNumber(fractionDigits) ? fractionDigits : 2;\n  if (_.isString(maxUnit) && !_.isEmpty(maxUnit)) {\n    maxExp = prefixes.indexOf(maxUnit);\n  }\n\n  while (numberValue > 1024 && curExp < maxExp) {\n    curExp++;\n    numberValue = numberValue / 1024;\n  }\n\n  return `${numberValue.toFixed(fractionDigits)} ${prefixes[curExp]}`;\n};\n\n/**\n * Return the default value if the input value is undefined, null,\n * NaN or empty.\n *\n * @param value The value to process.\n * @param defaultValue The default value, defaults to 'n/a'.\n * @return The input value or the given default value if the specified\n *   conditions do not match.\n */\nexport const notAvailable = (value, defaultValue?: any) =>\n  _.isUndefined(value) || _.isNull(value) || _.isNaN(value) || value === ''\n    ? _.defaultTo(defaultValue, translate(gettext('n/a')))\n    : value;\n\n/**\n * Get the Unix time stamp from the given time in milliseconds.\n *\n * @param ms The time in milliseconds. Defaults to `Date.now()`.\n * @return Returns the Unix time stamp (in seconds) from the given time.\n */\nexport const unixTimeStamp = (ms: number = Date.now()): number => Math.floor(ms / 1000);\n\n/**\n * Convert the specified date/time appropriate to the host environment's\n * current locale or into relative time like '2 hours ago'.\n *\n * @param value The date/time value. If it is a number, a UNIX epoch\n *   timestamp is assumed.\n * @param dateFormat The format to use, e.g. 'date', 'time', 'datetime'\n *   or 'relative'. Defaults to 'date'.\n * @params options Additional options.\n * @return The time in the given format or an empty string on failure.\n */\nexport const toLocaleDate = (\n  value: Date | string | number,\n  dateFormat?: 'relative' | 'datetime' | 'time' | 'date',\n  options?: any\n): any => {\n  if (!(_.isString(value) || _.isDate(value) || _.isNumber(value))) {\n    return '';\n  }\n  let date: dayjs.Dayjs;\n  if (_.isNumber(value)) {\n    date = dayjs.unix(value);\n  } else {\n    date = dayjs(value);\n  }\n  if (!date.isValid()) {\n    return '';\n  }\n  let result;\n  switch (dateFormat) {\n    case 'relative':\n      result = date.fromNow(options);\n      break;\n    default:\n      result = dateToLocale(date.toDate(), dateFormat);\n      break;\n  }\n  return result;\n};\n\n/**\n * Helper function to convert a `Date` object to the given format.\n * The method is outsourced mainly for mocking issues in unit tests.\n */\nexport const dateToLocale = (date: Date, dateFormat?: 'datetime' | 'time' | 'date'): string => {\n  let result;\n  switch (dateFormat) {\n    case 'datetime':\n      result = date.toLocaleString();\n      break;\n    case 'time':\n      result = date.toLocaleTimeString();\n      break;\n    default:\n    case 'date':\n      result = date.toLocaleDateString();\n      break;\n  }\n  return result;\n};\n\n/**\n * Convert a Cron expression into a human-readable description.\n *\n * @param value The Cron expression, e.g. `5 13 * * 5`.\n * @return The Cron expression as human-readable description.\n */\nexport const cron2human = (value: string): string => {\n  // These are the locales that are supported by the upstream cRonstrue\n  // project. Map the internal locale short codes to the codes that are\n  // used by the library.\n  const localeMap = {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    ar_SA: 'ar', // Arabic\n    ca_ES: 'ca', // Catalan\n    cs_CZ: 'cs', // Czech\n    da_DA: 'da', // Danish\n    de_DE: 'de', // German\n    es_ES: 'es', // Spanish\n    fr_FR: 'fr', // French\n    hu_HU: 'hu', // Hungarian\n    it_IT: 'it', // Italian\n    ja_JP: 'ja', // Japanese (Japan)\n    ko_KR: 'ko', // Korean\n    nl_NL: 'nl', // Dutch\n    pl_PL: 'pl', // Polish\n    pt_PT: 'pt_PT', // Portuguese\n    ru_RU: 'ru', // Russian\n    sl_SI: 'sl', // Slovenian\n    sv_SV: 'sv', // Swedish\n    tr_TR: 'tr', // Turkish\n    uk_UK: 'uk', // Ukrainian\n    zh_CN: 'zh_CN', // Chinese (Simplified Chinese)\n    zh_TW: 'zh_TW' // Chinese (Taiwan)\n    /* eslint-enable @typescript-eslint/naming-convention */\n  };\n  return cronstrue.toString(value, {\n    locale: _.get(localeMap, getCurrentLocale(), 'en')\n  });\n};\n\n//////////////////////////////////////////////////////////////////////////\n// Add custom Nunjucks filter.\n/**\n * Format the current time using the given format.\n */\nnunjucksEnv.addGlobal('moment', (fmt: string = 'HH:mm:ss') => dayjs().format(fmt));\nnunjucksEnv.addGlobal('location', () => location);\n/**\n * This is the UUID that is used to inform the backend that the database\n * configuration object currently processed needs to become a new unique\n * identifier when it is committed into the database. This is a stupid\n * behaviour from the early beginning of OMV.\n */\nnunjucksEnv.addGlobal('newconfobjuuid', 'fa4b1c66-ef79-11e5-87a0-0002b3a176b4');\n/**\n * Translate the given string.\n */\nnunjucksEnv.addFilter('translate', translate);\nnunjucksEnv.addFilter('binaryunit', binaryUnit);\nnunjucksEnv.addFilter('tobytes', toBytes);\n/**\n * Formats a number using fixed-point notation. If the given value is not a number,\n * then `NaN` is returned.\n */\nnunjucksEnv.addFilter('tofixed', (value: number, fractionDigits: number = 0) =>\n  _.isNumber(value) ? value.toFixed(fractionDigits) : NaN\n);\nnunjucksEnv.addFilter('min', (value: number, minValue: number) => Math.min(value, minValue));\nnunjucksEnv.addFilter('max', (value: number, maxValue: number) => Math.max(value, maxValue));\nnunjucksEnv.addFilter('notavailable', notAvailable);\n/**\n * Convert an object to a boolean.\n */\nnunjucksEnv.addFilter('toboolean', toBoolean);\nnunjucksEnv.addFilter('not', (value: any) => !value);\nnunjucksEnv.addFilter('yesno', yesNo);\nnunjucksEnv.addFilter('strip', (str: string, chars?: string) => _.trim(str, chars));\nnunjucksEnv.addFilter('lstrip', (str: string, chars?: string) => _.trimStart(str, chars));\nnunjucksEnv.addFilter('rstrip', (str: string, chars?: string) => _.trimEnd(str, chars));\nnunjucksEnv.addFilter('get', (data: any, path: number, defaultValue?: any) =>\n  _.get(data, path, defaultValue)\n);\nnunjucksEnv.addFilter('repeat', (str: string, n: number = 1) => _.repeat(str, n));\nnunjucksEnv.addFilter('split', (str: string, separator?: string, limit?: number) =>\n  str.split(separator, limit)\n);\nnunjucksEnv.addFilter('substr', (str: string, from: number, length?: number) =>\n  str.substr(from, length)\n);\nnunjucksEnv.addFilter('basename', (str: string) => {\n  const parts = str.split('/');\n  return _.last(parts);\n});\nnunjucksEnv.addFilter('keys', (value: Record<string, any>) => _.keys(value));\nnunjucksEnv.addFilter('array', (value: any) => (!_.isArray(value) ? [value] : value));\nnunjucksEnv.addFilter('includes', (collection: Array<any>, value: any) =>\n  _.includes(collection, value)\n);\nnunjucksEnv.addFilter('isequal', (value: any, other: any) => _.isEqual(value, other));\nnunjucksEnv.addFilter('union', (value: Array<any>, other: Array<any>) => _.union(value, other));\nnunjucksEnv.addFilter('uniq', (value: Array<any>) => _.uniq(value));\nnunjucksEnv.addFilter('map', (value: Array<any>, filter: string, ...filterArgs: any) => {\n  const filterFn = nunjucksEnv.getFilter(filter);\n  return _.map(value, (part) => filterFn.apply(this, [part, ...filterArgs]));\n});\n/**\n * Creates an array of own enumerable string keyed-value pairs.\n */\nnunjucksEnv.addFilter('entries', (value: Record<string, any>) => {\n  const x = _.entries(value);\n  return x;\n});\n/**\n * Creates an array with all falsey values removed. The values false, null,\n * 0, \"\", undefined, and NaN are falsey.\n */\nnunjucksEnv.addFilter('compact', (value: Array<any>) => _.compact(value));\n/**\n * Encodes a text string as a valid component of a Uniform Resource\n * Identifier (URI).\n */\nnunjucksEnv.addFilter('encodeuricomponent', (value: string | number | boolean): string =>\n  encodeURIComponent(value)\n);\n/**\n * Convert the value to the host environment's current locale or\n * into relative time.\n */\nnunjucksEnv.addFilter('localedate', toLocaleDate);\n/**\n * Convert a Cron expression into a human-readable description.\n */\nnunjucksEnv.addFilter('cron2human', cron2human);\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { TranslocoService } from '@ngneat/transloco';\nimport * as _ from 'lodash';\n\nlet translocoService: TranslocoService;\n\n/**\n * The list of supported locales.\n */\nexport enum SupportedLocales {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  'ar_SA' = 'العربية', // Arabic\n  'bg_BG' = '​Български', // Bulgarian\n  'ca_ES' = 'Catalán', // Catalan\n  'cs_CZ' = 'Čeština', // Czech\n  'da_DA' = 'Dansk', // Danish\n  'de_DE' = 'Deutsch', // German\n  'el_GR' = 'ελληνικά', // Greek\n  'en_GB' = 'English', // English\n  'es_ES' = 'Español', // Spanish\n  'fr_FR' = 'Français', // French\n  'gl_ES' = 'Galego', // Galician\n  'hu_HU' = 'Magyar', // Hungarian\n  'it_IT' = 'Italiano', // Italian\n  'ja_JP' = '日本語', // Japanese (Japan)\n  'ko_KR' = '한국어', // Korean\n  'nl_NL' = 'Nederlands', // Dutch\n  'no_NO' = 'Norsk', // Norwegian\n  'pl_PL' = 'Polski', // Polish\n  'pt_PT' = 'Português', // Portuguese\n  'ru_RU' = 'Русский', // Russian\n  'sl_SI' = 'Slovenski', // Slovenian\n  'sv_SV' = 'Svenska', // Swedish\n  'tr_TR' = 'Türkçe', // Turkish\n  'uk_UK' = 'Українська', // Ukrainian\n  'zh_CN' = '简体中文', // Chinese (Simplified Chinese)\n  'zh_TW' = '繁體中文', // Chinese (Taiwan)\n  'vi_VN' = 'Việt Nam'\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\n/**\n * Get the browser locale. Defaults to `en_GB` if no locale is detected.\n *\n * @return The browser locale, e.g. `en_GB` or `de_DE`.\n */\nconst getBrowserLocale = (): string => {\n  let result: string;\n  if (_.isArray(navigator.languages)) {\n    result = _.chain<string>(navigator.languages)\n      .filter((l: string) => l.includes('-'))\n      .map((l: string) => l.replace('-', '_'))\n      .filter((l: string) => _.has(SupportedLocales, l))\n      .first()\n      .value();\n  }\n  return _.defaultTo(result, 'en_GB');\n};\n\n/**\n * Get the current locale. Try to get the setting from the local\n * storage of the browser, otherwise try to get it from the users\n * preferred languages in the browser.\n */\nexport const getCurrentLocale = (): string => {\n  return localStorage.getItem('locale') || getBrowserLocale();\n};\n\n/**\n * Set the current locale. The setting will be stored in local storage\n * of the browser.\n */\nexport const setCurrentLocale = (locale: string): void => {\n  localStorage.setItem('locale', locale);\n};\n\n/**\n * Set translation service globally for the `translate` helper function.\n *\n * @param service The translation service instance.\n */\nexport const setTranslationService = (service: TranslocoService) => {\n  translocoService = service;\n};\n\n/**\n * Returns a translation instantly.\n *\n * @param key The string to be translated.\n * @return The translated string or if translation service is not\n *   available the untranslated string.\n */\nexport const translate = (key: string): string =>\n  _.isUndefined(translocoService) ? key : translocoService.translate(key);\n","import { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { DateAdapter, MatRippleModule } from '@angular/material/core';\nimport { MatNativeDateModule, NativeDateAdapter } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTabsModule,\n    DragDropModule,\n    OverlayModule,\n    ClipboardModule\n  ],\n  providers: [\n    { provide: DateAdapter, useClass: NativeDateAdapter },\n    // https://joshuawinn.com/ux-input-placeholders-are-not-labels/\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { floatLabel: 'always' } }\n  ]\n})\nexport class MaterialModule {\n  constructor(\n    dateAdapter: DateAdapter<any>,\n    matIconRegistry: MatIconRegistry,\n    domSanitizer: DomSanitizer\n  ) {\n    matIconRegistry.addSvgIconSetInNamespace(\n      'mdi',\n      domSanitizer.bypassSecurityTrustResourceUrl('./assets/mdi.svg')\n    );\n    dateAdapter.setLocale(navigator.language);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport * as _ from 'lodash';\nimport { iif, interval, Observable, range, throwError, zip } from 'rxjs';\nimport { filter, mergeMap, retryWhen, take } from 'rxjs/operators';\n\n/**\n * Returns an Observable that mirrors the source Observable with the\n * exception of an error. If the source Observable calls error, this\n * method will resubscribe to the source Observable for a maximum of\n * count resubscriptions (given as a number parameter) rather than\n * propagating the error call.\n *\n * @param count Number of retry attempts before failing. Defaults to 0.\n * @param period The delay duration in milliseconds until which the\n *   emission of the source item is delayed. With every iteration\n *   of `count` the delay will be increased by N * delay.\n *   Defaults to 1000 milliseconds.\n */\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\nexport function retryDelayed<T>(count?: number, period: number = 1000) {\n  count = _.defaultTo(count, 0);\n  return (source: Observable<T>): Observable<T> =>\n    source.pipe(\n      retryWhen((errors: Observable<any>) =>\n        zip(range(1, count + 1), errors).pipe(\n          mergeMap(([i, error]) =>\n            iif(\n              () => {\n                const result = i < count + 1;\n                if (result) {\n                  error?.preventDefault?.();\n                }\n                return result;\n              },\n              interval(i * period),\n              throwError(error)\n            )\n          )\n        )\n      )\n    );\n}\n\n/**\n * Emits the first value emitted by the source Observable as soon\n * as the condition becomes true.\n *\n * @param predicate A function to test each item emitted from the\n *   source Observable.\n */\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\nexport function takeWhen<T>(predicate: (value: T, index: number) => boolean) {\n  return (source: Observable<T>): Observable<T> => source.pipe(filter(predicate), take(1));\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { CoerceBoolean } from '~/app/decorators';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { UserLocalStorageService } from '~/app/shared/services/user-local-storage.service';\n\nexport type AlertPanelButtonConfig = {\n  icon: string;\n  class?: string;\n  tooltip?: string;\n  click?: (config: AlertPanelButtonConfig) => void;\n};\n\n@Component({\n  selector: 'omv-alert-panel',\n  templateUrl: './alert-panel.component.html',\n  styleUrls: ['./alert-panel.component.scss']\n})\nexport class AlertPanelComponent implements OnInit {\n  @Input()\n  type: 'info' | 'success' | 'warning' | 'error' | 'tip';\n\n  @CoerceBoolean()\n  @Input()\n  hasTitle = true;\n\n  @CoerceBoolean()\n  @Input()\n  hasMargin = true;\n\n  @CoerceBoolean()\n  @Input()\n  dismissible = false;\n\n  // An identifier, e.g. a UUID, which identifies this alert panel\n  // uniquely. This is used to store/restore the dismissed state.\n  @Input()\n  stateId: string;\n\n  @Input()\n  buttons: AlertPanelButtonConfig[] = [];\n\n  @Input()\n  icon?: string;\n\n  @Input()\n  title?: string;\n\n  @Output()\n  closed = new EventEmitter();\n\n  // Internal\n  public dismissed = false;\n\n  constructor(private userLocalStorageService: UserLocalStorageService) {}\n\n  @HostBinding('class')\n  get class(): string {\n    const result: string[] = [];\n    if (this.dismissed) {\n      result.push('omv-display-none');\n    }\n    return result.join(' ');\n  }\n\n  ngOnInit(): void {\n    if (this.dismissible) {\n      this.buttons.push({\n        icon: Icon.close,\n        tooltip: gettext('Dismiss'),\n        click: this.close.bind(this)\n      });\n\n      if (this.stateId) {\n        this.dismissed =\n          'dismiss' === this.userLocalStorageService.get(`alertpanel_state_${this.stateId}`, '');\n      }\n    }\n    this.sanitizeConfig();\n  }\n\n  close(): void {\n    this.dismissed = true;\n    if (this.stateId) {\n      this.userLocalStorageService.set(`alertpanel_state_${this.stateId}`, 'dismiss');\n    }\n    this.closed.emit();\n  }\n\n  protected sanitizeConfig() {\n    this.type = _.defaultTo(this.type, 'info');\n    switch (this.type) {\n      case 'info':\n        this.title = this.title || gettext('Information');\n        this.icon = _.get(Icon, this.icon, Icon.information);\n        break;\n      case 'success':\n        this.title = this.title || gettext('Success');\n        this.icon = _.get(Icon, this.icon, Icon.success);\n        break;\n      case 'warning':\n        this.title = this.title || gettext('Warning');\n        this.icon = _.get(Icon, this.icon, Icon.warning);\n        break;\n      case 'error':\n        this.title = this.title || gettext('Error');\n        this.icon = _.get(Icon, this.icon, Icon.error);\n        break;\n      case 'tip':\n        this.title = this.title || gettext('Tip');\n        this.icon = _.get(Icon, this.icon, Icon.tip);\n        break;\n    }\n  }\n}\n","<mat-card class=\"alert-{{ type }}\"\n          [ngClass]=\"{'omv-m': hasMargin}\">\n  <div class=\"omv-display-flex omv-flex-row\">\n    <mat-icon *ngIf=\"icon\"\n              class=\"alert-icon omv-icon-lg\"\n              svgIcon=\"{{ icon }}\"></mat-icon>\n    <div class=\"content-wrapper omv-flex-column omv-flex-1 omv-justify-content-center omv-align-items-start\">\n      <mat-card-title *ngIf=\"hasTitle && title\">\n        {{ title | transloco }}\n      </mat-card-title>\n      <mat-card-content>\n        <ng-content></ng-content>\n      </mat-card-content>\n    </div>\n    <mat-card-actions *ngIf=\"buttons.length\"\n                      class=\"omv-display-flex omv-flex-row omv-flex-column-reverse-lt-sm omv-justify-content-end omv-align-items-start\">\n      <div *ngFor=\"let button of buttons\"\n           class=\"alert-action-button omv-ml-q\"\n           [class]=\"button.class\"\n           mat-ripple\n           [attr.aria-label]=\"button.tooltip | transloco\"\n           [matTooltip]=\"button.tooltip | transloco\"\n           tabindex=\"0\"\n           (keyup.space)=\"button.click && button.click(button)\"\n           (keyup.enter)=\"button.click && button.click(button)\"\n           (click)=\"button.click && button.click(button)\">\n        <mat-icon svgIcon=\"{{ button.icon }}\"></mat-icon>\n      </div>\n    </mat-card-actions>\n  </div>\n</mat-card>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\n\n@Component({\n  selector: 'omv-block-ui',\n  templateUrl: './block-ui.component.html',\n  styleUrls: ['./block-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('fadeInOut', [\n      state('in', style({ opacity: 1 })),\n      transition(':enter', [style({ opacity: 0 }), animate('250ms')]),\n      transition(':leave', [animate('200ms', style({ opacity: 0 }))])\n    ])\n  ]\n})\nexport class BlockUiComponent {\n  constructor(public blockUiService: BlockUiService) {}\n}\n","<div *ngIf=\"(blockUiService.config$ | async)?.active\"\n     class=\"overlay omv-cursor-amiga20-busy\"\n     @fadeInOut>\n  <div class=\"container\">\n    <div class=\"icon\"></div>\n    <div class=\"omv-mx message\">{{ (blockUiService.config$ | async)?.message | transloco }}</div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { MaterialModule } from '~/app/material.module';\nimport { AlertPanelComponent } from '~/app/shared/components/alert-panel/alert-panel.component';\nimport { BlockUiComponent } from '~/app/shared/components/block-ui/block-ui.component';\nimport { DatatableComponent } from '~/app/shared/components/datatable/datatable.component';\nimport { DatatableActionsComponent } from '~/app/shared/components/datatable-actions/datatable-actions.component';\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { ProgressBarComponent } from '~/app/shared/components/progress-bar/progress-bar.component';\nimport { SubmitButtonComponent } from '~/app/shared/components/submit-button/submit-button.component';\nimport { TaskDialogComponent } from '~/app/shared/components/task-dialog/task-dialog.component';\nimport { DirectivesModule } from '~/app/shared/directives/directives.module';\nimport { PipesModule } from '~/app/shared/pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    AlertPanelComponent,\n    ModalDialogComponent,\n    DatatableComponent,\n    SubmitButtonComponent,\n    TaskDialogComponent,\n    DatatableActionsComponent,\n    ProgressBarComponent,\n    BlockUiComponent\n  ],\n  exports: [\n    AlertPanelComponent,\n    ModalDialogComponent,\n    SubmitButtonComponent,\n    DatatableComponent,\n    DatatableActionsComponent,\n    ProgressBarComponent,\n    BlockUiComponent\n  ],\n  imports: [\n    CommonModule,\n    PipesModule,\n    MaterialModule,\n    NgxDatatableModule,\n    TranslocoModule,\n    FormsModule,\n    DirectivesModule\n  ]\n})\nexport class ComponentsModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport * as _ from 'lodash';\n\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { Constraint } from '~/app/shared/models/constraint.type';\nimport { Datatable } from '~/app/shared/models/datatable.interface';\nimport {\n  DatatableAction,\n  DatatableActionEnabledConstraintsFn\n} from '~/app/shared/models/datatable-action.type';\nimport { DatatableSelection } from '~/app/shared/models/datatable-selection.model';\nimport { ConstraintService } from '~/app/shared/services/constraint.service';\nimport { DataStoreService } from '~/app/shared/services/data-store.service';\n\n@Component({\n  selector: 'omv-datatable-actions',\n  templateUrl: './datatable-actions.component.html',\n  styleUrls: ['./datatable-actions.component.scss']\n})\nexport class DatatableActionsComponent implements OnInit {\n  @Input()\n  selection: DatatableSelection;\n\n  @Input()\n  actions: DatatableAction[];\n\n  @Input()\n  table: Datatable;\n\n  constructor(private dataStoreService: DataStoreService) {}\n\n  ngOnInit(): void {\n    this.sanitizeConfig();\n    _.forEach(this.actions, (action) => {\n      if (action.type === 'select') {\n        this.dataStoreService.load(action.store).subscribe();\n      }\n    });\n  }\n\n  isDisabled(action: DatatableAction): boolean {\n    if (_.isPlainObject(action.enabledConstraints)) {\n      const validators: Array<DatatableActionEnabledConstraintsFn> = [];\n      if (_.isBoolean(action.enabledConstraints.hasData)) {\n        validators.push((selection, table) =>\n          action.enabledConstraints.hasData ? table.data?.length > 0 : !table.data?.length\n        );\n      }\n      if (_.isNumber(action.enabledConstraints.minSelected)) {\n        validators.push((selection) => selection.length >= action.enabledConstraints.minSelected);\n      }\n      if (_.isNumber(action.enabledConstraints.maxSelected)) {\n        validators.push((selection) => selection.length <= action.enabledConstraints.maxSelected);\n      }\n      if (_.isArray(action.enabledConstraints.constraint)) {\n        _.forEach(action.enabledConstraints.constraint, (constraint: Constraint) => {\n          validators.push(\n            (selection) =>\n              ConstraintService.filter(selection.selected, constraint).length === selection.length\n          );\n        });\n      }\n      if (_.isFunction(action.enabledConstraints.callback)) {\n        validators.push(action.enabledConstraints.callback);\n      }\n      const enabled = _.every(validators, (validator) => validator(this.selection, this.table));\n      return !enabled;\n    }\n    return false;\n  }\n\n  onButtonClick(action: DatatableAction): void {\n    if (_.isFunction(action.click)) {\n      action.click(action, this.table);\n    }\n  }\n\n  onSelectionChange(event: MatSelectChange, action: DatatableAction): void {\n    if (_.isFunction(action.selectionChange)) {\n      action.selectionChange(action, event.value, this.table);\n    }\n  }\n\n  protected sanitizeConfig(): void {\n    _.forEach(this.actions, (action) => {\n      // Map icon from 'foo' to 'mdi:foo' if necessary.\n      action.icon = _.get(Icon, action.icon, action.icon);\n      if (action.type === 'select') {\n        _.defaultsDeep(action, {\n          valueField: 'value',\n          textField: 'text',\n          store: {\n            data: []\n          }\n        });\n      }\n    });\n  }\n}\n","<ng-container *ngFor=\"let action of actions\">\n  <ng-container [ngSwitch]=\"action.type\">\n    <ng-template [ngSwitchCase]=\"'button'\">\n      <button mat-button\n              [disabled]=\"isDisabled(action)\"\n              matTooltip=\"{{ action.tooltip | transloco }}\"\n              (click)=\"onButtonClick(action)\">\n        {{ action.text | transloco }}\n      </button>\n    </ng-template>\n    <ng-template [ngSwitchCase]=\"'iconButton'\">\n      <button mat-icon-button\n              [disabled]=\"isDisabled(action)\"\n              matTooltip=\"{{ action.tooltip | transloco }}\"\n              (click)=\"onButtonClick(action)\">\n        <mat-icon *ngIf=\"!action.hasBadge\"\n                  svgIcon=\"{{ action.icon }}\">\n        </mat-icon>\n        <mat-icon *ngIf=\"['numDataItems'].includes(action.hasBadge)\"\n                  svgIcon=\"{{ action.icon }}\"\n                  [matBadge]=\"table.data?.length\"\n                  [matBadgeHidden]=\"!table.data?.length\"\n                  matBadgeColor=\"accent\"\n                  matBadgeOverlap=\"true\"\n                  matBadgeSize=\"small\">\n        </mat-icon>\n        <mat-icon *ngIf=\"['numSelectedItems'].includes(action.hasBadge)\"\n                  svgIcon=\"{{ action.icon }}\"\n                  [matBadge]=\"selection.length\"\n                  [matBadgeHidden]=\"!selection.length\"\n                  matBadgeColor=\"accent\"\n                  matBadgeOverlap=\"true\"\n                  matBadgeSize=\"small\">\n        </mat-icon>\n      </button>\n    </ng-template>\n    <ng-template [ngSwitchCase]=\"'menu'\">\n      <button mat-icon-button\n              [disabled]=\"isDisabled(action)\"\n              matTooltip=\"{{ action.tooltip | transloco }}\"\n              [matMenuTriggerFor]=\"menu\">\n        <mat-icon svgIcon=\"{{ action.icon }}\"></mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <ng-template matMenuContent>\n          <button *ngFor=\"let action of action.actions\"\n                  mat-menu-item\n                  [disabled]=\"isDisabled(action)\"\n                  matTooltip=\"{{ action.tooltip | transloco }}\"\n                  (click)=\"onButtonClick(action)\">\n            <mat-icon *ngIf=\"action.icon\"\n                      svgIcon=\"{{ action.icon }}\">\n            </mat-icon>\n            <span>{{ action.text | transloco }}</span>\n          </button>\n        </ng-template>\n      </mat-menu>\n    </ng-template>\n    <ng-template [ngSwitchCase]=\"'select'\">\n      <mat-form-field>\n        <mat-label></mat-label>\n        <mat-select [disabled]=\"isDisabled(action)\"\n                    placeholder=\"{{ action.placeholder | transloco }}\"\n                    (selectionChange)=\"onSelectionChange($event, action)\">\n          <mat-option *ngFor=\"let option of action.store.data\"\n                      [value]=\"option[action.valueField]\">\n            {{ option[action.textField] | transloco }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </ng-template>\n    <ng-template [ngSwitchCase]=\"'divider'\">\n      <mat-divider vertical=\"true\"></mat-divider>\n    </ng-template>\n  </ng-container>\n</ng-container>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport { DatatableComponent as NgxDatatableComponent } from '@swimlane/ngx-datatable';\nimport * as _ from 'lodash';\nimport { Subscription, timer } from 'rxjs';\n\nimport { CoerceBoolean, Throttle, Unsubscribe } from '~/app/decorators';\nimport { translate } from '~/app/i18n.helper';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { Datatable } from '~/app/shared/models/datatable.interface';\nimport { DatatableColumn } from '~/app/shared/models/datatable-column.type';\nimport { DatatableData } from '~/app/shared/models/datatable-data.type';\nimport { DatatableSelection } from '~/app/shared/models/datatable-selection.model';\nimport { Sorter } from '~/app/shared/models/sorter.type';\nimport { ClipboardService } from '~/app/shared/services/clipboard.service';\nimport { UserLocalStorageService } from '~/app/shared/services/user-local-storage.service';\n\nexport type DataTableLoadParams = {\n  dir?: 'asc' | 'desc';\n  prop?: string;\n  offset?: number;\n  limit?: number;\n  search?: any;\n};\n\nexport type DataTableCellChanged = {\n  value: any;\n  prop: string | number;\n  row: Record<string, DatatableData | null>;\n  column: DatatableColumn;\n};\n\n@Component({\n  selector: 'omv-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DatatableComponent implements Datatable, OnInit, OnDestroy, OnChanges {\n  @ViewChild('table', { static: true })\n  table: NgxDatatableComponent;\n  @ViewChild('textTpl', { static: true })\n  textTpl: TemplateRef<any>;\n  @ViewChild('htmlTpl', { static: true })\n  htmlTpl: TemplateRef<any>;\n  @ViewChild('imageTpl', { static: true })\n  imageTpl: TemplateRef<any>;\n  @ViewChild('checkIconTpl', { static: true })\n  checkIconTpl: TemplateRef<any>;\n  @ViewChild('checkBoxTpl', { static: true })\n  checkBoxTpl: TemplateRef<any>;\n  @ViewChild('joinTpl', { static: true })\n  joinTpl: TemplateRef<any>;\n  @ViewChild('truncateTpl', { static: true })\n  truncateTpl: TemplateRef<any>;\n  @ViewChild('placeholderTpl', { static: true })\n  placeholderTpl: TemplateRef<any>;\n  @ViewChild('progressBarTpl', { static: true })\n  progressBarTpl: TemplateRef<any>;\n  @ViewChild('notAvailableTpl', { static: true })\n  notAvailableTpl: TemplateRef<any>;\n  @ViewChild('shapeShifterTpl', { static: true })\n  shapeShifterTpl: TemplateRef<any>;\n  @ViewChild('localeDateTimeTpl', { static: true })\n  localeDateTimeTpl: TemplateRef<any>;\n  @ViewChild('relativeTimeTpl', { static: true })\n  relativeTimeTpl: TemplateRef<any>;\n  @ViewChild('chipTpl', { static: true })\n  chipTpl: TemplateRef<any>;\n  @ViewChild('binaryUnitTpl', { static: true })\n  binaryUnitTpl: TemplateRef<any>;\n  @ViewChild('unsortedListTpl', { static: true })\n  unsortedListTpl: TemplateRef<any>;\n  @ViewChild('templateTpl', { static: true })\n  templateTpl: TemplateRef<any>;\n  @ViewChild('buttonToggleTpl', { static: true })\n  buttonToggleTpl: TemplateRef<any>;\n  @ViewChild('copyToClipboardTpl', { static: true })\n  copyToClipboardTpl: TemplateRef<any>;\n  @ViewChild('cronToHumanTpl', { static: true })\n  cronToHumanTpl: TemplateRef<any>;\n\n  // Define a query selector if the datatable is used in an\n  // overflow container.\n  @Input()\n  ownerContainer?: string;\n\n  // The data to be shown.\n  @Input()\n  data: DatatableData[];\n\n  // Show the linear loading bar.\n  @CoerceBoolean()\n  @Input()\n  loadingIndicator? = false;\n\n  // An identifier, e.g. a UUID, which identifies this datatable\n  // uniquely. This is used to store/restore the column state.\n  @Input()\n  stateId?: string;\n\n  // The name of the property that identifies a row uniquely.\n  @Input()\n  rowId?: string;\n\n  @Input()\n  columnMode?: 'standard' | 'flex' | 'force' = 'flex';\n\n  @CoerceBoolean()\n  @Input()\n  reorderable? = false;\n\n  // Display the toolbar above the datatable that includes\n  // the custom and default (e.g. 'Reload') action buttons?\n  @CoerceBoolean()\n  @Input()\n  hasActionBar? = true;\n\n  // Use a fixed action bar so that it does not leave the viewport\n  // even when scrolled.\n  @CoerceBoolean()\n  @Input()\n  hasStickyActionBar? = false;\n\n  // Show/Hide the reload button. If 'autoReload' is set to `true`,\n  // then the button is automatically hidden.\n  @CoerceBoolean()\n  @Input()\n  hasReloadButton? = true;\n\n  // Show/Hide the search field. Defaults to `false`.\n  @CoerceBoolean()\n  @Input()\n  hasSearchField? = false;\n\n  // Display the datatable header?\n  @CoerceBoolean()\n  @Input()\n  hasHeader? = true;\n\n  // Display the datatable footer?\n  @CoerceBoolean()\n  @Input()\n  hasFooter? = true;\n\n  @Input()\n  selectionType?: 'none' | 'single' | 'multi' = 'multi';\n\n  // By default, selected items will be updated on reload.\n  @Input()\n  updateSelectionOnReload: 'always' | 'onChange' | 'never' = 'always';\n\n  // Automatically load the data after datatable has been\n  // initialized. If set to false, the autoReload configuration\n  // is not taken into action. Defaults to `true`.\n  @CoerceBoolean()\n  @Input()\n  autoLoad? = true;\n\n  // The frequency in milliseconds with which the data\n  // should be reloaded. Defaults to `false`.\n  @Input()\n  autoReload?: boolean | number = false;\n\n  // Page size to show. To disable paging, set the limit to 0.\n  @Input()\n  limit? = 25;\n\n  // Total count of all rows.\n  @Input()\n  count? = 0;\n\n  // Use remote paging instead of client-side.\n  @CoerceBoolean()\n  @Input()\n  remotePaging = false;\n\n  // Use remote sorting instead of client-side.\n  @CoerceBoolean()\n  @Input()\n  remoteSorting = false;\n\n  // Use remote searching instead of client-side.\n  @CoerceBoolean()\n  @Input()\n  remoteSearching = false;\n\n  // Sorting mode. In \"single\" mode, clicking on a column name will\n  // reset the existing sorting before sorting by the new selection.\n  // In multi selection mode, additional clicks on column names will\n  // add sorting using multiple columns.\n  @Input()\n  sortType?: 'single' | 'multi' = 'single';\n\n  // Ordered array of objects used to determine sorting by column.\n  @Input()\n  sorters?: Sorter[] = [];\n\n  // Event emitted when the data must be loaded.\n  @Output()\n  readonly loadDataEvent = new EventEmitter<DataTableLoadParams>();\n\n  // Event emitted when the selection has been changed.\n  // Note, the `DatatableSelection` event object is a deep copy of\n  // the internal object, so manipulations of the object will not\n  // affect the data displayed in the table.\n  @Output()\n  readonly selectionChangeEvent = new EventEmitter<DatatableSelection>();\n\n  // Event emitted when the cell data has been changed.\n  // This applies only to columns of type 'buttonToggle'.\n  @Output()\n  readonly cellDataChangedEvent = new EventEmitter<DataTableCellChanged>();\n\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  // Internal\n  public icon = Icon;\n  public rows = [];\n  public offset = 0;\n  public selection = new DatatableSelection();\n  public filteredColumns: DatatableColumn[];\n  public messages: {\n    emptyMessage: string;\n    totalMessage: string;\n    selectedMessage: string;\n  };\n  public searchFilter = '';\n\n  private cellTemplates: { [key: string]: TemplateRef<any> };\n  private rawColumns: DatatableColumn[] = [];\n\n  constructor(\n    private clipboardService: ClipboardService,\n    private userLocalStorageService: UserLocalStorageService\n  ) {\n    this.messages = {\n      emptyMessage: translate(gettext('No data to display.')),\n      totalMessage: translate(gettext('total')),\n      selectedMessage: translate(gettext('selected'))\n    };\n  }\n\n  // The column configuration.\n  @Input()\n  get columns(): DatatableColumn[] {\n    return this.rawColumns;\n  }\n  set columns(columns: DatatableColumn[]) {\n    this.sanitizeColumns(columns);\n    this.rawColumns = [...columns];\n  }\n\n  @Throttle(1000)\n  onSearchFilterChange(): void {\n    if (!this.remoteSearching) {\n      this.applySearchFilter();\n    } else {\n      this.reloadData();\n    }\n  }\n\n  ngOnInit(): void {\n    // Init cell templates.\n    this.initTemplates();\n    // Sanitize configuration.\n    this.sanitizeConfig();\n    // Initialize timer or simply load the data once.\n    // Note, we'll also use the RxJS timer when loading the data only once,\n    // that's because this will prevent us from getting an 'Expression has\n    // changed after it was checked' error.\n    if (this.autoLoad) {\n      const period = _.isNumber(this.autoReload) ? (this.autoReload as number) : null;\n      this.subscriptions.add(\n        timer(0, period).subscribe(() => {\n          this.reloadData();\n        })\n      );\n    }\n    this.updateColumns();\n  }\n\n  ngOnDestroy(): void {\n    (this.onSearchFilterChange as any).cancel?.();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    _.forIn(changes, (_change: SimpleChange, propName: string) => {\n      switch (propName) {\n        case 'data': {\n          if (!this.data) {\n            return;\n          }\n          if (!this.remoteSearching && this.searchFilter !== '') {\n            this.applySearchFilter();\n          } else {\n            this.rows = [...this.data];\n          }\n          this.updateSelection();\n        }\n      }\n    });\n  }\n\n  /**\n   * Reload the data to be shown by emitting the 'loadDataEvent' event.\n   */\n  reloadData(): void {\n    const params: DataTableLoadParams = {};\n    if (this.remotePaging) {\n      _.merge(params, { offset: this.offset, limit: this.limit });\n    }\n    if (this.remoteSorting && !_.isEmpty(this.sorters)) {\n      _.merge(params, { dir: this.sorters[0].dir, prop: this.sorters[0].prop });\n    }\n    if (this.remoteSearching) {\n      _.merge(params, { search: this.searchFilter });\n    }\n    this.loadDataEvent.emit(params);\n  }\n\n  /**\n   * Update the data to be shown.\n   * The internal data structures are updated and the table will\n   * be redrawn.\n   */\n  updateData(data: DatatableData[]): void {\n    this.data.splice(0, this.data.length, ...data);\n    this.rows = [...this.data];\n  }\n\n  updateSelection(): void {\n    if (this.updateSelectionOnReload === 'never') {\n      return;\n    }\n    // Get the new selected rows.\n    const newSelected: any[] = [];\n    _.forEach(this.selection.selected, (item) => {\n      const row = _.find(this.data, [this.rowId, _.get(item, this.rowId)]);\n      if (!_.isUndefined(row)) {\n        newSelected.push(row);\n      }\n    });\n    if (\n      this.updateSelectionOnReload === 'onChange' &&\n      _.isEqual(this.selection.selected, newSelected)\n    ) {\n      return;\n    }\n    this.selection.set(newSelected);\n    this.onSelect();\n  }\n\n  onSelect(): void {\n    // Make a deep copy of the selection and emit it to the subscribers.\n    this.selectionChangeEvent.emit(_.cloneDeep(this.selection));\n  }\n\n  onSort({ sorts }): void {\n    if (this.remotePaging) {\n      this.offset = 0;\n    }\n    if (this.remoteSorting) {\n      this.sorters = sorts;\n      this.reloadData();\n    }\n  }\n\n  onPage({ count, pageSize, limit, offset }): void {\n    if (this.remotePaging) {\n      this.offset = offset;\n      this.reloadData();\n    }\n  }\n\n  onToggleColumn(column: DatatableColumn): void {\n    column.hidden = !column.hidden;\n    this.saveColumnState();\n    this.updateColumns();\n  }\n\n  onCopyToClipboard(event: Event, value: any): void {\n    event.stopPropagation();\n    this.clipboardService.copy(value);\n  }\n\n  updateColumns(): void {\n    // Load the custom column configuration from the browser\n    // local store and filter hidden columns.\n    this.loadColumnState();\n    this.filteredColumns = this.rawColumns.filter((column) => !column.hidden);\n  }\n\n  clearSearchFilter(): void {\n    this.searchFilter = '';\n    if (!this.remoteSearching) {\n      this.rows = [...this.data];\n    } else {\n      this.reloadData();\n    }\n  }\n\n  applySearchFilter(): void {\n    this.rows = _.filter(this.data, (o) =>\n      _.some(this.columns, (column) => {\n        let value = _.get(o, column.prop);\n        if (!_.isUndefined(column.pipe)) {\n          value = column.pipe.transform(value);\n        }\n        if (value === '' || _.isUndefined(value) || _.isNull(value)) {\n          return false;\n        }\n        if (_.isObjectLike(value)) {\n          value = JSON.stringify(value);\n        } else if (_.isArray(value)) {\n          value = _.join(value, ' ');\n        } else if (_.isNumber(value) || _.isBoolean(value)) {\n          value = value.toString();\n        }\n        return _.includes(_.lowerCase(value), _.lowerCase(this.searchFilter));\n      })\n    );\n    this.offset = 0;\n  }\n\n  onButtonToggleChange(\n    event: MatButtonToggleChange,\n    row: Record<string, any>,\n    column: DatatableColumn\n  ): void {\n    const allowNone = _.get(column, 'cellTemplateConfig.allowNone', true);\n    // eslint-disable-next-line eqeqeq\n    if (allowNone && row[column.prop] == event.value) {\n      row[column.prop] = null;\n    } else {\n      row[column.prop] = event.value;\n    }\n    this.cellDataChangedEvent.emit({\n      value: row[column.prop],\n      prop: column.prop,\n      row,\n      column\n    });\n  }\n\n  protected initTemplates(): void {\n    this.cellTemplates = {\n      text: this.textTpl,\n      html: this.htmlTpl,\n      image: this.imageTpl,\n      checkIcon: this.checkIconTpl,\n      checkBox: this.checkBoxTpl,\n      join: this.joinTpl,\n      truncate: this.truncateTpl,\n      placeholder: this.placeholderTpl,\n      progressBar: this.progressBarTpl,\n      notAvailable: this.notAvailableTpl,\n      shapeShifter: this.shapeShifterTpl,\n      localeDateTime: this.localeDateTimeTpl,\n      relativeTime: this.relativeTimeTpl,\n      chip: this.chipTpl,\n      binaryUnit: this.binaryUnitTpl,\n      unsortedList: this.unsortedListTpl,\n      template: this.templateTpl,\n      buttonToggle: this.buttonToggleTpl,\n      copyToClipboard: this.copyToClipboardTpl,\n      cronToHuman: this.cronToHumanTpl\n    };\n  }\n\n  protected sanitizeConfig(): void {\n    // Always hide the 'Reload' action button if 'autoReload'\n    // is enabled.\n    if (this.autoReload) {\n      this.hasReloadButton = false;\n    }\n    this.sanitizeColumns(this.columns);\n  }\n\n  /**\n   * Sanitize the column configuration, e.g.\n   * - convert cellTemplateName => cellTemplate\n   * - translate the column headers\n   */\n  protected sanitizeColumns(columns: DatatableColumn[]): void {\n    if (!this.cellTemplates) {\n      return;\n    }\n    columns.forEach((column: DatatableColumn) => {\n      column.hidden = !!column.hidden;\n      column.sortable = !!column.sortable;\n      // Convert column configuration.\n      if (_.isString(column.cellTemplateName) && column.cellTemplateName.length) {\n        column.cellTemplate = this.cellTemplates[column.cellTemplateName];\n      }\n      // Translate the column header.\n      if (_.isString(column.name) && column.name.length) {\n        column.name = translate(column.name);\n      }\n      // Disable column resizing if mode is `flex`.\n      if ('flex' === this.columnMode) {\n        column.resizeable = false;\n      }\n    });\n  }\n\n  private loadColumnState(): void {\n    if (!this.stateId) {\n      return;\n    }\n    const value = this.userLocalStorageService.get(`datatable_state_${this.stateId}`);\n    if (_.isString(value)) {\n      const columnsConfig = JSON.parse(value);\n      _.forEach(columnsConfig, (columnConfig: Record<string, any>) => {\n        const column = _.find(this.columns, ['name', _.get(columnConfig, 'name')]);\n        if (column) {\n          _.merge(column, columnConfig);\n        }\n      });\n    }\n  }\n\n  private saveColumnState(): void {\n    if (!this.stateId) {\n      return;\n    }\n    const columnsConfig = [];\n    _.forEach(this.columns, (column: DatatableColumn) => {\n      columnsConfig.push({\n        name: column.name,\n        hidden: column.hidden\n      });\n    });\n    this.userLocalStorageService.set(\n      `datatable_state_${this.stateId}`,\n      JSON.stringify(columnsConfig)\n    );\n  }\n}\n","<mat-toolbar *ngIf=\"hasActionBar\"\n             class=\"omv-display-flex\"\n             [ngClass]=\"{'omv-sticky': hasStickyActionBar}\">\n  <!-- Custom action buttons -->\n  <ng-content select=\"omv-datatable-actions\"></ng-content>\n  <span class=\"omv-flex-1\"></span>\n  <!-- Default action buttons -->\n  <button *ngIf=\"stateId\"\n          mat-icon-button\n          matTooltip=\"{{ 'Show/Hide columns' | transloco }}\"\n          [matMenuTriggerFor]=\"columnMenu\">\n    <mat-icon svgIcon=\"{{ icon.table }}\"></mat-icon>\n  </button>\n  <div *ngIf=\"hasSearchField\">\n    <mat-form-field>\n      <button mat-icon-button\n              matPrefix>\n        <mat-icon svgIcon=\"{{ icon.search }}\"></mat-icon>\n      </button>\n      <input matInput\n             type=\"search\"\n             [(ngModel)]=\"searchFilter\"\n             (ngModelChange)=\"onSearchFilterChange()\">\n      <button mat-icon-button\n              matSuffix\n              matTooltip=\"{{ 'Clear' | transloco }}\"\n              (click)=\"clearSearchFilter()\">\n        <mat-icon svgIcon=\"{{ icon.clear }}\"></mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n  <button *ngIf=\"hasReloadButton\"\n          mat-icon-button\n          matTooltip=\"{{ 'Reload' | transloco }}\"\n          (click)=\"reloadData()\">\n    <mat-icon svgIcon=\"{{ icon.reload }}\"></mat-icon>\n  </button>\n</mat-toolbar>\n<div class=\"omv-datatable-progress-bar\">\n  <mat-progress-bar *ngIf=\"loadingIndicator\"\n                    mode=\"indeterminate\">\n  </mat-progress-bar>\n</div>\n<ngx-datatable #table\n               [messages]=\"messages\"\n               [rows]=\"rows\"\n               [columns]=\"filteredColumns\"\n               [columnMode]=\"columnMode\"\n               [reorderable]=\"reorderable\"\n               [headerHeight]=\"hasHeader ? 50 : 0\"\n               [footerHeight]=\"hasFooter ? 50 : 0\"\n               [rowHeight]=\"'auto'\"\n               [limit]=\"limit > 0 ? limit : undefined\"\n               [count]=\"count\"\n               [offset]=\"offset\"\n               [selectionType]=\"selectionType !== 'none' ? selectionType : undefined\"\n               [selected]=\"selection.selected\"\n               (select)=\"onSelect()\"\n               [externalPaging]=\"remotePaging\"\n               [externalSorting]=\"remoteSorting\"\n               [sorts]=\"sorters\"\n               [sortType]=\"sortType\"\n               (sort)=\"onSort($event)\"\n               (page)=\"onPage($event)\">\n</ngx-datatable>\n\n<mat-menu #columnMenu=\"matMenu\">\n  <ng-template matMenuContent>\n    <button *ngFor=\"let column of columns\"\n            mat-menu-item\n            (click)=\"$event.stopPropagation(); onToggleColumn(column)\">\n      <mat-icon *ngIf=\"!column.hidden\"\n                svgIcon=\"{{ icon.checkBoxMarked }}\">\n      </mat-icon>\n      <mat-icon *ngIf=\"column.hidden\"\n                svgIcon=\"{{ icon.checkBoxBlank }}\">\n      </mat-icon>\n      <span>{{ column.name }}</span>\n    </button>\n  </ng-template>\n</mat-menu>\n\n<ng-template #textTpl\n             let-value=\"value\">\n  <span [innerHTML]=\"value | escapeHtml\"></span>\n</ng-template>\n\n<ng-template #htmlTpl\n             let-value=\"value\">\n  <span [innerHTML]=\"value | sanitizeHtml\"></span>\n</ng-template>\n\n<ng-template #imageTpl\n             let-value=\"value\"\n             let-column=\"column\"\n             let-row=\"row\">\n  <img src=\"{{ !column?.cellTemplateConfig?.src ? value : column.cellTemplateConfig.src | template:row }}\"\n       [alt]=\"column?.cellTemplateConfig?.alt\"\n       [ngClass]=\"column?.cellTemplateConfig?.class ? column.cellTemplateConfig.class : 'omv-max-w-100'\">\n</ng-template>\n\n<ng-template #checkIconTpl\n             let-value=\"value\"\n             let-column=\"column\"\n             let-row=\"row\">\n  <mat-icon *ngIf=\"(!column?.cellTemplateConfig ? value : (column?.cellTemplateConfig | template:row)) | toBoolean\"\n            svgIcon=\"{{ icon.check }}\">\n  </mat-icon>\n</ng-template>\n\n<ng-template #checkBoxTpl\n             let-value=\"value\"\n             let-column=\"column\"\n             let-row=\"row\">\n  <mat-checkbox [checked]=\"(!column?.cellTemplateConfig ? value : (column?.cellTemplateConfig | template:row)) | toBoolean\"></mat-checkbox>\n</ng-template>\n\n<ng-template #joinTpl\n             let-value=\"value\"\n             let-column=\"column\">\n  <span [innerHTML]=\"value | join:column?.cellTemplateConfig | sanitizeHtml\"></span>\n</ng-template>\n\n<ng-template #truncateTpl\n             let-value=\"value\"\n             let-column=\"column\">\n  <span [matTooltip]=\"value\">{{ value | truncate:column?.cellTemplateConfig?.length:column?.cellTemplateConfig?.omission:column?.cellTemplateConfig?.separator }}</span>\n</ng-template>\n\n<ng-template #placeholderTpl\n             let-value=\"value\">\n  {{ value | defaultTo:'-' }}\n</ng-template>\n\n<ng-template #notAvailableTpl\n             let-value=\"value\">\n  {{ value | notAvailable }}\n</ng-template>\n\n<ng-template #binaryUnitTpl\n             let-value=\"value\"\n             let-column=\"column\">\n  {{ value | binaryUnit:column?.cellTemplateConfig }}\n</ng-template>\n\n<ng-template #localeDateTimeTpl\n             let-value=\"value\">\n  {{ value | localeDate:'datetime' }}\n</ng-template>\n\n<ng-template #relativeTimeTpl\n             let-value=\"value\">\n  {{ value | localeDate:'relative':true }}\n</ng-template>\n\n<ng-template #cronToHumanTpl\n             let-value=\"value\">\n  {{ value | cron2human }}\n</ng-template>\n\n<ng-template #progressBarTpl\n             let-value=\"value\"\n             let-column=\"column\"\n             let-row=\"row\">\n  <omv-progress-bar [value]=\"value\"\n                    [text]=\"column?.cellTemplateConfig?.text | template:row\"\n                    [warningThreshold]=\"column?.cellTemplateConfig?.warningThreshold | template:row\">\n  </omv-progress-bar>\n</ng-template>\n\n<ng-template #chipTpl\n             let-value=\"value\"\n             let-column=\"column\"\n             let-row=\"row\">\n  <mat-chip-list>\n    <mat-chip *ngFor=\"let item of (value | split:column?.cellTemplateConfig?.separator | array)\"\n              [selectable]=\"false\"\n              [disableRipple]=\"true\"\n              [ngClass]=\"(column?.cellTemplateConfig?.map && column?.cellTemplateConfig?.map[item]?.class) ? column.cellTemplateConfig.map[item].class : (column?.cellTemplateConfig?.class ? column.cellTemplateConfig.class : 'omv-background-color-pair-gray')\"\n              [matTooltip]=\"(column?.cellTemplateConfig?.map && column?.cellTemplateConfig?.map[item]?.tooltip) ? column?.cellTemplateConfig?.map[item]?.tooltip : undefined\">\n      <span class=\"omv-text-truncate\">{{ (column?.cellTemplateConfig?.map && column?.cellTemplateConfig?.map[item]?.value) ? (column.cellTemplateConfig.map[item].value | template:row) : (column?.cellTemplateConfig?.template ? (column.cellTemplateConfig.template | template:row) : item) }}</span>\n    </mat-chip>\n  </mat-chip-list>\n</ng-template>\n\n<ng-template #unsortedListTpl\n             let-value=\"value\">\n  <ul class=\"omv-datatable-template-unsorted-list\">\n    <li *ngFor=\"let item of (value | array)\">\n      {{ item }}\n    </li>\n  </ul>\n</ng-template>\n\n<ng-template #buttonToggleTpl\n             let-value=\"value\"\n             let-column=\"column\"\n             let-row=\"row\">\n  <mat-button-toggle-group class=\"omv-display-flex omv-flex-row\"\n                           value=\"{{ value }}\">\n    <mat-button-toggle *ngFor=\"let button of column.cellTemplateConfig.buttons\"\n                       class=\"omv-flex-1\"\n                       [value]=\"button.value\"\n                       (change)=\"onButtonToggleChange($event, row, column)\">\n      <span>{{ button.text }}</span>\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n</ng-template>\n\n<ng-template #copyToClipboardTpl\n             let-value=\"value\">\n  <div *ngIf=\"value !== null && value !== undefined && value !== ''\"\n       class=\"omv-display-flex omv-flex-row omv-gap-1 omv-flex-wrap omv-align-items-center\">\n    <span [matTooltip]=\"value\">{{ value | preventHtml }}</span>\n    <mat-icon class=\"omv-display-flex omv-icon-sm omv-cursor-pointer\"\n              svgIcon=\"{{ icon.copy }}\"\n              matTooltip=\"{{ 'Copy to clipboard' | transloco }}\"\n              (click)=\"onCopyToClipboard($event, value)\">\n    </mat-icon>\n  </div>\n</ng-template>\n\n<ng-template #templateTpl\n             let-column=\"column\"\n             let-row=\"row\">\n  <span matTooltipClass=\"omv-text-wrap-line\"\n        [matTooltip]=\"column.cellTemplateConfig | template:row | br2nl | preventHtml\"\n        [innerHTML]=\"column.cellTemplateConfig | template:row | sanitizeHtml\">\n  </span>\n</ng-template>\n\n<ng-template #shapeShifterTpl\n             let-config=\"value\">\n  <ng-container [ngSwitch]=\"config.type\">\n    <ng-template [ngSwitchCase]=\"'text'\">\n      {{ config.value | sanitizeHtml }}\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'bold'\">\n      <strong>{{ config.value }}</strong>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'placeholder'\">\n      {{ config.value | defaultTo:'-' }}\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'notAvailable'\">\n      {{ config.value | notAvailable }}\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'join'\">\n      {{ config.value | join }}\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'checkIcon'\">\n      <mat-icon svgIcon=\"{{ icon.check }}\"\n                [hidden]=\"!config.value\">\n      </mat-icon>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'progressBar'\">\n      <omv-progress-bar [value]=\"config.value\"\n                        [text]=\"config.text\">\n      </omv-progress-bar>\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'localeDateTime'\">\n      {{ config.value | localeDate:'datetime' }}\n    </ng-template>\n\n    <ng-template [ngSwitchCase]=\"'relativeTime'\">\n      {{ config.value | localeDate:'relative':true }}\n    </ng-template>\n  </ng-container>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { ModalDialogConfig } from '~/app/shared/models/modal-dialog-config.type';\n\n/**\n * A dialog with a 'Yes' and 'No' button. The accept button\n * will return the boolean value 'true', the reject button 'false'.\n */\n@Component({\n  selector: 'omv-confirm-dialog',\n  templateUrl: './modal-dialog.component.html',\n  styleUrls: ['./modal-dialog.component.scss']\n})\nexport class ModalDialogComponent {\n  // Internal\n  public config: ModalDialogConfig = {} as ModalDialogConfig;\n  public showConfirmCheckbox = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) data: ModalDialogConfig) {\n    this.config = data;\n    this.sanitizeConfig();\n  }\n\n  onConfirmCheckboxChange(): void {\n    const button = this.config.buttons[1];\n    button.disabled = !button.disabled;\n  }\n\n  protected sanitizeConfig() {\n    this.config.icon = _.get(Icon, this.config.icon, this.config.icon);\n    switch (this.config.template) {\n      case 'confirmation':\n      case 'confirmation-danger':\n      case 'confirmation-critical':\n        _.defaultsDeep(this.config, {\n          title: gettext('Confirmation'),\n          icon: Icon.question,\n          buttons: [\n            {\n              text: gettext('No'),\n              dialogResult: false,\n              autofocus: true\n            },\n            {\n              text: gettext('Yes'),\n              dialogResult: true,\n              class:\n                'confirmation' === this.config.template\n                  ? 'omv-background-color-pair-primary'\n                  : 'omv-background-color-pair-red'\n            }\n          ]\n        });\n        if ('confirmation-critical' === this.config.template) {\n          this.showConfirmCheckbox = true;\n          this.config.buttons[1].disabled = true;\n        }\n        break;\n      case 'information':\n        _.defaultsDeep(this.config, {\n          title: gettext('Information'),\n          icon: Icon.information,\n          buttons: [\n            {\n              text: gettext('OK'),\n              autofocus: true,\n              dialogResult: true,\n              class: 'omv-background-color-pair-primary'\n            }\n          ]\n        });\n        break;\n    }\n  }\n}\n","<div *ngIf=\"config.title\"\n     class=\"omv-display-flex omv-flex-row omv-align-items-center omv-gap-4\"\n     mat-dialog-title>\n  <mat-icon *ngIf=\"config.icon\"\n            class=\"omv-icon-lg\"\n            svgIcon=\"{{ config.icon }}\">\n  </mat-icon>\n  <div>{{ config.title | transloco }}</div>\n</div>\n<mat-dialog-content>\n  <span [innerHTML]=\"config.message | transloco | sanitizeHtml\"></span>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <ng-container *ngIf=\"showConfirmCheckbox\">\n    <mat-checkbox (change)=\"onConfirmCheckboxChange()\">\n      {{ 'Confirm' | transloco }}\n    </mat-checkbox>\n    <span class=\"omv-flex-1\"></span>\n  </ng-container>\n  <button *ngFor=\"let button of config.buttons\"\n          mat-flat-button\n          [ngClass]=\"button.class\"\n          [mat-dialog-close]=\"button.dialogResult\"\n          [disabled]=\"button.disabled\"\n          [autofocus]=\"button.autofocus\">\n    {{ button.text | transloco }}\n  </button>\n</mat-dialog-actions>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'omv-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent {\n  @Input()\n  value = 0.0; // The value in percent [0...100]\n\n  @Input()\n  fractionDigits = 1;\n\n  @Input()\n  text?: string;\n\n  @Input()\n  warningThreshold?: number;\n}\n","<div class=\"omv-progress-bar\">\n  <div class=\"omv-progress-bar-text\">\n    <span *ngIf=\"text\">{{ text }}</span>\n    <span *ngIf=\"!text\">{{ value.toFixed(fractionDigits) }}%</span>\n  </div>\n  <div class=\"omv-progress-bar-fill\"\n       [ngClass]=\"{'warning': warningThreshold && warningThreshold > 0 && value > warningThreshold}\"\n       [style.width]=\"(value | max:0)  + '%'\">\n    <div class=\"omv-progress-bar-text\">\n      <span *ngIf=\"text\">{{ text }}</span>\n      <span *ngIf=\"!text\">{{ value.toFixed(fractionDigits) }}%</span>\n    </div>\n  </div>\n</div>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'omv-submit-button',\n  templateUrl: './submit-button.component.html',\n  styleUrls: ['./submit-button.component.scss']\n})\nexport class SubmitButtonComponent {\n  // Optional ID of the form this button is assigned to.\n  @Input()\n  form?: string;\n\n  @Input()\n  formGroup: FormGroup;\n\n  @Input()\n  type = 'submit';\n\n  @Input()\n  disabled = false;\n\n  @Output()\n  readonly buttonClick = new EventEmitter<Event>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  onSubmit(event: Event) {\n    // Set focus to the 'Submit' button.\n    this.elementRef.nativeElement.focus();\n    // Check if the form is invalid. If that is the case, then do\n    // the following:\n    // - Mark all invalid form fields as touched, thus they are\n    //   automatically drawn in red and the error message is\n    //   displayed below the form field.\n    // - Focus the first invalid form field.\n    if (this.formGroup && this.formGroup.invalid) {\n      const invalidControls = _.filter(\n        _.values(this.formGroup.controls),\n        (control) => control.invalid\n      );\n      _.invokeMap(invalidControls, 'markAllAsTouched');\n      _.invokeMap(invalidControls, 'updateValueAndValidity');\n      const element = this.elementRef.nativeElement.offsetParent.querySelector(\n        '.mat-input-element.ng-invalid'\n      );\n      if (element) {\n        if (_.isFunction(element.focus)) {\n          element.focus();\n        }\n        element.scrollIntoView({ behavior: 'smooth' });\n      }\n      return;\n    }\n    this.buttonClick.emit(event);\n  }\n}\n","<button [type]=\"type\"\n        [attr.form]=\"form\"\n        [disabled]=\"disabled\"\n        mat-flat-button\n        class=\"omv-background-color-pair-primary\"\n        (click)=\"onSubmit($event)\">\n  <ng-content></ng-content>\n</button>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { from, of, Subscription } from 'rxjs';\nimport { concatMap, delay, finalize, tap } from 'rxjs/operators';\nimport stripAnsi from 'strip-ansi';\n\nimport { format } from '~/app/functions.helper';\nimport { Icon } from '~/app/shared/enum/icon.enum';\nimport { TaskDialogConfig } from '~/app/shared/models/task-dialog-config.type';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { RpcBgResponse, RpcService } from '~/app/shared/services/rpc.service';\n\n/**\n * A dialog with 'Start', 'Stop' and 'Cancel' buttons. It will\n * display the content received by a background task.\n */\n@Component({\n  selector: 'omv-task-dialog',\n  templateUrl: './task-dialog.component.html',\n  styleUrls: ['./task-dialog.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskDialogComponent implements OnInit, OnDestroy {\n  @Output()\n  readonly finishEvent = new EventEmitter<string>();\n\n  @ViewChild('content', { static: true })\n  private content: ElementRef;\n\n  // Internal\n  public config: TaskDialogConfig = {};\n  public running = false;\n  private subscription: Subscription;\n  private filename: string;\n\n  constructor(\n    private authSessionService: AuthSessionService,\n    private rpcService: RpcService,\n    @Inject(MAT_DIALOG_DATA) data: TaskDialogConfig\n  ) {\n    this.config = data;\n    this.sanitizeConfig();\n  }\n\n  ngOnInit(): void {\n    if (this.config.startOnInit) {\n      this.onStart();\n    } else {\n      this.print(\n        format(\n          'REQUEST ACCESS TO MASTER CONTROL PROGRAM.<br>' +\n            'USER CODE 00-{{ username | upper }}.<br>' +\n            'PASSWORD:MASTER. <br>' +\n            '<span class=\"omv-text-blink\">█</span>',\n          {\n            username: this.authSessionService.getUsername()\n          }\n        )\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  onStart() {\n    this.config.buttons.start.disabled = true;\n    this.config.buttons.stop.disabled = false;\n    this.config.buttons.close.disabled = true;\n    this.config.buttons.close.dialogResult = false;\n    this.content.nativeElement.innerHTML = '';\n    this.running = true;\n    this.subscription = this.rpcService\n      .requestTaskOutput(\n        this.config.request.service,\n        this.config.request.method,\n        this.config.request.params\n      )\n      .pipe(\n        tap((res: RpcBgResponse) => (this.filename = res.filename)),\n        finalize(() => {\n          this.running = false;\n          this.config.buttons.start.disabled = false;\n          this.config.buttons.stop.disabled = true;\n          this.config.buttons.close.disabled = false;\n        })\n      )\n      .subscribe({\n        next: (value: RpcBgResponse) => {\n          this.print(value.output, true);\n        },\n        error: () => {\n          this.printTypeWriter('** CONNECTION LOST **');\n        },\n        complete: () => {\n          // Set the result value to `true` because the request finished\n          // successfully.\n          this.config.buttons.close.dialogResult = true;\n          // Notify all subscribers.\n          this.finishEvent.emit(this.content.nativeElement.innerHTML);\n          // Append EOL message.\n          if (this.config.showCompletion) {\n            this.printTypeWriter('END OF LINE');\n          }\n        }\n      });\n  }\n\n  onStop(): void {\n    this.subscription?.unsubscribe();\n    this.rpcService\n      .stopTask(this.filename)\n      .pipe(\n        finalize(() => {\n          this.config.buttons.start.disabled = false;\n          this.config.buttons.stop.disabled = true;\n        })\n      )\n      .subscribe();\n  }\n\n  protected sanitizeConfig(): void {\n    this.config.icon = _.get(Icon, this.config.icon, this.config.icon);\n    _.defaultsDeep(this.config, {\n      autoScroll: true,\n      startOnInit: false,\n      showCompletion: true,\n      buttons: {\n        start: {\n          text: gettext('Start'),\n          hidden: false,\n          disabled: false,\n          autofocus: false,\n          class: 'omv-background-color-pair-primary'\n        },\n        stop: {\n          text: gettext('Stop'),\n          hidden: false,\n          disabled: true,\n          autofocus: false,\n          class: 'omv-background-color-pair-red'\n        },\n        close: {\n          text: gettext('Close'),\n          hidden: false,\n          disabled: false,\n          autofocus: false,\n          dialogResult: false\n        }\n      }\n    });\n    if (this.config.startOnInit) {\n      this.config.buttons.start.hidden = true;\n    }\n  }\n\n  private print(text: string, escape: boolean = false): void {\n    const nativeEl = this.content.nativeElement;\n    // Make sure we do not exceed a max. size of displayed\n    // content to keep the memory consumption low.\n    // Allow displaying up to 100.000 lines (80 char per line) of\n    // content, then reduce to 75.000 lines in one step (smaller\n    // steps may be repeated to often which is too costly).\n    // Note, if your task is crossing this border, please keep in\n    // mind that this dialog is not meant to be used for such\n    // excessive tasks.\n    if (nativeEl.innerHTML.length > 100000 * 80) {\n      // Search for the first line break after the specified\n      // position and cut it there if found.\n      const startSearch = nativeEl.innerHTML.length - 75000 * 80;\n      const pos = nativeEl.innerHTML.indexOf('\\n', startSearch);\n      nativeEl.innerHTML = nativeEl.innerHTML.slice(pos > 0 ? pos : startSearch);\n    }\n    // Strip ASCII escape codes and escape characters to\n    // HTML-safe sequences if necessary.\n    nativeEl.innerHTML += stripAnsi(escape ? format('{{ text | escape }}', { text }) : text);\n    if (this.config.autoScroll && _.isFunction(nativeEl.scroll)) {\n      nativeEl.scroll({ behavior: 'auto', top: nativeEl.scrollHeight });\n    }\n  }\n\n  private printTypeWriter(text: string): void {\n    from(['<br>', ...text, '<br><span class=\"omv-text-blink\">█</span>'])\n      .pipe(concatMap((value) => of(value).pipe(delay(25))))\n      .subscribe((value) => {\n        this.print(value);\n      });\n  }\n}\n","<h1 *ngIf=\"config.title\"\n    class=\"omv-display-flex omv-align-items-center\"\n    mat-dialog-title>\n  <mat-icon *ngIf=\"config.icon\"\n            class=\"omv-pr-h\"\n            svgIcon=\"{{ config.icon }}\">\n  </mat-icon>\n  {{ config.title | transloco }}\n</h1>\n<mat-progress-bar *ngIf=\"running\"\n                  mode=\"indeterminate\">\n</mat-progress-bar>\n<mat-dialog-content>\n  <div #content\n       class=\"omv-task-dialog-content omv-scrollable-xy omv-text-monospace omv-background-color-pair-terminal\">\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button *ngIf=\"!config.buttons.close.hidden\"\n          mat-flat-button\n          [class]=\"config.buttons.close.class\"\n          [mat-dialog-close]=\"config.buttons.close.dialogResult\"\n          [disabled]=\"config.buttons.close.disabled\"\n          [autofocus]=\"config.buttons.close.autofocus\">\n    {{ config.buttons.close.text | transloco }}\n  </button>\n  <button *ngIf=\"!config.buttons.stop.hidden\"\n          mat-flat-button\n          [class]=\"config.buttons.stop.class\"\n          [disabled]=\"config.buttons.stop.disabled\"\n          [autofocus]=\"config.buttons.stop.autofocus\"\n          (click)=\"onStop()\">\n    {{ config.buttons.stop.text | transloco }}\n  </button>\n  <button *ngIf=\"!config.buttons.start.hidden\"\n          mat-flat-button\n          [class]=\"config.buttons.start.class\"\n          [disabled]=\"config.buttons.start.disabled\"\n          [autofocus]=\"config.buttons.start.autofocus\"\n          (click)=\"onStart()\">\n    {{ config.buttons.start.text | transloco }}\n  </button>\n</mat-dialog-actions>\n","import { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[autocapitalize]' // eslint-disable-line\n})\nexport class AutocapitalizeDirective {\n  constructor(private elementRef: ElementRef) {}\n\n  @Input()\n  set autocapitalize(value: 'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters') {\n    this.elementRef.nativeElement.setAttribute('autocapitalize', value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Directive({\n  selector: '[autofocus]' // eslint-disable-line\n})\nexport class AutofocusDirective implements AfterViewInit {\n  private focus = true;\n\n  constructor(private elementRef: ElementRef) {}\n\n  @Input()\n  set autofocus(condition: any) {\n    this.focus =\n      condition !== false &&\n      condition !== 0 &&\n      condition !== undefined &&\n      condition !== null &&\n      condition !== 'false' &&\n      condition !== '0' &&\n      condition !== 'undefined' &&\n      condition !== 'null';\n  }\n\n  ngAfterViewInit() {\n    const el: HTMLInputElement = this.elementRef.nativeElement;\n    if (this.focus && _.isFunction(el.focus)) {\n      // Otherwise Angular throws error: Expression has changed after\n      // it was checked.\n      setTimeout(() => {\n        el.focus();\n      }, 100);\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { binaryUnit, toBytes } from '~/app/functions.helper';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[binaryUnit]'\n})\nexport class BinaryUnitDirective implements OnInit {\n  // The default unit used when the value does not contain a unit.\n  // Defaults to bytes (`B`).\n  @Input()\n  defaultUnit?: 'B' | 'KiB' | 'MiB' | 'GiB' | 'TiB' | 'PiB' | 'EiB' | 'ZiB' | 'YiB';\n\n  // The number of digits after the decimal point.\n  // Defaults to `0`.\n  @Input()\n  fractionDigits?: number;\n\n  private el: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef, private ngControl: NgControl) {\n    this.el = this.elementRef.nativeElement;\n  }\n\n  @HostListener('blur', ['$event.target.value'])\n  onBlur(value: string) {\n    this.setValue(value);\n  }\n\n  ngOnInit() {\n    this.defaultUnit = _.defaultTo(this.defaultUnit, 'B');\n    this.fractionDigits = _.defaultTo(this.fractionDigits, 0);\n    this.setValue(this.el.value);\n  }\n\n  setValue(value: string) {\n    if (/^[\\d.]+$/.test(value)) {\n      value += this.defaultUnit;\n    }\n    // Reformat input to preferred appearance.\n    const bytes = toBytes(value);\n    value = binaryUnit(bytes, this.fractionDigits);\n    if (!_.isEmpty(value)) {\n      this.el.value = value;\n      this.ngControl.control.setValue(value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AutocapitalizeDirective } from '~/app/shared/directives/autocapitalize.directive';\nimport { AutofocusDirective } from '~/app/shared/directives/autofocus.directive';\nimport { BinaryUnitDirective } from '~/app/shared/directives/binary-unit.directive';\nimport { ExternalLinkDirective } from '~/app/shared/directives/external-link.directive';\nimport { LoadingStateDirective } from '~/app/shared/directives/loading-state.directive';\nimport { NativeElementDirective } from '~/app/shared/directives/native-element.directive';\n\n@NgModule({\n  declarations: [\n    AutocapitalizeDirective,\n    AutofocusDirective,\n    NativeElementDirective,\n    BinaryUnitDirective,\n    LoadingStateDirective,\n    ExternalLinkDirective\n  ],\n  exports: [\n    AutocapitalizeDirective,\n    AutofocusDirective,\n    NativeElementDirective,\n    BinaryUnitDirective,\n    LoadingStateDirective,\n    ExternalLinkDirective\n  ],\n  imports: [CommonModule]\n})\nexport class DirectivesModule {}\n","import { Directive, HostBinding, Input, OnChanges } from '@angular/core';\n\n@Directive({\n  selector: 'a[href]' // eslint-disable-line\n})\nexport class ExternalLinkDirective implements OnChanges {\n  @HostBinding('attr.href')\n  hrefAttr = '';\n\n  @HostBinding('attr.rel')\n  relAttr = '';\n\n  @HostBinding('attr.target')\n  targetAttr = '';\n\n  @Input()\n  href: string;\n\n  ngOnChanges(): void {\n    this.hrefAttr = this.href;\n    if (this.isExternal()) {\n      this.relAttr = 'noopener';\n      this.targetAttr = '_blank';\n    }\n  }\n\n  private isExternal() {\n    return !this.href.includes(location.hostname);\n  }\n}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n/**\n * A directive that adds the classes 'loading', 'loaded' or 'error'\n * to the image element depending on the loading state.\n */\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'img[loadingState]'\n})\nexport class LoadingStateDirective {\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('loadstart') onLoadStart() {\n    this.renderer.addClass(this.elementRef.nativeElement, 'loading');\n  }\n\n  @HostListener('load') onLoad() {\n    this.renderer.removeClass(this.elementRef.nativeElement, 'loading');\n    this.renderer.addClass(this.elementRef.nativeElement, 'loaded');\n  }\n\n  @HostListener('error') onError() {\n    this.renderer.removeClass(this.elementRef.nativeElement, 'loading');\n    this.renderer.addClass(this.elementRef.nativeElement, 'error');\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport * as _ from 'lodash';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[formControlName]'\n})\nexport class NativeElementDirective implements OnInit {\n  constructor(private elementRef: ElementRef, private control: NgControl) {}\n\n  ngOnInit(): void {\n    if (this.control.control) {\n      _.set(this.control.control, 'nativeElement', this.elementRef.nativeElement);\n    }\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n// eslint-disable-next-line no-shadow\nexport enum Icon {\n  user = 'mdi:account',\n  users = 'mdi:account-multiple',\n  group = 'mdi:account-group',\n  password = 'mdi:lock',\n  home = 'mdi:home',\n  save = 'mdi:content-save',\n  add = 'mdi:plus-circle',\n  remove = 'mdi:minus-circle',\n  edit = 'mdi:pencil',\n  delete = 'mdi:delete',\n  copy = 'mdi:content-copy',\n  cancel = 'mdi:cancel',\n  clear = 'mdi:close',\n  show = 'mdi:eye',\n  undo = 'mdi:undo',\n  reload = 'mdi:reload',\n  reset = 'mdi:refresh',\n  import = 'mdi:import',\n  check = 'mdi:check',\n  checkBoxMarked = 'mdi:checkbox-marked-outline',\n  checkBoxBlank = 'mdi:checkbox-blank-outline',\n  plus = 'mdi:plus',\n  minus = 'mdi:minus',\n  start = 'mdi:play',\n  stop = 'mdi:stop',\n  pause = 'mdi:pause',\n  skipNext = 'mdi:skip-next',\n  skipPrevious = 'mdi:skip-previous',\n  eject = 'mdi:eject',\n  success = 'mdi:check',\n  error = 'mdi:close-circle',\n  information = 'mdi:information-outline',\n  warning = 'mdi:alert',\n  help = 'mdi:help',\n  question = 'mdi:help-circle',\n  harddisk = 'mdi:harddisk',\n  arrowLeft = 'mdi:arrow-left',\n  arrowRight = 'mdi:arrow-right',\n  arrowUp = 'mdi:arrow-up',\n  arrowDown = 'mdi:arrow-down',\n  chevronLeft = 'mdi:chevron-left',\n  chevronRight = 'mdi:chevron-right',\n  chevronUp = 'mdi:chevron-up',\n  chevronDown = 'mdi:chevron-down',\n  power = 'mdi:power',\n  logout = 'mdi:logout-variant',\n  reboot = 'mdi:repeat',\n  standby = 'mdi:pause',\n  shutdown = 'mdi:power',\n  navicon = 'mdi:navicon',\n  cogs = 'mdi:cogs',\n  settings = 'mdi:cog',\n  clock = 'mdi:clock-outline',\n  network = 'mdi:lan',\n  email = 'mdi:email',\n  menu = 'mdi:menu',\n  dotmenu = 'mdi:dots-vertical',\n  bell = 'mdi:bell',\n  apps = 'mdi:apps',\n  laptop = 'mdi:laptop',\n  server = 'mdi:server',\n  nas = 'mdi:nas',\n  key = 'mdi:key',\n  share = 'mdi:share-variant',\n  heartPulse = 'mdi:heart-pulse',\n  tune = 'mdi:tune',\n  ssl = 'mdi:lock',\n  ssh = 'mdi:ssh',\n  ftp = 'mdi:server-network',\n  smb = 'mdi:microsoft-windows',\n  plugin = 'mdi:puzzle',\n  search = 'mdi:magnify',\n  eraser = 'mdi:eraser',\n  table = 'mdi:table',\n  tip = 'mdi:lightbulb-on-outline',\n  details = 'mdi:details',\n  expand = 'mdi:arrow-expand',\n  collapse = 'mdi:arrow-collapse',\n  folder = 'mdi:folder',\n  console = 'mdi:console',\n  close = 'mdi:window-close',\n  restore = 'mdi:restore',\n  link = 'mdi:link-variant',\n  download = 'mdi:download'\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\n// eslint-disable-next-line no-shadow\nexport enum NotificationType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n  info = 'info'\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport {\n  AbstractControl,\n  FormArray,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { debounceTime } from 'rxjs/operators';\nimport validator from 'validator';\n\nimport { format, formatDeep, toBytes } from '~/app/functions.helper';\nimport { Constraint } from '~/app/shared/models/constraint.type';\nimport { ConstraintService } from '~/app/shared/services/constraint.service';\n\nconst regExp = {\n  /* eslint-disable max-len */\n  // Taken from Debian adduser command.\n  userName: /^[_.A-Za-z0-9][-\\@_.A-Za-z0-9]*\\$?$/,\n  groupName: /^[a-zA-Z0-9\\-\\.]+$/,\n  // We are using the SMB/CIFS file/directory naming convention for this:\n  // All characters are legal in the basename and extension except the\n  // space character (0x20) and:\n  // \"./\\[]:+|<>=;,*?\n  // A share name or server or workstation name SHOULD not begin with a\n  // period (“.”) nor should it include two adjacent periods (“..”).\n  // References:\n  // http://tools.ietf.org/html/draft-leach-cifs-v1-spec-01\n  // http://msdn.microsoft.com/en-us/library/aa365247%28VS.85%29.aspx\n  shareName: /^[^.]([^\"/\\\\\\[\\]:+|<>=;,*?. ]+){0,1}([.][^\"/\\\\\\[\\]:+|<>=;,*?. ]+){0,}$/,\n  ipv4NetCidr:\n    /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/(3[0-2]|[0-2]?[0-9])$/,\n  ipv6NetCidr: /^(?:[a-f0-9]{1,4}:){7}[a-f0-9]{1,4}\\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9])$/i,\n  hostName: /^[a-zA-Z]([-a-zA-Z0-9]{0,61}[a-zA-Z0-9]){0,1}$/,\n  // See http://shauninman.com/archive/2006/05/08/validating_domain_names\n  domainName:\n    /^[a-zA-Z0-9]([-a-zA-Z0-9]{0,61}[a-zA-Z0-9])?([.][a-zA-Z0-9]([-a-zA-Z0-9]{0,61}[a-zA-Z0-9])?)*$/,\n  // https://github.com/samba-team/samba/blob/samba-4.13.13/python/samba/__init__.py#L317\n  netbiosName: /^[\\w !#$%&'()\\-.@^_{}~]{1,15}$/,\n  port: /^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$/,\n  numeric: /^[-]?\\d+$/,\n  decimal: /^[-]?\\d+(.\\d+)?$/,\n  time: /^\\d{2}:\\d{2}:\\d{2}$/,\n  // See https://tools.ietf.org/html/rfc4716#section-3.4\n  sshPubKeyRfc4716:\n    /^---- BEGIN SSH2 PUBLIC KEY ----(\\n|\\r|\\f)((.+)?((\\n|\\r|\\f).+)*)(\\n|\\r|\\f)---- END SSH2 PUBLIC KEY ----[\\n\\r\\f]*$/,\n  sshPubKeyOpenSsh:\n    /^(sk-ssh-ed25519@openssh\\.com|ssh-(rsa|ed25519)) AAAA[0-9A-Za-z+/]+[=]{0,3}\\s*(.+)?$/,\n  pgpPubKey:\n    /^-----BEGIN PGP PUBLIC KEY BLOCK-----(\\n|\\r|\\f)((.+)?((\\n|\\r|\\f).+)*)(\\n|\\r|\\f)-----END PGP PUBLIC KEY BLOCK-----[\\n\\r\\f]*$/,\n  netmask:\n    /^(128|192|224|24[08]|25[245].0.0.0)|(255.(0|128|192|224|24[08]|25[245]).0.0)|(255.255.(0|128|192|224|24[08]|25[245]).0)|(255.255.255.(0|128|192|224|24[08]|252))$/,\n  // See https://www.w3schools.com/Jsref/jsref_regexp_wordchar.asp\n  wordChars: /^[\\w]+$/,\n  binaryUnit: /^\\d+(.\\d+)?\\s?(b|[kmgtpezy]ib)$/i,\n  macAddress: /^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}$/\n};\n\nconst isEmptyInputValue = (value: any): boolean => _.isNull(value) || value.length === 0;\n\nconst getControlName = (control: AbstractControl): string | undefined => {\n  if (!control || !control.parent) {\n    return undefined;\n  }\n  return _.keys(control.parent.controls).find(\n    (key) => control === _.get(control.parent.controls, key)\n  );\n};\n\n/**\n * Get the data on the top form.\n *\n * @param control The control to start searching for the top most form.\n * @return The raw values of the top form.\n */\nconst getFormValues = (control: AbstractControl): Array<any> => {\n  if (!control) {\n    return [];\n  }\n  let parent: FormGroup | FormArray | null = control.parent;\n  while (parent?.parent) {\n    parent = parent.parent;\n  }\n  return parent ? parent.getRawValue() : [];\n};\n\nexport class CustomValidators {\n  /**\n   * Validator that requires the control have a non-empty value if the\n   * specified constraint succeeds.\n   *\n   * @param constraint The constraint to process.\n   * @returns A validator function that returns an error map with the\n   *   `required` property if the validation constraint succeeds and\n   *   the control's value is empty, otherwise `null`.\n   */\n  static requiredIf(constraint: Constraint): ValidatorFn {\n    let hasSubscribed = false;\n    // Determine the properties involved in the constraint.\n    const props = ConstraintService.getProps(constraint);\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!control.parent) {\n        return null;\n      }\n      // Ensure to not subscribe to changes of the own control.\n      _.pull(props, getControlName(control));\n      // Subscribe to value changes for all fields involved.\n      if (!hasSubscribed) {\n        props.forEach((path) => {\n          control.parent\n            .get(path)\n            .valueChanges.pipe(debounceTime(5))\n            .subscribe(() => {\n              control.updateValueAndValidity({ emitEvent: false });\n            });\n        });\n        hasSubscribed = true;\n      }\n      const fulfilled = ConstraintService.test(constraint, getFormValues(control));\n      if (!fulfilled) {\n        return null;\n      }\n      return isEmptyInputValue(control.value) ? { required: true } : null;\n    };\n  }\n\n  /**\n   * Validator that requires the specified constraint to be truthy.\n   * The specified error code and data is applied if the constraint\n   * is falsy.\n   *\n   * @param constraint The constraint to process.\n   * @param errorCode The error code, e.g. 'required', 'maxLength',\n   *   'min' or any code of an already existing validator.\n   *   Defaults to 'constraint'.\n   * @param context The form page context which contains the route\n   *   configuration and params.\n   * @param errorData The error data. For most of the existing\n   *   validators this is a boolean `true`. But it can also contain\n   *   an error message. In this case the message can be a tokenized\n   *   string that will be formatted using the values from the form.\n   * @returns A validator function that returns an error map with the\n   *   specified error property if the validation constraint fails,\n   *   otherwise `null`.\n   */\n  static constraint(\n    constraint: Constraint,\n    context: Record<string, any>,\n    errorCode?: string,\n    errorData?: any\n  ): ValidatorFn {\n    let hasSubscribed = false;\n    // Determine the properties involved in the constraint.\n    const props = ConstraintService.getProps(constraint);\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!control.parent) {\n        return null;\n      }\n      // Ensure to not subscribe to changes of the own control.\n      _.pull(props, getControlName(control));\n      // Subscribe to value changes for all fields involved.\n      if (!hasSubscribed) {\n        props.forEach((path) => {\n          control.parent\n            .get(path)\n            .valueChanges.pipe(debounceTime(5))\n            .subscribe(() => {\n              control.updateValueAndValidity({ emitEvent: false });\n            });\n        });\n        hasSubscribed = true;\n      }\n      const values = _.merge({}, context, getFormValues(control));\n      const fulfilled = ConstraintService.test(constraint, values);\n      if (fulfilled) {\n        return null;\n      }\n      const error = {};\n      _.set(\n        error,\n        _.defaultTo(errorCode, 'constraint'),\n        _.defaultTo(formatDeep(errorData, values), true)\n      );\n      return error;\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  static pattern(pattern: string | RegExp | Function, errorData?: any): ValidatorFn {\n    let test: (value: any) => boolean;\n    if (_.isString(pattern)) {\n      if (!_.startsWith(pattern, '^')) {\n        pattern = `^${pattern}`;\n      }\n      if (!_.endsWith(pattern, '$')) {\n        pattern += '$';\n      }\n      test = (value: any) => new RegExp(pattern as string).test(value);\n    } else if (_.isRegExp(pattern)) {\n      test = (value: any) => (pattern as RegExp).test(value);\n    } else if (_.isFunction(pattern)) {\n      test = pattern;\n    } else {\n      return Validators.nullValidator;\n    }\n    return (control: AbstractControl): ValidationErrors | null => {\n      let value = control.value;\n      // Don't validate empty values to allow optional controls.\n      if (isEmptyInputValue(value)) {\n        return null;\n      }\n      // Ensure that the value is a string unless the pattern is a\n      // function, in which case it can take care of it itself.\n      if (!_.isFunction(pattern) && !_.isString(value)) {\n        value = _.toString(value);\n      }\n      return test(value)\n        ? null\n        : {\n            pattern: _.defaultTo(\n              errorData,\n              format(gettext('The value does not match the pattern /{{ pattern }}/.'), {\n                pattern: pattern.toString()\n              })\n            )\n          };\n    };\n  }\n\n  /**\n   * Validator that requires the control's value to pass the specified test.\n   *\n   * @param name The name of the type to be tested, e.g. `username`,\n   *   `email` or `ip`.\n   * @returns A validator function that returns an error map with the\n   *   `pattern` property if the validation check fails, otherwise `null`.\n   */\n  static patternType(name: string): ValidatorFn {\n    switch (name) {\n      case 'userName':\n        return CustomValidators.pattern(regExp.userName, gettext('Invalid user name.'));\n      case 'groupName':\n        return CustomValidators.pattern(regExp.groupName, gettext('Invalid group name.'));\n      case 'shareName':\n        return CustomValidators.pattern(\n          regExp.shareName,\n          gettext(\n            'This field contains invalid characters, e.g. a blank or \"/[]:+|<>=;,*? character.'\n          )\n        );\n      case 'email':\n        return CustomValidators.pattern(\n          (value) => validator.isEmail(value),\n          gettext('This field should be an email address.')\n        );\n      case 'macAddress':\n        return CustomValidators.pattern(\n          regExp.macAddress,\n          gettext('This field should be a MAC address, e.g. 00:80:41:ae:fd:7e.')\n        );\n      case 'ipv4':\n        return CustomValidators.pattern(\n          (value) => validator.isIP(value, 4),\n          gettext('This field should be an IPv4 address.')\n        );\n      case 'ipv6':\n        return CustomValidators.pattern(\n          (value) => validator.isIP(value, 6),\n          gettext('This field should be an IPv6 address.')\n        );\n      case 'ip':\n        return CustomValidators.pattern(\n          (value) => validator.isIP(value),\n          gettext('This field should be an IP address.')\n        );\n      case 'ipList':\n        return CustomValidators.pattern((value) => {\n          const parts = _.split(value, /[,;]/);\n          return parts.every((part) => {\n            part = _.trim(part);\n            return validator.isIP(part);\n          });\n        }, gettext('This field should be a list of IP addresses separated by <,> or <;>.'));\n      case 'ipNetCidr':\n        return CustomValidators.pattern(\n          (value) => regExp.ipv4NetCidr.test(value) || regExp.ipv6NetCidr.test(value),\n          gettext('This field should be a IP network address in CIDR notation.')\n        );\n      case 'hostName':\n        return CustomValidators.pattern(regExp.hostName, gettext('Invalid host name.'));\n      case 'hostNameIpNetCidr':\n        return CustomValidators.pattern(\n          (value) =>\n            regExp.hostName.test(value) ||\n            regExp.ipv4NetCidr.test(value) ||\n            regExp.ipv6NetCidr.test(value),\n          gettext('This field should be a host name or an IP address in CIDR notation.')\n        );\n      case 'hostNameIpNetCidrList':\n        return CustomValidators.pattern((value) => {\n          const parts = _.split(value, /[,;]/);\n          return parts.every((part) => {\n            part = _.trim(part);\n            return (\n              regExp.hostName.test(part) ||\n              regExp.ipv4NetCidr.test(part) ||\n              regExp.ipv6NetCidr.test(part)\n            );\n          });\n        }, gettext('This field should be a list of host names or IP addresses in CIDR notation separated by <,> or <;>.'));\n      case 'domainName':\n        return CustomValidators.pattern(regExp.domainName, gettext('Invalid domain name.'));\n      case 'domainNameList':\n        return CustomValidators.pattern((value) => {\n          const parts = _.split(value, /[,;]/);\n          return parts.every((part) => {\n            part = _.trim(part);\n            return regExp.domainName.test(part);\n          });\n        }, gettext('This field should be a list of domain names or IP addresses separated by <,> or <;>.'));\n      case 'domainNameIp':\n        return CustomValidators.pattern(\n          (value) => regExp.domainName.test(value) || validator.isIP(value),\n          gettext('This field should be a domain name or an IP address.')\n        );\n      case 'domainNameIpList':\n        return CustomValidators.pattern((value) => {\n          const parts = _.split(value, /[,;]/);\n          return parts.every((part) => {\n            part = _.trim(part);\n            return regExp.domainName.test(part) || validator.isIP(part);\n          });\n        }, gettext('This field should be a list of domain names or IP addresses.'));\n      case 'netbiosName':\n        return CustomValidators.pattern(regExp.netbiosName, gettext('Invalid NetBIOS name.'));\n      case 'port':\n        return CustomValidators.pattern(\n          regExp.port,\n          gettext('This field should be a network port in the range of 1 to 65535.')\n        );\n      case 'numeric':\n      case 'integer': // deprecated\n        return CustomValidators.pattern(\n          regExp.numeric,\n          gettext('This field should contain a numeric value.')\n        );\n      case 'decimal':\n      case 'float': // deprecated\n        return CustomValidators.pattern(\n          regExp.decimal,\n          gettext('This field should contain a decimal value.')\n        );\n      case 'time':\n        return CustomValidators.pattern(\n          regExp.time,\n          gettext('This field must have the format <hh:mm:ss>.')\n        );\n      case 'sshPubKey':\n        return CustomValidators.pattern(\n          (value) => regExp.sshPubKeyOpenSsh.test(value) || regExp.sshPubKeyRfc4716.test(value),\n          gettext('Invalid SSH public key (OpenSSH or RFC 4716 format)')\n        );\n      case 'sshPubKeyRfc4716':\n        return CustomValidators.pattern(\n          regExp.sshPubKeyRfc4716,\n          gettext('Invalid SSH public key (RFC 4716 format).')\n        );\n      case 'sshPubKeyOpenSsh':\n        return CustomValidators.pattern(\n          regExp.sshPubKeyOpenSsh,\n          gettext('Invalid SSH public key (OpenSSH format).')\n        );\n      case 'pgpPubKey':\n        return CustomValidators.pattern(regExp.pgpPubKey, gettext('Invalid PGP public key.'));\n      case 'netmask':\n        return CustomValidators.pattern(\n          regExp.netmask,\n          gettext('This field should be a netmask within the range 128.0.0.0 - 255.255.255.252.')\n        );\n      case 'wordChars':\n        return CustomValidators.pattern(\n          regExp.wordChars,\n          gettext(\n            'This field contains invalid characters, only alphanumeric characters and underscore are allowed.'\n          )\n        );\n      case 'binaryUnit':\n        return CustomValidators.pattern(\n          regExp.binaryUnit,\n          gettext('This field should contain a number with a binary prefix.')\n        );\n    }\n    throw new Error(`Unknown pattern ${name}!`);\n    // return Validators.nullValidator;\n  }\n\n  static minBinaryUnit(min: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n        return null;\n      }\n      const value = toBytes(control.value);\n      if (_.isString(value) || isEmptyInputValue(value)) {\n        return null;\n      }\n      return !isNaN(value) && value < min ? { min: { min, actual: value } } : null;\n    };\n  }\n\n  static maxBinaryUnit(max: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n        return null;\n      }\n      const value = toBytes(control.value);\n      if (_.isString(value) || isEmptyInputValue(value)) {\n        return null;\n      }\n      return !isNaN(value) && value > max ? { max: { max, actual: value } } : null;\n    };\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { DatatableData } from '~/app/shared/models/datatable-data.type';\n\nexport class DatatableSelection {\n  selected: DatatableData[] = [];\n\n  constructor() {}\n\n  get length(): number {\n    return this.selected.length;\n  }\n\n  get hasSelection(): boolean {\n    return this.length > 0;\n  }\n\n  get hasSingleSelection(): boolean {\n    return this.length === 1;\n  }\n\n  get hasMultiSelection(): boolean {\n    return this.length > 1;\n  }\n\n  set(selected: DatatableData[]): void {\n    this.selected = selected;\n  }\n\n  /**\n   * Clear the selection.\n   */\n  clear(): void {\n    this.selected = [];\n  }\n\n  /**\n   * Get the first selection.\n   */\n  first(): DatatableData | null {\n    if (this.hasSelection) {\n      return this.selected[0];\n    }\n    return null;\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\n\nexport class Notification {\n  private static nextId = 1;\n\n  public readonly id: number;\n  public timestamp: string;\n\n  constructor(\n    public type: NotificationType = NotificationType.info,\n    public title?: string,\n    public message?: string,\n    public traceback?: string,\n    public url?: string,\n    public dismissible: boolean = true\n  ) {\n    this.id = Notification.nextId++;\n    this.timestamp = new Date().toJSON(); // ISO 8601\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport * as _ from 'lodash';\n\nexport type Role = 'admin' | 'user';\n\n// eslint-disable-next-line no-shadow\nexport enum Roles {\n  admin = 'admin',\n  user = 'user'\n}\n\nexport type Permissions = {\n  role?: Array<Role>;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Permissions = {\n  fromObject: (o: Record<any, any>): Permissions => {\n    let role = _.get(o, 'role', []);\n    if (_.isString(role)) {\n      role = [role];\n    }\n    return { ...o, role };\n  },\n\n  fromJSON: (text: string): Permissions => Permissions.fromObject(JSON.parse(text)),\n\n  toJSON: (permissions: Permissions): string => JSON.stringify(permissions),\n\n  /**\n   * Check if the given permissions match each other.\n   *\n   * @param lh The permissions to validate from.\n   * @param rh The permissions to validate against.\n   */\n  validate: (lh: Permissions, rh: Permissions): boolean => {\n    if (_.isEmpty(lh.role) || _.isEmpty(rh.role)) {\n      return false;\n    }\n    const missedRoles = _.difference(rh.role, lh.role);\n    return !missedRoles.length ? true : false;\n  },\n\n  /**\n   * Check if the given permissions\n   *\n   * @param permissions The permissions to check.\n   * @param role The role to check for.\n   */\n  hasRole: (permissions: Permissions, role: Role): boolean => permissions.role.includes(role)\n};\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport * as _ from 'lodash';\n\nimport { formatDeep } from '~/app/functions.helper';\n\nexport type RpcListResponse = {\n  data: Array<any>;\n  total: number;\n};\n\nexport type RpcObjectResponse = Record<string, any>;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const RpcObjectResponse = {\n  transform: (response: RpcObjectResponse, config: Record<string, string>): RpcObjectResponse => {\n    const tmp = formatDeep(config, response);\n    _.merge(response, tmp);\n    return response;\n  },\n\n  filter: (\n    response: RpcObjectResponse,\n    keys: string[],\n    mode: 'pick' | 'omit' = 'pick'\n  ): RpcObjectResponse => {\n    switch (mode) {\n      case 'pick':\n        response = _.pick(response, keys);\n        break;\n      case 'omit':\n        response = _.omit(response, keys);\n        break;\n    }\n    return response;\n  }\n};\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'array'\n})\nexport class ArrayPipe implements PipeTransform {\n  /**\n   * Convert the given value into an array.\n   *\n   * @param value The value to process.\n   * @param force Convert the specified value to an array, either it is\n   *              already an array.\n   */\n  transform(value: any, force = false): any[] {\n    let result = value;\n    if (!_.isArray(value) || (_.isArray(value) && force)) {\n      result = [value];\n    }\n    return result;\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { binaryUnit } from '~/app/functions.helper';\n\n/**\n * Convert a number of bytes into the highest possible binary unit.\n * Example: 2097152 will become 2.00 MiB\n */\n@Pipe({\n  name: 'binaryUnit'\n})\nexport class BinaryUnitPipe implements PipeTransform {\n  /**\n   * @param value The number of bytes to be converted.\n   * @param fractionDigits The number of digits after the decimal point.\n   *   Defaults to 2.\n   * @param maxUnit The max. unit to be used, e.g. 'KiB' or 'MiB'.\n   * @return The converted value, e.g. '2.50 MiB'. Negative or empty\n   *   input values will return an empty string.\n   */\n  transform(value: number | string, fractionDigits?: number, maxUnit?: string): string {\n    if (_.isString(value) && _.isEmpty(value)) {\n      return '';\n    }\n    return binaryUnit(_.toNumber(value), fractionDigits, maxUnit);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'br2nl'\n})\nexport class Br2nlPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!_.isString(value)) {\n      return value;\n    }\n    return value.replace(/<br[ \\t]*\\/?>/g, '\\n');\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'count'\n})\nexport class CountPipe implements PipeTransform {\n  transform(value: unknown): unknown {\n    if (!_.isString(value) && !_.isArray(value) && !_.isObject(value)) {\n      return value;\n    }\n    if (_.isObject(value)) {\n      return Object.keys(value).length;\n    }\n    return value.length;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { cron2human } from '~/app/functions.helper';\n\n@Pipe({\n  name: 'cron2human'\n})\nexport class Cron2humanPipe implements PipeTransform {\n  transform(value: string): string {\n    return cron2human(value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'defaultTo'\n})\nexport class DefaultToPipe implements PipeTransform {\n  transform(value: any, defaultValue?: any): any {\n    return _.isUndefined(value) || _.isNull(value) || _.isNaN(value) || value === ''\n      ? defaultValue\n      : value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'encodeUriComponent'\n})\nexport class EncodeUriComponentPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!_.isString(value) && !_.isNumber(value) && !_.isBoolean(value)) {\n      return value;\n    }\n    return encodeURIComponent(value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'escapeHtml'\n})\nexport class EscapeHtmlPipe implements PipeTransform {\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in string to\n   * their corresponding HTML entities.\n   *\n   * @param value The value to be converted. If it is not a string,\n   *   then the value will be bypassed without converting special HTML\n   *   characters to their corresponding HTML entities.\n   * @return The converted value if it is a string, otherwise the\n   *   origin value will be bypassed.\n   */\n  transform(value: any): any {\n    if (_.isString(value)) {\n      return _.escape(value);\n    }\n    return value;\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'httpErrorResponse'\n})\nexport class HttpErrorResponsePipe implements PipeTransform {\n  /**\n   * Extract the specified property from the given HttpErrorResponse\n   * object.\n   *\n   * @param value The HttpErrorResponse object.\n   * @param output The specified property.\n   */\n  transform(value: HttpErrorResponse, output?: any): any {\n    let result: any;\n    switch (output) {\n      case 'statusText':\n        result = _.get(value, 'statusText', '');\n        break;\n      case 'url':\n        result = value.url;\n        break;\n      case 'status':\n        result = value.status;\n        break;\n      case 'trace':\n        if (_.isObjectLike(value) && _.isObjectLike(value.error)) {\n          result = _.get(value.error, 'trace', '');\n        }\n        break;\n      case 'message':\n      default:\n        if (_.isObjectLike(value) && _.isObjectLike(value.error)) {\n          result = _.get(value.error, 'message', '');\n        } else {\n          result = _.get(value, 'message', '');\n        }\n        break;\n    }\n    return result;\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'join'\n})\nexport class JoinPipe implements PipeTransform {\n  /**\n   * Adds all the elements of an array separated by the specified\n   * separator string.\n   *\n   * @param value The array to process.\n   * @param separator A string used to separate one element of an\n   *   array from the next in the resulting String. If omitted,\n   *   the array elements are separated with ', '.\n   */\n  transform(value: Array<any>, separator?: string): string {\n    return value.join(separator ? separator : ', ');\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { toLocaleDate } from '~/app/functions.helper';\n\n@Pipe({\n  name: 'localeDate',\n  pure: false\n})\nexport class LocaleDatePipe implements PipeTransform {\n  /**\n   * Convert the specified date/time appropriate to the host environment's\n   * current locale or into relative time like '2 hours ago'.\n   *\n   * @param value The date/time value. If it is a number, a UNIX epoch\n   *   timestamp is assumed.\n   * @param format The format to use, e.g. 'date', 'time', 'datetime'\n   *   or 'relative'. Defaults to 'date'.\n   * @params options Additional options.\n   * @return The time in the given format or an empty string on failure.\n   */\n  transform(\n    value: Date | string | number,\n    format?: 'relative' | 'datetime' | 'time' | 'date',\n    options?: any\n  ): any {\n    return toLocaleDate(value, format, options);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Icon } from '~/app/shared/enum/icon.enum';\n\n@Pipe({\n  name: 'mapIconEnum'\n})\nexport class MapIconEnumPipe implements PipeTransform {\n  transform(value: string, defaultValue?: string): string {\n    // Map icon from 'foo' to 'mdi:foo' if necessary.\n    return _.get(Icon, value, defaultValue ?? value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'map'\n})\nexport class MapPipe implements PipeTransform {\n  transform(value: string | number | boolean, map?: Record<any, any>): any {\n    if (!_.isPlainObject(map)) {\n      return value;\n    }\n    // @ts-ignore\n    return _.get(map, value, value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'max'\n})\nexport class MaxPipe implements PipeTransform {\n  transform(value: number, maxValue: number): number {\n    return Math.max(value, maxValue);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'nl2br'\n})\nexport class Nl2brPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!_.isString(value)) {\n      return value;\n    }\n    return value.replace(/\\r\\n|\\n/g, '<br>\\n');\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { notAvailable } from '~/app/functions.helper';\n\n@Pipe({\n  name: 'notAvailable'\n})\nexport class NotAvailablePipe implements PipeTransform {\n  transform(value: any, text?: string): any {\n    return notAvailable(value, text);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ArrayPipe } from '~/app/shared/pipes/array.pipe';\nimport { BinaryUnitPipe } from '~/app/shared/pipes/binary-unit.pipe';\nimport { Br2nlPipe } from '~/app/shared/pipes/br2nl.pipe';\nimport { CountPipe } from '~/app/shared/pipes/count.pipe';\nimport { Cron2humanPipe } from '~/app/shared/pipes/cron2human.pipe';\nimport { DefaultToPipe } from '~/app/shared/pipes/default-to.pipe';\nimport { EncodeUriComponentPipe } from '~/app/shared/pipes/encode-uri-component.pipe';\nimport { EscapeHtmlPipe } from '~/app/shared/pipes/escape-html.pipe';\nimport { HttpErrorResponsePipe } from '~/app/shared/pipes/http-error-response.pipe';\nimport { JoinPipe } from '~/app/shared/pipes/join.pipe';\nimport { LocaleDatePipe } from '~/app/shared/pipes/locale-date.pipe';\nimport { MapPipe } from '~/app/shared/pipes/map.pipe';\nimport { MapIconEnumPipe } from '~/app/shared/pipes/map-icon-enum.pipe';\nimport { MaxPipe } from '~/app/shared/pipes/max.pipe';\nimport { Nl2brPipe } from '~/app/shared/pipes/nl2br.pipe';\nimport { NotAvailablePipe } from '~/app/shared/pipes/not-available.pipe';\nimport { PreventHtmlPipe } from '~/app/shared/pipes/prevent-html.pipe';\nimport { ReplacePipe } from '~/app/shared/pipes/replace.pipe';\nimport { SanitizeHtmlPipe } from '~/app/shared/pipes/sanitize-html.pipe';\nimport { SortPipe } from '~/app/shared/pipes/sort.pipe';\nimport { SplitPipe } from '~/app/shared/pipes/split.pipe';\nimport { TemplatePipe } from '~/app/shared/pipes/template.pipe';\nimport { ToBooleanPipe } from '~/app/shared/pipes/to-boolean.pipe';\nimport { TruncatePipe } from '~/app/shared/pipes/truncate.pipe';\nimport { TrustHtmlPipe } from '~/app/shared/pipes/trust-html.pipe';\nimport { UpperFirstPipe } from '~/app/shared/pipes/upper-first.pipe';\n\n@NgModule({\n  declarations: [\n    ToBooleanPipe,\n    LocaleDatePipe,\n    TruncatePipe,\n    NotAvailablePipe,\n    DefaultToPipe,\n    JoinPipe,\n    BinaryUnitPipe,\n    HttpErrorResponsePipe,\n    MapPipe,\n    ArrayPipe,\n    TemplatePipe,\n    TrustHtmlPipe,\n    UpperFirstPipe,\n    MaxPipe,\n    MapIconEnumPipe,\n    SanitizeHtmlPipe,\n    EncodeUriComponentPipe,\n    ReplacePipe,\n    Br2nlPipe,\n    Nl2brPipe,\n    PreventHtmlPipe,\n    SortPipe,\n    CountPipe,\n    SplitPipe,\n    Cron2humanPipe,\n    EscapeHtmlPipe\n  ],\n  imports: [CommonModule],\n  exports: [\n    ToBooleanPipe,\n    LocaleDatePipe,\n    TruncatePipe,\n    NotAvailablePipe,\n    DefaultToPipe,\n    JoinPipe,\n    BinaryUnitPipe,\n    HttpErrorResponsePipe,\n    MapPipe,\n    MapIconEnumPipe,\n    ArrayPipe,\n    TemplatePipe,\n    TrustHtmlPipe,\n    UpperFirstPipe,\n    MaxPipe,\n    SanitizeHtmlPipe,\n    EncodeUriComponentPipe,\n    ReplacePipe,\n    Br2nlPipe,\n    Nl2brPipe,\n    PreventHtmlPipe,\n    SortPipe,\n    CountPipe,\n    SplitPipe,\n    Cron2humanPipe,\n    EscapeHtmlPipe\n  ],\n  providers: [\n    ToBooleanPipe,\n    LocaleDatePipe,\n    TruncatePipe,\n    NotAvailablePipe,\n    DefaultToPipe,\n    JoinPipe,\n    BinaryUnitPipe,\n    HttpErrorResponsePipe,\n    MapPipe,\n    MapIconEnumPipe,\n    ArrayPipe,\n    TemplatePipe,\n    TrustHtmlPipe,\n    UpperFirstPipe,\n    MaxPipe,\n    SanitizeHtmlPipe,\n    EncodeUriComponentPipe,\n    ReplacePipe,\n    Br2nlPipe,\n    Nl2brPipe,\n    PreventHtmlPipe,\n    SortPipe,\n    CountPipe,\n    SplitPipe,\n    Cron2humanPipe,\n    EscapeHtmlPipe\n  ]\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'preventHtml'\n})\nexport class PreventHtmlPipe implements PipeTransform {\n  /**\n   * This pipe will return `null` if the content contains HTML tags.\n   */\n  transform(value: any): any {\n    if (_.isString(value) && this.isHtml(value)) {\n      return null;\n    }\n    return value;\n  }\n\n  private isHtml(text: string): boolean {\n    // Keep it simple here; we don't want to use an external NPM package\n    // for such a trivial thing.\n    // Note, it is not expected that this pipe has to process very complex\n    // content.\n    // Regular expression was found at https://stackoverflow.com/a/15459273.\n    // eslint-disable-next-line max-len\n    return /<(br|basefont|hr|input|source|frame|param|area|meta|!--|col|link|option|base|img|wbr|!DOCTYPE).*?>|<(a|abbr|acronym|address|applet|article|aside|audio|b|bdi|bdo|big|blockquote|body|button|canvas|caption|center|cite|code|colgroup|command|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|em|embed|fieldset|figcaption|figure|font|footer|form|frameset|head|header|hgroup|h1|h2|h3|h4|h5|h6|html|i|iframe|ins|kbd|keygen|label|legend|li|map|mark|menu|meter|nav|noframes|noscript|object|ol|optgroup|output|p|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video).*?<\\/\\2>/i.test(\n      text\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: any, searchValue: string | RegExp, replaceValue: string): any {\n    if (!_.isString(value) || _.isUndefined(searchValue) || _.isUndefined(replaceValue)) {\n      return value;\n    }\n    return value.replace(searchValue, replaceValue);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform, SecurityContext } from '@angular/core';\nimport { DomSanitizer, SafeValue } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\nexport class SanitizeHtmlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(value: SafeValue | string | null): string | null {\n    return this.domSanitizer.sanitize(SecurityContext.HTML, value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n  transform(value: any[]): any[] {\n    return value.sort();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'split'\n})\nexport class SplitPipe implements PipeTransform {\n  /**\n   * Divides a string into an ordered list of substrings.\n   *\n   * @param value The value to process.\n   * @param separator The pattern describing where each split should\n   *   occur.\n   * @param limit A non-negative integer specifying a limit on the\n   *   number of substrings to be included in the array.\n   */\n  transform(value: unknown, separator?: string, limit?: number): string | string[] | unknown {\n    if (!_.isString(value)) {\n      return value;\n    }\n    return _.isEmpty(value) ? [] : value.split(separator, limit);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { isFormatable, renderTemplate } from '~/app/functions.helper';\n\n@Pipe({\n  name: 'template'\n})\nexport class TemplatePipe implements PipeTransform {\n  /**\n   * Renders a Nunjucks/Jinja2 template.\n   *\n   * @param value The template to render.\n   * @param data The object containing the data to replace\n   *   the tokens.\n   */\n  transform(value: any, data?: Record<any, any>): any {\n    if (!isFormatable(value)) {\n      return value;\n    }\n    return renderTemplate(value, data);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { toBoolean } from '~/app/functions.helper';\n\n@Pipe({\n  name: 'toBoolean'\n})\nexport class ToBooleanPipe implements PipeTransform {\n  transform(value: any): boolean {\n    return toBoolean(value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n/**\n * Truncates string if it's longer than the given maximum string length.\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * @param value The string to truncate.\n   * @param length The maximum string length.\n   * @param omission The string to indicate text is omitted.\n   *   Defaults to '...'.\n   * @param separator The separator pattern to truncate to.\n   * @return Returns the truncated string.\n   */\n  transform(value: string, length: number, omission?: string, separator?: RegExp | string): string {\n    if (!(_.isString(value) || _.isDate(value))) {\n      return value;\n    }\n    omission = _.defaultTo(omission, '...');\n    return _.truncate(value, { length, omission, separator });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'trustHtml'\n})\nexport class TrustHtmlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(value: any): SafeHtml {\n    return this.domSanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'upperFirst'\n})\nexport class UpperFirstPipe implements PipeTransform {\n  transform(text: string): string {\n    return _.upperFirst(text);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { AuthService } from '~/app/shared/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate, CanActivateChild {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(\n      ['/login'],\n      state.url === '/' ? undefined : { queryParams: { returnUrl: state.url } }\n    );\n    return false;\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(childRoute, state);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\n\nimport { Permissions, Roles } from '~/app/shared/models/permissions.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthSessionService {\n  constructor() {}\n\n  set(username: string, permissions: Permissions): void {\n    sessionStorage.setItem('username', username);\n    sessionStorage.setItem('permissions', Permissions.toJSON(permissions));\n  }\n\n  getUsername(): string | null {\n    return sessionStorage.getItem('username');\n  }\n\n  getPermissions(): Permissions {\n    const item = sessionStorage.getItem('permissions') || '{}';\n    return Permissions.fromJSON(item);\n  }\n\n  revoke(): void {\n    sessionStorage.removeItem('username');\n    sessionStorage.removeItem('permissions');\n  }\n\n  hasAdminRole(): boolean {\n    const permissions = this.getPermissions();\n    return permissions.role.includes(Roles.admin);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\n\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\nexport type SessionData = {\n  authenticated: boolean;\n  permissions: { [key: string]: any };\n  username: string;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private authSessionService: AuthSessionService, private rpcService: RpcService) {}\n\n  login(username: string, password: string): Observable<SessionData> {\n    return this.rpcService\n      .request('Session', 'login', {\n        username,\n        password\n      })\n      .pipe(\n        tap((res: SessionData) => {\n          this.authSessionService.set(res.username, res.permissions);\n        })\n      );\n  }\n\n  logout(): Observable<void> {\n    // Always logout in case of success AND failure.\n    return this.rpcService.request('Session', 'logout').pipe(\n      finalize(() => {\n        // Revoke session and reload the page. The Angular router and\n        // auth-guard service will redirect automatically to the login\n        // page.\n        this.authSessionService.revoke();\n        document.location.replace('');\n      })\n    );\n  }\n\n  isLoggedIn(): boolean {\n    return !_.isNull(this.authSessionService.getUsername());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\ntype BlockUiConfig = {\n  active: boolean;\n  message?: string;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockUiService {\n  public readonly config$: Observable<BlockUiConfig>;\n\n  private config: BehaviorSubject<BlockUiConfig> = new BehaviorSubject<BlockUiConfig>({\n    active: false,\n    message: undefined\n  });\n\n  constructor() {\n    this.config$ = this.config.asObservable();\n  }\n\n  start(message?: string): void {\n    this.config.next({ active: true, message });\n  }\n\n  stop(): void {\n    this.config.next({ ...this.config.value, active: false });\n  }\n\n  update(message?: string): void {\n    this.config.next({ ...this.config.value, message });\n  }\n\n  resetGlobal(): void {\n    this.config.next({ active: false, message: undefined });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Injectable } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClipboardService {\n  constructor(private notificationService: NotificationService, private clipboard: Clipboard) {}\n\n  /**\n   * Copy the given text to the clipboard.\n   *\n   * @param text The text to be copied to the clipboard.\n   */\n  copy(text: string): void {\n    if (this.clipboard.copy(text)) {\n      this.notify('success');\n    } else {\n      this.notify('error');\n    }\n  }\n\n  private notify(type: 'success' | 'error'): void {\n    const messages = {\n      success: gettext('The data has been copied to the clipboard.'),\n      error: gettext('Failed to copy data to the clipboard.')\n    };\n    this.notificationService.show(NotificationType[type], messages[type]);\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport * as _ from 'lodash';\n\nimport { format, isFormatable, isUUID } from '~/app/functions.helper';\nimport {\n  Constraint,\n  ConstraintProperty,\n  ConstraintRecord,\n  ConstraintValue\n} from '~/app/shared/models/constraint.type';\n\nexport class ConstraintService {\n  /**\n   * Determine the properties involved in the given constraint.\n   *\n   * @param constraint The constraint to process.\n   * @return Returns a list of properties.\n   */\n  static getProps(constraint: Constraint): Array<string> {\n    const innerGetProps = (node: any): Array<string> => {\n      let result = [];\n      if (_.isPlainObject(node)) {\n        if (_.has(node, 'prop')) {\n          node = node as ConstraintProperty;\n          result.push(node.prop);\n        } else if (_.has(node, 'operator')) {\n          node = node as Constraint;\n          switch (node.operator) {\n            case '&&':\n            case 'and':\n            case '||':\n            case 'or':\n            case 'if':\n            case '===':\n            case 'eq':\n            case '!==':\n            case 'ne':\n            case '<>':\n            case '==':\n            case '!=':\n            case '<':\n            case 'lt':\n            case '<=':\n            case 'le':\n            case '>':\n            case 'gt':\n            case '>=':\n            case 'ge':\n            case 'startsWith':\n            case 'endsWith':\n            case 'regex':\n              result = _.concat(innerGetProps(node.arg0), innerGetProps(node.arg1));\n              break;\n            case '!':\n            case 'not':\n            case 'empty':\n            case 'z':\n            case 'notEmpty':\n            case 'n':\n            case 'in':\n            case 'length':\n            case 'UUIDv4':\n            case 'truthy':\n            case 'falsy':\n            case 'has':\n              result = innerGetProps(node.arg0);\n              break;\n          }\n        }\n      }\n      return result;\n    };\n    return _.uniq(innerGetProps(constraint));\n  }\n\n  /**\n   * Evaluate the constraint.\n   *\n   * @param constraint The constraint to process.\n   * @param object The object containing the data to test.\n   * @return Returns `true` or 'any' if the constraint is fulfilled,\n   *   otherwise `false`.\n   */\n  static test(constraint: Constraint, object: ConstraintRecord): any {\n    const innerTest = (data: ConstraintRecord, node: any) => {\n      let result;\n      if (_.isPlainObject(node)) {\n        if (_.has(node, 'prop')) {\n          node = node as ConstraintProperty;\n          result = _.get(data, node.prop);\n        } else if (_.has(node, 'value')) {\n          node = node as ConstraintValue;\n          result = isFormatable(node.value) ? format(node.value, data) : node.value;\n        } else if (_.has(node, 'operator')) {\n          let arg0;\n          let arg1;\n          node = node as Constraint;\n          switch (node.operator) {\n            case '&&':\n            case 'and':\n              result = innerTest(data, node.arg0) && innerTest(data, node.arg1);\n              break;\n            case '||':\n            case 'or':\n              result = innerTest(data, node.arg0) || innerTest(data, node.arg1);\n              break;\n            case '!':\n            case 'not':\n              result = !innerTest(data, node.arg0);\n              break;\n            case 'if':\n              result = !innerTest(data, node.arg0) ? true : innerTest(data, node.arg1);\n              break;\n            case '==':\n            case '===':\n            case 'eq':\n              result = innerTest(data, node.arg0) === innerTest(data, node.arg1);\n              break;\n            case '!=':\n            case '!==':\n            case 'ne':\n            case '<>':\n              result = innerTest(data, node.arg0) !== innerTest(data, node.arg1);\n              break;\n            case '<':\n            case 'lt':\n              result = innerTest(data, node.arg0) < innerTest(data, node.arg1);\n              break;\n            case '<=':\n            case 'le':\n              result = innerTest(data, node.arg0) <= innerTest(data, node.arg1);\n              break;\n            case '>':\n            case 'gt':\n              result = innerTest(data, node.arg0) > innerTest(data, node.arg1);\n              break;\n            case '>=':\n            case 'ge':\n              result = innerTest(data, node.arg0) >= innerTest(data, node.arg1);\n              break;\n            case 'empty':\n            case 'z':\n              result = _.isEmpty(innerTest(data, node.arg0));\n              break;\n            case 'notEmpty':\n            case 'n':\n              result = !_.isEmpty(innerTest(data, node.arg0));\n              break;\n            case 'in':\n              arg0 = innerTest(data, node.arg0);\n              arg1 = innerTest(data, node.arg1);\n              result = _.includes(arg1, arg0);\n              break;\n            case 'startsWith':\n              result = _.startsWith(innerTest(data, node.arg0), innerTest(data, node.arg1));\n              break;\n            case 'endsWith':\n              result = _.endsWith(innerTest(data, node.arg0), innerTest(data, node.arg1));\n              break;\n            case 'regex':\n              arg0 = innerTest(data, node.arg0);\n              arg1 = innerTest(data, node.arg1);\n              result = RegExp(arg1 as string).exec(arg0) !== null;\n              break;\n            case 'length':\n              arg0 = innerTest(data, node.arg0);\n              result = _.get(arg0, 'length', 0);\n              break;\n            case 'UUID':\n              result = isUUID(innerTest(data, node.arg0));\n              break;\n            case 'truthy':\n              result = _.includes(\n                [1, 'TRUE', 'True', 'true', true, 'YES', 'Yes', 'yes', 'Y', 'y'],\n                innerTest(data, node.arg0)\n              );\n              break;\n            case 'falsy':\n              // https://developer.mozilla.org/en-US/docs/Glossary/Falsy\n              result = _.includes(\n                [\n                  0,\n                  'FALSE',\n                  'False',\n                  'false',\n                  false,\n                  'NO',\n                  'No',\n                  'no',\n                  'N',\n                  'n',\n                  undefined,\n                  null,\n                  NaN,\n                  ''\n                ],\n                innerTest(data, node.arg0)\n              );\n              break;\n            case 'has':\n              // arg0 is pointing to a field. If the field does not exists,\n              // then 'undefined' is returned.\n              arg0 = innerTest(data, node.arg0);\n              result = !_.isUndefined(arg0);\n              break;\n          }\n        }\n      } else {\n        if (_.isString(node)) {\n          // Evaluate filters.\n          result = format(node, data);\n        } else {\n          result = node;\n        }\n      }\n      return result;\n    };\n    return innerTest(object, constraint);\n  }\n\n  /**\n   * Iterates over elements of collection, returning an array of all elements\n   * the constraint returns truthy for.\n   *\n   * @param objects The collection to iterate over.\n   * @param constraint The constraint to process.\n   * @return Returns the new filtered array.\n   */\n  static filter(objects: Array<ConstraintRecord>, constraint: Constraint): Array<ConstraintRecord> {\n    return _.filter(objects, (object) => ConstraintService.test(constraint, object));\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { formatDeep } from '~/app/functions.helper';\nimport { Constraint } from '~/app/shared/models/constraint.type';\nimport { DataStore } from '~/app/shared/models/data-store.type';\nimport { Sorter } from '~/app/shared/models/sorter.type';\nimport { ConstraintService } from '~/app/shared/services/constraint.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\nexport type DataStoreResponse = {\n  data: Array<any>;\n  total: number;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n  constructor(private http: HttpClient, private rpcService: RpcService) {}\n\n  /**\n   * Load the data. If a proxy is defined, then the RPC is called and the\n   * response is stored in the 'data' property.\n   *\n   * @param store The store to be used.\n   */\n  load(store: DataStore): Observable<DataStoreResponse> {\n    if (_.isPlainObject(store.proxy) && _.has(store.proxy, 'get')) {\n      return this.rpcService[store.proxy.get.task ? 'requestTask' : 'request'](\n        store.proxy.service,\n        store.proxy.get.method,\n        store.proxy.get.params\n      ).pipe(\n        map((res: any) => {\n          let total = 0;\n          if (_.isPlainObject(res) && _.has(res, 'data')) {\n            res = res as DataStoreResponse;\n            store.data = res.data;\n            total = res.total;\n          } else {\n            store.data = res;\n            total = store.data.length;\n          }\n          this.onLoad(store);\n          return {\n            data: store.data,\n            total\n          };\n        })\n      );\n    } else if (_.isString(store.url)) {\n      return this.http.get(store.url).pipe(\n        map((res: Record<any, any>) => {\n          store.data = res;\n          this.onLoad(store);\n          return {\n            data: store.data,\n            total: store.data.length\n          };\n        })\n      );\n    } else {\n      this.onLoad(store);\n      return of({\n        data: store.data,\n        total: store.data.length\n      });\n    }\n  }\n\n  /**\n   * Save the data. If a proxy is defined, then the RPC is called,\n   * otherwise nothing is done.\n   *\n   * @param store The store to be used.\n   */\n  save(store: DataStore): Observable<any> {\n    if (_.isPlainObject(store.proxy) && _.has(store.proxy, 'post')) {\n      // Make a deep copy of the data to do not modify due the\n      // following operations.\n      const data = _.cloneDeep(store.data);\n      // Modify every object in the array and pick only the specified\n      // properties.\n      if (_.isArray(store.proxy.post.filter)) {\n        const filterConfig = store.proxy.post.filter;\n        _.forEach(data, (item, index) => {\n          switch (filterConfig.mode) {\n            case 'pick':\n              data[index] = _.pick(item, filterConfig.props);\n              break;\n            case 'omit':\n              data[index] = _.omit(item, filterConfig.props);\n              break;\n          }\n        });\n      }\n      return this.rpcService[store.proxy.post.task ? 'requestTask' : 'request'](\n        store.proxy.service,\n        store.proxy.post.method,\n        data\n      );\n    } else {\n      return EMPTY;\n    }\n  }\n\n  private onLoad(store: DataStore) {\n    // We need to create a new array, otherwise Angular won't\n    // detect changes if we modify the original one only.\n    let data = [];\n    if (_.isPlainObject(store.data)) {\n      // Convert simple objects to an array.\n      if (_.isUndefined(store.fields) || !_.isArray(store.fields)) {\n        store.fields = ['key', 'value'];\n      }\n      _.forEach(store.data, (value, key) => {\n        const newItem = {};\n        _.set(newItem, store.fields[0], key);\n        _.set(newItem, store.fields[1], value);\n        data.push(newItem);\n      });\n    } else {\n      // Iterate over all items and convert/onLoad them from\n      // string or array to an object with the specified fields.\n      _.forEach(store.data, (item) => {\n        let newItem = item;\n        if (!_.isPlainObject(item)) {\n          newItem = {};\n          if (_.isArray(item)) {\n            _.forEach(store.fields, (name, index) => {\n              const value = _.get(item, index, undefined);\n              _.set(newItem, name, value);\n            });\n          } else {\n            _.forEach(store.fields, (name) => {\n              _.set(newItem, name, item);\n            });\n          }\n        }\n        data.push(newItem);\n      });\n    }\n    // Assign additional sources?\n    if (_.isArray(data) && _.isPlainObject(store.assign)) {\n      const key = store.assign.key;\n      const sources = store.assign.sources;\n      _.forEach(data, (item) => {\n        const value = _.get(item, key);\n        if (_.has(sources, value)) {\n          const source = _.get(sources, value);\n          _.merge(item, source);\n        }\n      });\n    }\n    // Transform data?\n    if (_.isPlainObject(store.transform)) {\n      _.forEach(data, (item) => {\n        const tmp = formatDeep(store.transform, item);\n        _.merge(item, tmp);\n      });\n    }\n    // Filter data?\n    if (_.isArray(store.filters)) {\n      _.forEach(store.filters, (filter: Constraint) => {\n        data = ConstraintService.filter(data, filter);\n      });\n    }\n    // Make sure the data is unique.\n    if (_.isString(store.uniqBy)) {\n      data = _.uniqBy(data, store.uniqBy);\n    }\n    // Sort data?\n    if (_.isArray(store.sorters)) {\n      const fields: Array<string> = [];\n      const orders: Array<'asc' | 'desc'> = [];\n      _.forEach(store.sorters, (sorter: Sorter) => {\n        fields.push(sorter.prop);\n        orders.push(sorter.dir);\n      });\n      data = _.orderBy(data, fields, orders);\n    }\n    store.data = data;\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { ComponentType } from '@angular/cdk/overlay';\nimport { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n  constructor(private matDialog: MatDialog) {}\n\n  /**\n   * Close all currently open dialogs.\n   */\n  closeAll(): void {\n    this.matDialog.closeAll();\n  }\n\n  open<T, D = any, R = any>(\n    component: ComponentType<T>,\n    config?: MatDialogConfig<D>\n  ): MatDialogRef<T, R> {\n    return this.matDialog.open(\n      component,\n      _.defaultsDeep(config, {\n        disableClose: true\n      })\n    );\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  constructor(private router: Router) {}\n\n  handleError(error: any): void {\n    // Reload application if lazy loading of a module fails.\n    if (/Loading chunk \\d+ failed/.test(error?.message || '')) {\n      this.router.navigate(['/guruMeditation'], {\n        queryParams: {\n          message: gettext(\n            'Obsolete cached data found. Page will be reloaded. If the problem persists, press Ctrl-Shift-R or Ctrl-F5 to force a hard reload of the page.'\n          ),\n          url: '/reload'\n        }\n      });\n    }\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpErrorInterceptorService implements HttpInterceptor {\n  constructor(\n    private router: Router,\n    private authSessionService: AuthSessionService,\n    private notificationService: NotificationService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err instanceof HttpErrorResponse) {\n          let title = `${err.status} - ${err.statusText}`;\n          let message: string;\n          let traceback: string;\n\n          // Convert backend errors.\n          if (_.isPlainObject(err.error) && _.isPlainObject(err.error.error)) {\n            _.merge(err.error, {\n              message: err.error.error.message,\n              traceback: err.error.error.trace\n            });\n            delete err.error.response;\n            delete err.error.error;\n          }\n\n          if (_.isPlainObject(err.error)) {\n            title = _.defaultTo(err.error.detail, `${err.status} - ${err.statusText}`);\n            message = _.defaultTo(err.error.message, '');\n            traceback = _.defaultTo(err.error.traceback, '');\n          }\n\n          switch (err.status) {\n            case 0:\n            case 503:\n              this.router.navigate(['/503']);\n              break;\n            case 401:\n              this.authSessionService.revoke();\n              this.router.navigate(['/login']);\n              break;\n            default:\n              // Show the notification.\n              // The notification can be canceled within 5 milliseconds.\n              const notificationId: number = this.notificationService.show(\n                NotificationType.error,\n                title,\n                message,\n                traceback\n              );\n              // Add a method to allow the subscriber to cancel the\n              // notification, so it will not be shown.\n              _.set(err, 'preventDefault', () => {\n                this.notificationService.cancel(notificationId);\n              });\n              break;\n          }\n        }\n        return throwError(err);\n      })\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { ModalDialogComponent } from '~/app/shared/components/modal-dialog/modal-dialog.component';\nimport { Dirty } from '~/app/shared/models/dirty.interface';\nimport { DialogService } from '~/app/shared/services/dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsDirtyGuardService implements CanDeactivate<Dirty> {\n  constructor(private dialogService: DialogService) {}\n\n  canDeactivate(\n    component: Dirty,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (\n      ['/404', '/503', '/guruMeditation', '/login', '/reload'].includes(nextState.url) ||\n      nextState.url.startsWith('/download?') ||\n      nextState.url.startsWith('/externalRedirect/')\n    ) {\n      return true;\n    }\n    return !_.isFunction(component.isDirty) ? true : component.isDirty() ? this.showDialog() : true;\n  }\n\n  private showDialog(): Observable<boolean> {\n    const dialogRef = this.dialogService.open(ModalDialogComponent, {\n      data: {\n        template: 'confirmation-danger',\n        message: gettext(\n          'You have made changes that have not yet been saved. Do you want to discard them?'\n        )\n      }\n    });\n    return dialogRef.afterClosed();\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { getCurrentLocale, setCurrentLocale, SupportedLocales } from '~/app/i18n.helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocaleService {\n  /**\n   * Get the current locale.\n   */\n  static getCurrentLocale(): string {\n    return getCurrentLocale();\n  }\n\n  /**\n   * Set the current locale.\n   */\n  static setCurrentLocale(locale: string): void {\n    setCurrentLocale(locale);\n  }\n\n  /**\n   * Get an object of the supported locales, where the key is the country\n   * code and the value is the long description of the locale.\n   *\n   * @return A dictionary of locales, e.g. {\n   *     'en_GB': 'English',\n   *     'de_DE': 'Deutsch'\n   *   }.\n   */\n  static getSupportedLocales(): Record<string, string> {\n    return _.reduce(\n      _.keys(SupportedLocales),\n      (d, k) => {\n        d[k] = _.get(SupportedLocales, k);\n        return d;\n      },\n      {}\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { translate } from '~/app/i18n.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Notification } from '~/app/shared/models/notification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  public readonly notifications$: Observable<Notification[]>;\n\n  private notificationsSource = new BehaviorSubject<Notification[]>([]);\n\n  constructor(private toastrService: ToastrService) {\n    this.notifications$ = this.notificationsSource.asObservable();\n  }\n\n  show(notification: Notification): number;\n  show(type: NotificationType, title: string, message?: string, traceback?: string): number;\n  show(\n    arg: Notification | NotificationType,\n    title?: string,\n    message?: string,\n    traceback?: string\n  ): number {\n    return window.setTimeout(() => {\n      let notification: Notification;\n      if (arg instanceof Notification) {\n        notification = arg as Notification;\n      } else {\n        notification = new Notification(arg as NotificationType, title, message, traceback);\n      }\n      // Store the notification.\n      this.add(notification);\n      // Show the notification as toasty.\n      const fn: (message: string, title: string) => any = _.bind(\n        this.toastrService[notification.type],\n        this.toastrService\n      );\n      fn(\n        _.truncate(translate(notification.message), { length: 1500, omission: '...' }),\n        translate(notification.title)\n      );\n    }, 5);\n  }\n\n  add(notification: Notification): void {\n    const notifications = this.getAll();\n    notifications.push(notification);\n    this.notificationsSource.next(notifications);\n  }\n\n  cancel(id: number): void {\n    window.clearTimeout(id);\n  }\n\n  remove(notification: Notification): void {\n    const notifications = this.getAll();\n    _.remove(notifications, { id: notification.id });\n    this.notificationsSource.next(notifications);\n  }\n\n  removeAll(): void {\n    this.notificationsSource.next([]);\n  }\n\n  getAll(): Notification[] {\n    return this.notificationsSource.getValue();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { UserLocalStorageService } from '~/app/shared/services/user-local-storage.service';\n\nexport type PrefersColorScheme = 'light' | 'dark';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrefersColorSchemeService {\n  public readonly change$: Observable<PrefersColorScheme>;\n\n  private prefersColorScheme: BehaviorSubject<PrefersColorScheme> = new BehaviorSubject('light');\n\n  constructor(private userLocalStorageService: UserLocalStorageService) {\n    this.prefersColorScheme.next(this.get());\n    this.change$ = this.prefersColorScheme.asObservable();\n  }\n\n  get current(): PrefersColorScheme {\n    return this.prefersColorScheme.value;\n  }\n\n  public get(): PrefersColorScheme {\n    return (\n      (this.userLocalStorageService.get('prefers-color-scheme') as PrefersColorScheme) ||\n      this.detectSystemTheme()\n    );\n  }\n\n  /**\n   * Set the color scheme.\n   *\n   * @returns Returns the color scheme that has been set.\n   */\n  public set(value: PrefersColorScheme): PrefersColorScheme {\n    this.userLocalStorageService.set('prefers-color-scheme', value);\n    this.prefersColorScheme.next(value);\n    return this.current;\n  }\n\n  /**\n   * Synchronize the internal state with the browsers local storage\n   * or media query.\n   */\n  public sync(): void {\n    const value: PrefersColorScheme = this.get();\n    if (this.current !== value) {\n      this.prefersColorScheme.next(value);\n    }\n  }\n\n  /**\n   * Toggles the current color scheme.\n   *\n   * @returns Returns the name of the now active color scheme.\n   */\n  public toggle(): PrefersColorScheme {\n    return this.set(this.current === 'dark' ? 'light' : 'dark');\n  }\n\n  private detectSystemTheme(): PrefersColorScheme {\n    return window.matchMedia?.('(prefers-color-schema: dark)').matches ? 'dark' : 'light';\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, NgZone } from '@angular/core';\nimport * as _ from 'lodash';\nimport { interval, Observable } from 'rxjs';\nimport { concatMap, map, mergeMap, takeWhile } from 'rxjs/operators';\n\nimport { retryDelayed, takeWhen } from '~/app/rxjs.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { NotificationService } from '~/app/shared/services/notification.service';\n\ntype RpcResponse = {\n  error?: any;\n  response?: any;\n};\n\nexport type RpcBgResponse = {\n  filename: string;\n  pos?: number;\n  output?: string;\n  outputPending?: boolean;\n  running: boolean;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RpcService {\n  private url = 'rpc.php';\n\n  constructor(\n    private http: HttpClient,\n    private ngZone: NgZone,\n    private notificationService: NotificationService\n  ) { }\n\n  /**\n   * Execute the specified RPC.\n   *\n   * @param rpcService The name/class of the service to be executed.\n   * @param rpcMethod The method name to be executed.\n   * @param rpcParams The parameters of the method.\n   * @param rpcOptions Optional RPC options.\n   * @param maxRetries Number of retry attempts before failing.\n   */\n  request(\n    rpcService: string,\n    rpcMethod: string,\n    rpcParams?: any,\n    rpcOptions?: any,\n    maxRetries?: number\n  ): Observable<any> {\n    const body: Record<string, any> = {\n      service: rpcService,\n      method: rpcMethod,\n      params: rpcParams || {}\n    };\n    if (!(_.isUndefined(rpcParams) || _.isNull(rpcParams))) {\n      body.params = rpcParams;\n    }\n    if (!(_.isUndefined(rpcParams) || _.isNull(rpcParams))) {\n      body.options = rpcOptions;\n    }\n    return this.http.post(this.url, body).pipe(\n      retryDelayed(maxRetries),\n      map((res: RpcResponse) => res.response)\n    );\n  }\n\n  /**\n   * Execute the specified task. The subscription will complete when\n   * the task has been finished.\n   *\n   * @param rpcService The name/class of the service to be executed.\n   * @param rpcMethod The method name to be executed.\n   * @param rpcParams The parameters of the method.\n   * @param rpcOptions Optional RPC options.\n   * @param period The poll interval, defaults to 500 milliseconds.\n   * @param maxRetries Number of retry attempts before failing.\n   */\n  requestTask(\n    rpcService: string,\n    rpcMethod: string,\n    rpcParams?: any,\n    rpcOptions?: any,\n    period?: number,\n    maxRetries?: number\n  ): Observable<string> {\n    return this.request(rpcService, rpcMethod, rpcParams, rpcOptions, maxRetries).pipe(\n      mergeMap((filename: any) => this.pollTask(filename, period)),\n      map((res: RpcBgResponse): string => {\n        try {\n          return JSON.parse(res.output);\n        } catch (e) { }\n        return res.output;\n      })\n    );\n  }\n\n  /**\n   * Execute the specified background task. The subscription will complete\n   * when the background process has been finished. The RPC response will\n   * be forwarded to the subscriber.\n   *\n   * @param rpcService The name/class of the service to be executed.\n   * @param rpcMethod The method name to be executed.\n   * @param rpcParams The parameters of the method.\n   * @param rpcOptions Optional RPC options.\n   * @param pollPeriod The poll interval in milliseconds.\n   * @param maxRetries Number of retry attempts before failing.\n   */\n  requestTaskOutput(\n    rpcService: string,\n    rpcMethod: string,\n    rpcParams?: any,\n    rpcOptions?: any,\n    pollPeriod?: number,\n    maxRetries?: number\n  ): Observable<RpcBgResponse> {\n    return this.request(rpcService, rpcMethod, rpcParams, rpcOptions, maxRetries).pipe(\n      mergeMap((filename: any) => this.pollTaskOutput(filename, pollPeriod))\n    );\n  }\n\n  /**\n   * Stop the given task.\n   *\n   * @param filename The name of the background process status file.\n   * @param maxRetries Number of retry attempts before failing.\n   */\n  stopTask(filename: string, maxRetries?: number): Observable<any> {\n    return this.request(\n      'Exec',\n      'stop',\n      {\n        filename\n      },\n      undefined,\n      maxRetries\n    );\n  }\n\n  /**\n   * Call the specified RPC that will trigger a file download.\n   *\n   * @param rpcService The name/class of the service to be executed.\n   * @param rpcMethod The method name to be executed.\n   * @param rpcParams The parameters of the method.\n   */\n  download(rpcService: string, rpcMethod: string, rpcParams: any) {\n    this.ngZone.runOutsideAngular(() => {\n      const body: Record<string, any> = {\n        service: rpcService,\n        method: rpcMethod\n      };\n      if (!(_.isUndefined(rpcParams) || _.isNull(rpcParams))) {\n        body.params = rpcParams;\n      }\n      const request = new XMLHttpRequest();\n      request.open('POST', 'download.php', true);\n      request.responseType = 'blob';\n      request.onreadystatechange = () => {\n        if (request.readyState === 4 && request.status === 200) {\n          const disposition = request.getResponseHeader('content-disposition');\n          const type = request.getResponseHeader('Content-Type');\n          const matches = /filename=(.*)/.exec(disposition);\n          const filename = matches != null && matches[1] ? matches[1] : 'download.txt';\n          const blob = new Blob([request.response], { type });\n          const link = document.createElement('a');\n          link.href = window.URL.createObjectURL(blob);\n          link.download = filename;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n        if (request.readyState === 4 && request.status !== 200) {\n          const reader = new FileReader();\n          reader.onload = (e: any) => {\n            const err = JSON.parse(e.target.result);\n            const title = `${request.status} - ${request.statusText}`;\n            const message = _.defaultTo(err.error.message, '');\n            const traceback = _.defaultTo(err.error.traceback, '');\n            this.notificationService.show(NotificationType.error, title, message, traceback);\n          };\n          reader.readAsText(request.response);\n        }\n      };\n      request.send(JSON.stringify(body));\n    });\n  }\n\n  /**\n   * Poll the executed task until it has been finished.\n   *\n   * @param filename The name of the background process status file.\n   * @param pollPeriod The poll interval in milliseconds. Defaults to\n   *   500 milliseconds.\n   * @param maxRetries Number of retry attempts before failing.\n   * @return Returns an Observable containing the RPC response.\n   */\n  private pollTask(\n    filename: string,\n    pollPeriod?: number,\n    maxRetries?: number\n  ): Observable<RpcBgResponse> {\n    pollPeriod = _.defaultTo(pollPeriod, 500);\n    return interval(pollPeriod).pipe(\n      concatMap(() =>\n        this.request(\n          'Exec',\n          'getOutput',\n          {\n            filename,\n            pos: 0\n          },\n          undefined,\n          maxRetries\n        )\n      ),\n      takeWhen((res: RpcBgResponse) => res.running === false)\n    );\n  }\n\n  /**\n   * Get the output of the given task.\n   *\n   * @param filename The name of the background process status file.\n   * @param pollPeriod The poll interval in milliseconds. Defaults to\n   *   500 milliseconds.\n   * @param maxRetries Number of retry attempts before failing.\n   */\n  private pollTaskOutput(\n    filename: string,\n    pollPeriod?: number,\n    maxRetries?: number\n  ): Observable<RpcBgResponse> {\n    let pos = 0;\n    pollPeriod = _.defaultTo(pollPeriod, 500);\n    return interval(pollPeriod).pipe(\n      concatMap(() =>\n        this.request(\n          'Exec',\n          'getOutput',\n          {\n            filename,\n            pos,\n            length: 1024 * 1024\n          },\n          undefined,\n          maxRetries\n        )\n      ),\n      takeWhile((res: RpcBgResponse) => {\n        pos = res.pos;\n        return res.running === true || res.outputPending;\n      }, true)\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable, OnDestroy } from '@angular/core';\nimport * as _ from 'lodash';\nimport { EMPTY, Observable, ReplaySubject, Subscription, timer } from 'rxjs';\nimport { catchError, exhaustMap, filter } from 'rxjs/operators';\n\nimport { AuthService } from '~/app/shared/services/auth.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\nexport type SystemInformation = {\n  ts: number;\n  time: string;\n  hostname: string;\n  version?: string;\n  cpuModelName?: string;\n  cpuUsage?: number;\n  memTotal?: number;\n  memUsed?: number;\n  memAvailable?: number;\n  memUtilization?: number;\n  kernel?: string;\n  uptime?: number;\n  loadAverage?: string;\n  configDirty?: boolean;\n  rebootRequired?: boolean;\n  availablePkgUpdates?: number;\n  displayWelcomeMessage?: boolean;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SystemInformationService implements OnDestroy {\n  public readonly systemInfo$: Observable<SystemInformation>;\n\n  private subscription: Subscription;\n  private systemInfoSource = new ReplaySubject<SystemInformation>(1);\n\n  constructor(private authService: AuthService, private rpcService: RpcService) {\n    this.systemInfo$ = this.systemInfoSource.asObservable();\n    // Poll the system system-information every 5 seconds. Continue, even\n    // if there is a connection problem AND do not display an error\n    // notification.\n    this.subscription = timer(0, 5000)\n      .pipe(\n        // Do not request system information if user is not logged in.\n        filter(() => this.authService.isLoggedIn()),\n        // Request the system information via HTTP. Execute the RPC only\n        // after the previous one has been completed.\n        exhaustMap(() =>\n\n          this.rpcService\n            .request(\n              'System',\n              'getInformation',\n              {},\n              { updatelastaccess: false })\n            .pipe(\n              catchError((error) => {\n\n                // Do not show an error notification.\n                error.preventDefault?.();\n                return EMPTY;\n              })\n            )\n        )\n      )\n      .subscribe({\n        next: (res: SystemInformation) => {\n          // We need to convert some properties to numbers because\n          // they are strings due to the 32bit compatibility of the\n          // PHP backend.\n          if (_.isString(res.memUsed)) {\n            res.memUsed = _.parseInt(res.memUsed);\n          }\n          if (_.isString(res.memTotal)) {\n            res.memTotal = _.parseInt(res.memTotal);\n          }\n          if (_.isString(res.memAvailable)) {\n            res.memAvailable = _.parseInt(res.memAvailable);\n          }\n          if (_.isString(res.memUtilization)) {\n            res.memUtilization = Number.parseFloat(res.memUtilization);\n          }\n          this.systemInfoSource.next(res);\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { translate } from '~/app/i18n.helper';\nimport { BlockUiService } from '~/app/shared/services/block-ui.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\nexport type TaskInformation = {\n  startTime: number;\n};\n\nexport type RunningTasks = {\n  [filename: string]: TaskInformation;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskRunnerService {\n  constructor(private blockUiService: BlockUiService, private rpcService: RpcService) {}\n\n  /**\n   * Run a task and block the UI in the meanwhile.\n   *\n   * @param message The message that is displayed while the task\n   *   is running.\n   * @param rpcService The name/class of the service to be executed.\n   * @param rpcMethod The method name to be executed.\n   * @param rpcParams The parameters of the method.\n   * @param rpcOptions Optional RPC options.\n   * @param interval The poll interval.\n   */\n  execute(\n    message: string,\n    rpcService: string,\n    rpcMethod: string,\n    rpcParams?: any,\n    rpcOptions?: any,\n    interval?: number\n  ): Observable<any> {\n    this.blockUiService.start(translate(message));\n    return this.rpcService.requestTask(rpcService, rpcMethod, rpcParams, rpcOptions, interval).pipe(\n      finalize(() => {\n        this.blockUiService.stop();\n      })\n    );\n  }\n\n  /**\n   * Determine all running tasks.\n   */\n  enumerate(): Observable<RunningTasks> {\n    return this.rpcService.request('Exec', 'enumerate');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Unsubscribe } from '~/app/decorators';\nimport {\n  SystemInformation,\n  SystemInformationService\n} from '~/app/shared/services/system-information.service';\n\nconst DEFAULT_TITLE = 'openmediavault Workbench';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  constructor(private systemInformationService: SystemInformationService, private title: Title) {\n    this.subscriptions.add(\n      this.systemInformationService.systemInfo$\n        .pipe(\n          map((resp: SystemInformation): string => resp.hostname),\n          distinctUntilChanged()\n        )\n        .subscribe((hostname: string) => {\n          const newTitle = `${hostname} - ${DEFAULT_TITLE}`;\n          this.title.setTitle(newTitle);\n        })\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Platform } from '@angular/cdk/platform';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { AuthSessionService } from '~/app/shared/services/auth-session.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLocalStorageService {\n  constructor(\n    private authSessionService: AuthSessionService,\n    private platform: Platform,\n    private rpcService: RpcService\n  ) {}\n\n  private get deviceType(): string {\n    return this.platform.ANDROID || this.platform.IOS ? 'mobile' : 'desktop';\n  }\n\n  get(key: string, defaultValue?: any): string | null {\n    const username = this.authSessionService.getUsername();\n    const value = localStorage.getItem(`${username}@${key}`);\n    return _.defaultTo(value, defaultValue);\n  }\n\n  set(key: string, value: string, localOnly: boolean = false): void {\n    const username = this.authSessionService.getUsername();\n    // Set local storage item ...\n    // - in browser:\n    localStorage.setItem(`${username}@${key}`, value);\n    // - on server:\n    if (!localOnly) {\n      this.rpcService\n        .request('WebGui', 'setLocalStorageItem', {\n          devicetype: this.deviceType,\n          key,\n          value\n        })\n        .subscribe();\n    }\n  }\n\n  clear(): void {\n    const username = this.authSessionService.getUsername();\n    // Clear local storage ...\n    // - in browser:\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (_.startsWith(key, `${username}@`)) {\n        keys.push(key);\n      }\n    }\n    _.forEach(keys, (key) => localStorage.removeItem(key));\n    // - on server:\n    this.rpcService\n      .request('WebGui', 'clearLocalStorageItems', {\n        devicetype: this.deviceType\n      })\n      .subscribe();\n  }\n\n  /**\n   * Load the users local storage settings and apply them to the\n   * browsers local storage.\n   */\n  load(): Observable<Record<string, string>> {\n    return this.rpcService\n      .request('WebGui', 'getLocalStorageItems', {\n        devicetype: this.deviceType\n      })\n      .pipe(\n        catchError((error) => {\n          error.preventDefault?.();\n          return of({});\n        }),\n        tap((items: Record<string, string>) => {\n          _.forEach(items, (value, key) => {\n            this.set(key, value, true);\n          });\n        })\n      );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentsModule } from '~/app/shared/components/components.module';\nimport { DirectivesModule } from '~/app/shared/directives/directives.module';\nimport { PipesModule } from '~/app/shared/pipes/pipes.module';\nimport { AuthGuardService } from '~/app/shared/services/auth-guard.service';\nimport { SystemInformationService } from '~/app/shared/services/system-information.service';\n\n@NgModule({\n  imports: [CommonModule, ComponentsModule, DirectivesModule, PipesModule],\n  exports: [ComponentsModule, DirectivesModule, PipesModule],\n  providers: [AuthGuardService, SystemInformationService]\n})\nexport class SharedModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  DefaultTranspiler,\n  Translation,\n  TRANSLOCO_CONFIG,\n  TRANSLOCO_LOADER,\n  TRANSLOCO_TRANSPILER,\n  translocoConfig,\n  TranslocoLoader,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { HashMap } from '@ngneat/transloco/lib/types';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { SupportedLocales } from '~/app/i18n.helper';\nimport { environment } from '~/environments/environment';\n\n/**\n * Load the translation dictionary.\n */\n@Injectable({ providedIn: 'root' })\nclass CustomLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  public getTranslation(lang: string): Observable<Translation> {\n    return this.http.get<Translation>(`./assets/i18n/${lang}.json`).pipe(\n      catchError((error) => {\n        // Do not show an error notification and return an empty language\n        // dictionary in case of the translation file does not exist.\n        error.preventDefault?.();\n        return of({});\n      })\n    );\n  }\n}\n\n/**\n * Disable the build-in transpiler. String interpolation is done by\n * Nunjucks internally. Another reason is that missing keys are not\n * transpiled.\n */\n@Injectable({ providedIn: 'root' })\nclass CustomTranspiler extends DefaultTranspiler {\n  public override transpile(value: any, params: HashMap, translation: Translation): any {\n    return value;\n  }\n}\n\n@NgModule({\n  exports: [TranslocoModule],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: _.keys(SupportedLocales),\n        defaultLang: 'en_GB',\n        missingHandler: { allowEmpty: true, logMissingKey: false },\n        prodMode: environment.production,\n        reRenderOnLangChange: true\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: CustomLoader },\n    { provide: TRANSLOCO_TRANSPILER, useClass: CustomTranspiler }\n  ]\n})\nexport class TranslocoRootModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"names":["ViewportRuler","ChangeDetectorRef","FormControl","MatFormField","_","EMPTY","from","Subject","Subscription","catchError","concatMap","map","startWith","takeUntil","tap","toArray","AbstractFormFieldComponent","Unsubscribe","RpcService","i0","ctx_r8","FormFolderbrowserComponent","constructor","changeDetectorRef","rpcService","viewportRuler","originX","originY","overlayX","overlayY","currentPath","joinPaths","currentPaths","ngOnInit","change","pipe","destroy","subscribe","isOpen","getTriggerRect","markForCheck","config","dirVisible","dirRefIdControl","formGroup","get","dirRefIdField","subscriptions","add","valueChanges","value","dirType","request","uuid","res","dirPath","trimEnd","filteredFolders$","searchFilter","folders","filter","folder","toLowerCase","includes","ngOnDestroy","next","complete","open","control","name","path","trim","paths","length","split","loadData","loadPath","requestData","push","error","preventDefault","choose","updateValue","close","onSelectionChange","event","options","source","deselectAll","pop","type","sort","Intl","Collator","compare","unshift","setValue","join","triggerRect","trigger","_elementRef","nativeElement","getBoundingClientRect","markAsTouched","markAsDirty","updateValueAndValidity","selectors","viewQuery","ctx","_r1","__decorate","MatAutocompleteTrigger","throwError","skipWhile","ClipboardService","DataStoreService","FormTextInputComponent","clipboardService","dataStoreService","abstractControl","filteredOptions$","loading","doFilter","suggestions","doLoadStore","onCopyToClipboard","copy","load","store","data","option","toLower","valueField","_r3","animate","state","style","transition","BlockUiService","BlockUiComponent","blockUiService","decls","vars","consts","template","opacity","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}