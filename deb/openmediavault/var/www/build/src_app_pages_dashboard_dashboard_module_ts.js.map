{"version":3,"file":"src_app_pages_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/pages/dashboard/dashboard-routing.module.ts","./src/app/pages/dashboard/dashboard-settings-page/dashboard-settings-page.component.ts","./src/app/pages/dashboard/dashboard.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DashboardPageComponent } from '~/app/core/pages/dashboard-page/dashboard-page.component';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\nimport { DashboardSettingsPageComponent } from '~/app/pages/dashboard/dashboard-settings-page/dashboard-settings-page.component';\nimport { IsDirtyGuardService } from '~/app/shared/services/is-dirty-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardPageComponent,\n    data: { title: gettext('Dashboard') }\n  },\n  {\n    path: 'settings',\n    component: DashboardSettingsPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: { title: gettext('Settings'), notificationTitle: gettext('Updated dashboard settings.') }\n  }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n  providers: [\n    {\n      provide: ROUTES,\n      multi: true,\n      useFactory: (routeConfigService: RouteConfigService): Routes => {\n        routeConfigService.inject('dashboard', routes);\n        return routes;\n      },\n      deps: [RouteConfigService]\n    }\n  ]\n})\nexport class DashboardRoutingModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DashboardWidgetConfig } from '~/app/core/components/dashboard/models/dashboard-widget-config.model';\nimport { SelectionListPageConfig } from '~/app/core/components/intuition/models/selection-list-page-config.type';\nimport { DashboardWidgetConfigService } from '~/app/core/services/dashboard-widget-config.service';\nimport { BaseSelectionListPageComponent } from '~/app/pages/base-page-component';\n\ntype SelectionListItem = Pick<DashboardWidgetConfig, 'id' | 'title' | 'description'> & {\n  enabled: boolean;\n};\n\n@Component({\n  template:\n    '<omv-intuition-selection-list-page [config]=\"this.config\"></omv-intuition-selection-list-page>'\n})\nexport class DashboardSettingsPageComponent\n  extends BaseSelectionListPageComponent\n  implements OnInit\n{\n  public config: SelectionListPageConfig = {\n    title: gettext('Enabled widgets'),\n    hasSelectAllButton: true,\n    multiple: true,\n    textProp: 'title',\n    valueProp: 'id',\n    hintProp: 'description',\n    selectedProp: 'enabled',\n    updateStoreOnSelectionChange: true,\n    store: {\n      data: [],\n      sorters: [\n        {\n          dir: 'asc',\n          prop: 'title'\n        }\n      ]\n    },\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'click',\n          click: this.onSubmit.bind(this)\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/dashboard'\n        }\n      }\n    ]\n  };\n\n  constructor(\n    private dashboardWidgetConfigService: DashboardWidgetConfigService,\n    private router: Router\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.dashboardWidgetConfigService.configs$.subscribe(\n      (widgets: Array<DashboardWidgetConfig>) => {\n        const data: Array<SelectionListItem> = [];\n        const enabledWidgets: Array<string> = this.dashboardWidgetConfigService.getEnabled();\n        _.forEach(widgets, (widget: DashboardWidgetConfig) => {\n          data.push({\n            id: widget.id,\n            title: widget.title,\n            description: widget.description,\n            enabled: enabledWidgets.includes(widget.id)\n          });\n        });\n        this.config.store.data = [...data];\n      }\n    );\n  }\n\n  onSubmit(buttonConfig, store, value: Array<string>) {\n    this.markAsPristine();\n    this.dashboardWidgetConfigService.setEnabled(value);\n    this.router.navigate(['/dashboard']);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslocoModule } from '@ngneat/transloco';\n\nimport { CoreModule } from '~/app/core/core.module';\nimport { MaterialModule } from '~/app/material.module';\nimport { DashboardRoutingModule } from '~/app/pages/dashboard/dashboard-routing.module';\nimport { DashboardSettingsPageComponent } from '~/app/pages/dashboard/dashboard-settings-page/dashboard-settings-page.component';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [DashboardSettingsPageComponent],\n  imports: [\n    CommonModule,\n    CoreModule,\n    DashboardRoutingModule,\n    MaterialModule,\n    SharedModule,\n    TranslocoModule\n  ]\n})\nexport class DashboardModule {}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}