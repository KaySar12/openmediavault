{"version":3,"file":"src_app_pages_network_network_module_ts.js","mappings":"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","sources":["./src/app/pages/network/firewall/rules/firewall-rule-form-page.component.ts","./src/app/pages/network/firewall/rules/firewall-rule-inet-datatable-page.component.ts","./src/app/pages/network/firewall/rules/firewall-rule-inet6-datatable-page.component.ts","./src/app/pages/network/firewall/rules/firewall-rule-tabs-page.component.ts","./src/app/pages/network/general/general-network-form-page.component.ts","./src/app/pages/network/interfaces/interface-bond-form-page.component.ts","./src/app/pages/network/interfaces/interface-bridge-form-page.component.ts","./src/app/pages/network/interfaces/interface-datatable-page.component.ts","./src/app/pages/network/interfaces/interface-details-form-page.component.ts","./src/app/pages/network/interfaces/interface-ethernet-form-page.component.ts","./src/app/pages/network/interfaces/interface-vlan-form-page.component.ts","./src/app/pages/network/interfaces/interface-wifi-form-page.component.ts","./src/app/pages/network/network-routing.module.ts","./src/app/pages/network/network.module.ts","./src/app/pages/network/proxy/proxy-form-page.component.ts"],"sourcesContent":["/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class FirewallRuleFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Iptables',\n      get: {\n        method: 'getRule',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setRule'\n      }\n    },\n    fields: [\n      /* eslint-disable max-len */\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'hidden',\n        name: 'rulenum',\n        value: -1\n      },\n      {\n        type: 'select',\n        name: 'family',\n        label: gettext('Family'),\n        disabled: true,\n        value: '{{ _routeParams.family }}',\n        store: {\n          data: [\n            ['inet', 'IPv4'],\n            ['inet6', 'IPv6']\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'select',\n        name: 'chain',\n        label: gettext('Direction'),\n        value: 'INPUT',\n        store: {\n          data: [\n            ['INPUT', 'INPUT'],\n            ['OUTPUT', 'OUTPUT']\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'select',\n        name: 'action',\n        label: gettext('Action'),\n        hint: gettext('This specifies what to do if the packet matches.'),\n        value: 'REJECT',\n        store: {\n          data: [\n            ['ACCEPT', 'ACCEPT'],\n            ['REJECT', 'REJECT'],\n            ['DROP', 'DROP'],\n            ['LOG', 'LOG'],\n            ['', gettext('Nothing')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'source',\n        label: gettext('Source'),\n        hint: gettext(\n          'Source address can be either a network IP address (with /mask), a IP range or a plain IP address. A \"!\" argument before the address specification inverts the sense of the address.'\n        ),\n        value: ''\n      },\n      {\n        type: 'textInput',\n        name: 'sport',\n        label: gettext('Source port'),\n        hint: gettext(\n          'Match if the source port is one of the given ports, e.g. 21 or !443 or 1024-65535.'\n        ),\n        value: '',\n        validators: {\n          custom: [\n            {\n              constraint: {\n                operator: 'if',\n                arg0: {\n                  operator: 'notEmpty',\n                  arg0: { prop: 'sport' }\n                },\n                arg1: {\n                  operator: 'regex',\n                  arg0: {\n                    prop: 'sport'\n                  },\n                  arg1: '^!?(([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])([-:]([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])){0,1})$'\n                }\n              },\n              errorData: gettext(\n                'This field should be a port or port range (e.g. 21 or !443 or 1024-65535).'\n              )\n            }\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'destination',\n        label: gettext('Destination'),\n        hint: gettext(\n          'Destination address can be either a network IP address (with /mask), a IP range or a plain IP address. A \"!\" argument before the address specification inverts the sense of the address.'\n        ),\n        value: ''\n      },\n      {\n        type: 'textInput',\n        name: 'dport',\n        label: gettext('Destination port'),\n        hint: gettext(\n          'Match if the destination port is one of the given ports, e.g. 21 or !443 or 1024-65535.'\n        ),\n        value: '',\n        validators: {\n          custom: [\n            {\n              constraint: {\n                operator: 'if',\n                arg0: {\n                  operator: 'notEmpty',\n                  arg0: { prop: 'dport' }\n                },\n                arg1: {\n                  operator: 'regex',\n                  arg0: {\n                    prop: 'dport'\n                  },\n                  arg1: '^!?(([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])([-:]([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])){0,1})$'\n                }\n              },\n              errorData: gettext(\n                'This field should be a port or port range (e.g. 21 or !443 or 1024-65535).'\n              )\n            }\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'protocol',\n        label: gettext('Protocol'),\n        value: 'tcp',\n        store: {\n          data: [\n            ['tcp', 'TCP'],\n            ['udp', 'UDP'],\n            ['icmp', 'ICMP'],\n            ['icmpv6', 'ICMPv6'],\n            ['all', gettext('All')],\n            ['!tcp', gettext('Not TCP')],\n            ['!udp', gettext('Not UDP')],\n            ['!icmp', gettext('Not ICMP')],\n            ['!icmpv6', gettext('Not ICMPv6')]\n          ]\n        },\n        validators: {\n          custom: [\n            // The protocol 'All' is not supported in conjunction with\n            // the source/destination port option.\n            {\n              constraint: {\n                operator: 'if',\n                arg0: {\n                  operator: 'or',\n                  arg0: {\n                    operator: 'notEmpty',\n                    arg0: { prop: 'sport' }\n                  },\n                  arg1: {\n                    operator: 'notEmpty',\n                    arg0: { prop: 'dport' }\n                  }\n                },\n                arg1: {\n                  operator: 'ne',\n                  arg0: { prop: 'protocol' },\n                  arg1: 'all'\n                }\n              },\n              errorData: gettext(\n                'The protocol is not supported in conjunction with a source/destination port.'\n              )\n            }\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'extraoptions',\n        label: gettext('Extra options'),\n        value: ''\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/network/firewall/rules/{{ _routeParams.family }}'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network/firewall/rules/{{ _routeParams.family }}'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DatatablePageActionConfig } from '~/app/core/components/intuition/models/datatable-page-action-config.type';\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { BaseDatatablePageComponent } from '~/app/pages/base-page-component';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Datatable } from '~/app/shared/models/datatable.interface';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class FirewallRuleInetDatatablePageComponent extends BaseDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    stateId: '9cee722c-7c04-11ea-a3e8-37671db9f618',\n    autoReload: false,\n    limit: 0,\n    remoteSorting: false,\n    remotePaging: false,\n    hasSearchField: false,\n    columns: [\n      {\n        name: gettext('Direction'),\n        prop: 'chain',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplateName: 'chip'\n      },\n      {\n        name: gettext('Action'),\n        prop: 'action',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplateName: 'chip'\n      },\n      { name: gettext('Source'), prop: 'source', flexGrow: 1, sortable: false },\n      { name: gettext('Port'), prop: 'sport', flexGrow: 1, sortable: false },\n      { name: gettext('Destination'), prop: 'destination', flexGrow: 1, sortable: false },\n      { name: gettext('Port'), prop: 'dport', flexGrow: 1, sortable: false },\n      {\n        name: gettext('Protocol'),\n        prop: 'protocol',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          map: {\n            /* eslint-disable @typescript-eslint/naming-convention */\n            tcp: { value: 'TCP' },\n            udp: { value: 'UDP' },\n            icmp: { value: 'ICMP' },\n            icmpv6: { value: 'ICMPv6' },\n            all: { value: gettext('All') },\n            '!tcp': { value: gettext('Not TCP') },\n            '!udp': { value: gettext('Not UDP') },\n            '!icmp': { value: gettext('Not ICMP') },\n            '!icmpv6': { value: gettext('Not ICMPv6') }\n            /* eslint-enable @typescript-eslint/naming-convention */\n          }\n        }\n      },\n      {\n        name: gettext('Extra options'),\n        prop: 'extraoptions',\n        cellTemplateName: 'text',\n        flexGrow: 1,\n        sortable: false\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'rulenum'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'Iptables',\n        get: {\n          method: 'getRules',\n          params: {\n            type: ['userdefined']\n          }\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'iconButton',\n        icon: 'save',\n        tooltip: gettext('Save'),\n        click: this.onSave.bind(this),\n        enabledConstraints: {\n          callback: () => this.dirty\n        }\n      },\n      {\n        type: 'divider'\n      },\n      {\n        template: 'add',\n        execute: {\n          type: 'url',\n          url: '/network/firewall/rules/inet/create'\n        }\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/network/firewall/rules/inet/edit/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'arrowUp',\n        tooltip: gettext('Up'),\n        click: this.onUp.bind(this),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'arrowDown',\n        tooltip: gettext('Down'),\n        click: this.onDown.bind(this),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Iptables',\n            method: 'deleteRule',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n\n  constructor(private rpcService: RpcService, private notificationService: NotificationService) {\n    super();\n  }\n\n  onSave(action: DatatablePageActionConfig, table: Datatable) {\n    this.rpcService.request('Iptables', 'setRules', table.data).subscribe(() => {\n      this.dirty = false;\n      this.notificationService.show(NotificationType.success, gettext('Updated firewall rules.'));\n    });\n  }\n\n  onUp(action: DatatablePageActionConfig, table: Datatable) {\n    const selected = table.selection.first();\n    const index = _.findIndex(table.data, selected);\n    if (index <= 0) {\n      return;\n    }\n    // Create a working copy.\n    const modifiedData = _.cloneDeep(table.data);\n    // Relocate rule.\n    _.pullAt(modifiedData, index);\n    modifiedData.splice(index - 1, 0, selected);\n    this.updateRuleNumbers(modifiedData);\n    // Update the table data and redraw table content.\n    table.updateData(modifiedData);\n    // Mark the data as dirty.\n    this.dirty = true;\n  }\n\n  onDown(action: DatatablePageActionConfig, table: Datatable) {\n    const selected = table.selection.first();\n    const index = _.findIndex(table.data, selected);\n    if (index + 1 >= table.data.length) {\n      return;\n    }\n    // Create a working copy.\n    const modifiedData = _.cloneDeep(table.data);\n    // Relocate rule.\n    _.pullAt(modifiedData, index);\n    modifiedData.splice(index + 1, 0, selected);\n    this.updateRuleNumbers(modifiedData);\n    // Update the table data and redraw table content.\n    table.updateData(modifiedData);\n    // Mark the data as dirty.\n    this.dirty = true;\n  }\n\n  private updateRuleNumbers(rules: Array<any>) {\n    _.forEach(rules, (value, key) => {\n      _.set(value, 'rulenum', key);\n    });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DatatablePageActionConfig } from '~/app/core/components/intuition/models/datatable-page-action-config.type';\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { BaseDatatablePageComponent } from '~/app/pages/base-page-component';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { Datatable } from '~/app/shared/models/datatable.interface';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class FirewallRuleInet6DatatablePageComponent extends BaseDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    stateId: 'da278886-7c09-11ea-a477-a7d7e6d13d1d',\n    autoReload: false,\n    limit: 0,\n    remoteSorting: false,\n    remotePaging: false,\n    hasSearchField: false,\n    columns: [\n      {\n        name: gettext('Direction'),\n        prop: 'chain',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplateName: 'chip'\n      },\n      {\n        name: gettext('Action'),\n        prop: 'action',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplateName: 'chip'\n      },\n      { name: gettext('Source'), prop: 'source', flexGrow: 1, sortable: false },\n      { name: gettext('Port'), prop: 'sport', flexGrow: 1, sortable: false },\n      { name: gettext('Destination'), prop: 'destination', flexGrow: 1, sortable: false },\n      { name: gettext('Port'), prop: 'dport', flexGrow: 1, sortable: false },\n      {\n        name: gettext('Protocol'),\n        prop: 'protocol',\n        flexGrow: 1,\n        sortable: false,\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          map: {\n            /* eslint-disable @typescript-eslint/naming-convention */\n            tcp: { value: 'TCP' },\n            udp: { value: 'UDP' },\n            icmp: { value: 'ICMP' },\n            icmpv6: { value: 'ICMPv6' },\n            all: { value: gettext('All') },\n            '!tcp': { value: gettext('Not TCP') },\n            '!udp': { value: gettext('Not UDP') },\n            '!icmp': { value: gettext('Not ICMP') },\n            '!icmpv6': { value: gettext('Not ICMPv6') }\n            /* eslint-enable @typescript-eslint/naming-convention */\n          }\n        }\n      },\n      {\n        name: gettext('Extra options'),\n        prop: 'extraoptions',\n        cellTemplateName: 'text',\n        flexGrow: 1,\n        sortable: false\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'rulenum'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'Iptables',\n        get: {\n          method: 'getRules6',\n          params: {\n            type: ['userdefined']\n          }\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'iconButton',\n        icon: 'save',\n        tooltip: gettext('Save'),\n        click: this.onSave.bind(this),\n        enabledConstraints: {\n          callback: () => this.dirty\n        }\n      },\n      {\n        type: 'divider'\n      },\n      {\n        template: 'add',\n        execute: {\n          type: 'url',\n          url: '/network/firewall/rules/inet6/create'\n        }\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/network/firewall/rules/inet6/edit/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'arrowUp',\n        tooltip: gettext('Up'),\n        click: this.onUp.bind(this),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'arrowDown',\n        tooltip: gettext('Down'),\n        click: this.onDown.bind(this),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Iptables',\n            method: 'deleteRule',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n\n  constructor(private rpcService: RpcService, private notificationService: NotificationService) {\n    super();\n  }\n\n  onSave(action: DatatablePageActionConfig, table: Datatable) {\n    this.rpcService.request('Iptables', 'setRules6', table.data).subscribe(() => {\n      this.dirty = false;\n      this.notificationService.show(NotificationType.success, gettext('Updated firewall rules.'));\n    });\n  }\n\n  onUp(action: DatatablePageActionConfig, table: Datatable) {\n    const selected = table.selection.first();\n    const index = _.findIndex(table.data, selected);\n    if (index <= 0) {\n      return;\n    }\n    // Create a working copy.\n    const modifiedData = _.cloneDeep(table.data);\n    // Relocate rule.\n    _.pullAt(modifiedData, index);\n    modifiedData.splice(index - 1, 0, selected);\n    this.updateRuleNumbers(modifiedData);\n    // Update the table data and redraw table content.\n    table.updateData(modifiedData);\n    // Mark the data as dirty.\n    this.dirty = true;\n  }\n\n  onDown(action: DatatablePageActionConfig, table: Datatable) {\n    const selected = table.selection.first();\n    const index = _.findIndex(table.data, selected);\n    if (index + 1 >= table.data.length) {\n      return;\n    }\n    // Create a working copy.\n    const modifiedData = _.cloneDeep(table.data);\n    // Relocate rule.\n    _.pullAt(modifiedData, index);\n    modifiedData.splice(index + 1, 0, selected);\n    this.updateRuleNumbers(modifiedData);\n    // Update the table data and redraw table content.\n    table.updateData(modifiedData);\n    // Mark the data as dirty.\n    this.dirty = true;\n  }\n\n  private updateRuleNumbers(rules: Array<any>) {\n    _.forEach(rules, (value, key) => {\n      _.set(value, 'rulenum', key);\n    });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { TabsPageConfig } from '~/app/core/components/intuition/models/tabs-page-config.type';\n\n@Component({\n  template: '<omv-intuition-tabs-page [config]=\"this.config\"></omv-intuition-tabs-page>'\n})\nexport class FirewallRuleTabsPageComponent {\n  public config: TabsPageConfig = {\n    singleRoute: false,\n    tabs: [\n      {\n        url: '/network/firewall/rules/inet',\n        label: gettext('IPv4')\n      },\n      {\n        url: '/network/firewall/rules/inet6',\n        label: gettext('IPv6')\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class GeneralNetworkFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getGeneralSettings',\n        params:{}\n      },\n      post: {\n        method: 'setGeneralSettings',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'textInput',\n        name: 'hostname',\n        label: gettext('Hostname'),\n        hint: gettext('The hostname is a label that identifies the system to the network.'),\n        value: '',\n        validators: {\n          patternType: 'hostName',\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'domainname',\n        label: gettext('Domain name'),\n        value: '',\n        validators: {\n          patternType: 'domainName'\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class InterfaceBondFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getBondIface',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setBondIface',\n        params: {\n          wol: false\n        }\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        disabled: true,\n        submitValue: false,\n        value: 'bond',\n        store: {\n          data: [\n            ['ethernet', gettext('Ethernet')],\n            ['bond', gettext('Bond')],\n            ['vlan', gettext('VLAN')],\n            ['wifi', gettext('Wi-Fi')],\n            ['bridge', gettext('Bridge')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'devicename',\n        label: gettext('Device'),\n        value: '',\n        disabled: true,\n        modifiers: [\n          {\n            type: 'hidden',\n            constraint: { operator: 'falsy', arg0: { prop: '_editing' } }\n          }\n        ]\n      },\n      {\n        type: 'select',\n        name: 'slaves',\n        label: gettext('Slaves'),\n        placeholder: gettext('Select slave devices ...'),\n        hint: gettext('Specifies the slave devices.'),\n        multiple: true,\n        valueField: 'devicename',\n        textField: 'description',\n        value: [],\n        store: {\n          proxy: {\n            service: 'Network',\n            get: {\n              method: 'enumerateBondSlaves',\n              params: {\n                uuid: '{{ _routeParams.uuid | default(newconfobjuuid) }}',\n                unused: true\n              }\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'devicename'\n            }\n          ]\n        },\n        validators: {\n          required: true,\n          custom: [\n            {\n              constraint: {\n                operator: '>=',\n                arg0: {\n                  operator: 'length',\n                  arg0: { prop: 'slaves' }\n                },\n                arg1: 1\n              },\n              errorData: gettext('At least one network interface is required.')\n            }\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'bondmode',\n        label: gettext('Mode'),\n        value: 1,\n        store: {\n          data: [\n            [0, 'balance-rr'],\n            [1, 'active-backup'],\n            [2, 'balance-xor'],\n            [3, 'broadcast'],\n            [4, '802.3ad'],\n            [5, 'balance-tlb'],\n            [6, 'balance-alb']\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'select',\n        name: 'bondtransmithashpolicy',\n        label: gettext('Transmit Hash Policy'),\n        value: 'layer2',\n        store: {\n          data: [\n            ['layer2', 'layer2'],\n            ['layer2+3', 'layer2+3'],\n            ['layer3+4', 'layer3+4'],\n            ['encap2+3', 'encap2+3'],\n            ['encap3+4', 'encap3+4']\n          ]\n        },\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: {\n              operator: 'in',\n              arg0: { prop: 'bondmode' },\n              arg1: [2, 4, 5]\n            }\n          }\n        ]\n      },\n      {\n        type: 'textInput',\n        name: 'bondprimary',\n        label: gettext('Primary'),\n        hint: gettext('Specifies which slave is the primary device.'),\n        value: '',\n        modifiers: [\n          {\n            type: 'value',\n            typeConfig: '{{ slaves | get(0) }}',\n            constraint: {\n              operator: 'and',\n              arg0: {\n                operator: 'in',\n                arg0: { prop: 'bondmode' },\n                arg1: [1, 5, 6]\n              },\n              arg1: {\n                operator: 'and',\n                arg0: { operator: 'notEmpty', arg0: { prop: 'slaves' } },\n                arg1: { operator: 'empty', arg0: { prop: 'bondprimary' } }\n              }\n            }\n          },\n          {\n            type: 'value',\n            typeConfig: '',\n            constraint: {\n              operator: 'not',\n              arg0: {\n                operator: 'in',\n                arg0: { prop: 'bondmode' },\n                arg1: [1, 5, 6]\n              }\n            }\n          },\n          {\n            type: 'enabled',\n            constraint: {\n              operator: 'in',\n              arg0: { prop: 'bondmode' },\n              arg1: [1, 5, 6]\n            }\n          }\n        ],\n        validators: {\n          requiredIf: {\n            operator: 'in',\n            arg0: { prop: 'bondmode' },\n            arg1: [1, 5, 6]\n          },\n          custom: [\n            {\n              constraint: {\n                operator: 'if',\n                arg0: {\n                  operator: 'and',\n                  arg0: { operator: 'notEmpty', arg0: { prop: 'slaves' } },\n                  arg1: {\n                    operator: 'in',\n                    arg0: { prop: 'bondmode' },\n                    arg1: [1, 5, 6]\n                  }\n                },\n                arg1: {\n                  operator: 'and',\n                  arg0: { operator: 'notEmpty', arg0: { prop: 'bondprimary' } },\n                  arg1: {\n                    operator: 'in',\n                    arg0: { prop: 'bondprimary' },\n                    arg1: { prop: 'slaves' }\n                  }\n                }\n              },\n              errorData: gettext(\n                'The value must be on of the slave network interfaces {{ slaves | join(\", \") }}.'\n              )\n            },\n            {\n              constraint: {\n                operator: 'if',\n                arg0: {\n                  operator: 'and',\n                  arg0: { operator: 'empty', arg0: { prop: 'slaves' } },\n                  arg1: {\n                    operator: 'in',\n                    arg0: { prop: 'bondmode' },\n                    arg1: [1, 5, 6]\n                  }\n                },\n                arg1: {\n                  operator: 'in',\n                  arg0: { prop: 'bondprimary' },\n                  arg1: { prop: 'slaves' }\n                }\n              },\n              errorData: gettext('The value must be on of the slave network interfaces.')\n            }\n          ]\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'bondmiimon',\n        label: gettext('MII monitoring frequency'),\n        hint: gettext('Specifies the MII link monitoring frequency in milliseconds.'),\n        value: 100,\n        validators: {\n          min: 0,\n          patternType: 'integer'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'bonddowndelay',\n        label: gettext('Down delay'),\n        hint: gettext(\n          'Specifies the time, in milliseconds, to wait before disabling a slave after a link failure has been detected.'\n        ),\n        value: 200,\n        validators: {\n          min: 0,\n          patternType: 'integer'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'bondupdelay',\n        label: gettext('Up delay'),\n        hint: gettext(\n          'Specifies the time, in milliseconds, to wait before enabling a slave after a link recovery has been detected.'\n        ),\n        value: 200,\n        validators: {\n          min: 0,\n          patternType: 'integer'\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv4')\n      },\n      {\n        type: 'select',\n        name: 'method',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv4',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'textInput',\n        name: 'netmask',\n        label: gettext('Netmask'),\n        value: '',\n        validators: {\n          patternType: 'netmask',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv4'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric',\n            label: gettext('Metric'),\n            value: 0,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv6')\n      },\n      {\n        type: 'select',\n        name: 'method6',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['auto', gettext('Auto')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address6',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv6',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'numberInput',\n        name: 'netmask6',\n        label: gettext('Prefix length'),\n        value: 64,\n        validators: {\n          min: 0,\n          max: 128,\n          patternType: 'integer',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway6',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv6'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric6',\n            label: gettext('Metric'),\n            value: 1,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('Advanced settings')\n      },\n      {\n        type: 'textInput',\n        name: 'dnsnameservers',\n        label: gettext('DNS servers'),\n        hint: gettext('IP addresses of domain name servers used to resolve host names.'),\n        value: '',\n        validators: {\n          patternType: 'ipList'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnssearch',\n        label: gettext('Search domains'),\n        hint: gettext('Domains used when resolving host names.'),\n        value: '',\n        validators: {\n          patternType: 'domainNameList'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'mtu',\n        label: gettext('MTU'),\n        hint: gettext(\n          'The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value.'\n        ),\n        value: 0,\n        validators: {\n          min: 0,\n          max: 65535,\n          patternType: 'integer'\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class InterfaceBridgeFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getBridgeIface',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setBridgeIface',\n        params: {\n          wol: false\n        }\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        disabled: true,\n        submitValue: false,\n        value: 'bridge',\n        store: {\n          data: [\n            ['ethernet', gettext('Ethernet')],\n            ['bond', gettext('Bond')],\n            ['vlan', gettext('VLAN')],\n            ['wifi', gettext('Wi-Fi')],\n            ['bridge', gettext('Bridge')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'devicename',\n        label: gettext('Device'),\n        value: '',\n        disabled: true,\n        modifiers: [\n          {\n            type: 'hidden',\n            constraint: { operator: 'falsy', arg0: { prop: '_editing' } }\n          }\n        ]\n      },\n      {\n        type: 'select',\n        name: 'slaves',\n        label: gettext('Interfaces'),\n        placeholder: gettext('Select interface devices ...'),\n        hint: gettext('Specifies the interface devices.'),\n        multiple: true,\n        valueField: 'devicename',\n        textField: 'description',\n        value: [],\n        store: {\n          proxy: {\n            service: 'Network',\n            get: {\n              method: 'enumerateBridgeSlaves',\n              params: {\n                uuid: '{{ _routeParams.uuid | default(newconfobjuuid) }}',\n                unused: true\n              }\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'devicename'\n            }\n          ]\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv4')\n      },\n      {\n        type: 'select',\n        name: 'method',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv4',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'textInput',\n        name: 'netmask',\n        label: gettext('Netmask'),\n        value: '',\n        validators: {\n          patternType: 'netmask',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv4'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric',\n            label: gettext('Metric'),\n            value: 0,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv6')\n      },\n      {\n        type: 'select',\n        name: 'method6',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['auto', gettext('Auto')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address6',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv6',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'numberInput',\n        name: 'netmask6',\n        label: gettext('Prefix length'),\n        value: 64,\n        validators: {\n          min: 0,\n          max: 128,\n          patternType: 'integer',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway6',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv6'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric6',\n            label: gettext('Metric'),\n            value: 1,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('Advanced settings')\n      },\n      {\n        type: 'textInput',\n        name: 'dnsnameservers',\n        label: gettext('DNS servers'),\n        hint: gettext('IP addresses of domain name servers used to resolve host names.'),\n        value: '',\n        validators: {\n          patternType: 'ipList'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnssearch',\n        label: gettext('Search domains'),\n        hint: gettext('Domains used when resolving host names.'),\n        value: '',\n        validators: {\n          patternType: 'domainNameList'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'mtu',\n        label: gettext('MTU'),\n        hint: gettext(\n          'The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value.'\n        ),\n        value: 0,\n        validators: {\n          min: 0,\n          max: 65535,\n          patternType: 'integer'\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template:\n    '<omv-intuition-datatable-page #page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class InterfaceDatatablePageComponent extends BaseFormPageComponent {\n  public config: DatatablePageConfig = {\n    stateId: '1c782151-4393-493b-9767-257620370fb2',\n    autoReload: false,\n    remoteSorting: true,\n    remotePaging: true,\n    hasSearchField: true,\n    rowEnumFmt: '{{ devicename }}',\n    columns: [\n      { name: gettext('Device'), prop: 'devicename', flexGrow: 1, sortable: true },\n      {\n        name: gettext('Type'),\n        prop: 'type',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          map: {\n            ethernet: { value: gettext('Ethernet') },\n            bond: { value: gettext('Bond') },\n            vlan: { value: gettext('VLAN') },\n            wifi: { value: gettext('Wi-Fi') },\n            bridge: { value: gettext('Bridge') }\n          }\n        }\n      },\n      {\n        name: gettext('Method'),\n        prop: 'method',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          // eslint-disable-next-line max-len\n          'IPv4: {{ method | replace(\"manual\", \"Disabled\") | replace(\"dhcp\", \"DHCP\") | replace(\"auto\", \"Auto\") | replace(\"static\", \"Static\") | translate }}<br>IPv6: {{ method6 | replace(\"manual\", \"Disabled\") | replace(\"dhcp\", \"DHCP\") | replace(\"auto\", \"Auto\") | replace(\"static\", \"Static\") | translate }}'\n      },\n      {\n        name: gettext('Address'),\n        prop: 'address',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          'IPv4: {{ address | default(\"-\", true) }}<br>IPv6: {{ address6 | default(\"-\", true) }}'\n      },\n      {\n        name: gettext('Netmask'),\n        prop: 'netmask',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          'IPv4: {{ netmask | default(\"-\", true) }}<br>IPv6: {{ netmask6 | default(\"-\", true) }}'\n      },\n      {\n        name: gettext('Gateway'),\n        prop: 'gateway',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          'IPv4: {{ gateway | default(\"-\", true) }}<br>IPv6: {{ gateway6 | default(\"-\", true) }}'\n      },\n      { name: gettext('MTU'), prop: 'mtu', flexGrow: 1, sortable: true },\n      {\n        name: gettext('WOL'),\n        prop: 'wol',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'checkIcon'\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'devicename'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'Network',\n        get: {\n          method: 'getInterfaceList'\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'menu',\n        icon: 'add',\n        tooltip: gettext('Create'),\n        actions: [\n          {\n            text: gettext('Ethernet'),\n            icon: 'mdi:ethernet',\n            execute: {\n              type: 'url',\n              url: '/network/interfaces/ethernet/create'\n            }\n          },\n          {\n            text: gettext('Wi-Fi'),\n            icon: 'mdi:wifi',\n            execute: {\n              type: 'url',\n              url: '/network/interfaces/wifi/create'\n            }\n          },\n          {\n            text: gettext('Bond'),\n            icon: 'mdi:link-variant',\n            execute: {\n              type: 'url',\n              url: '/network/interfaces/bond/create'\n            }\n          },\n          {\n            text: gettext('VLAN'),\n            icon: 'mdi:lan',\n            execute: {\n              type: 'url',\n              url: '/network/interfaces/vlan/create'\n            }\n          },\n          {\n            text: gettext('Bridge'),\n            icon: 'mdi:bridge',\n            execute: {\n              type: 'url',\n              url: '/network/interfaces/bridge/create'\n            }\n          }\n        ]\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces/{{ _selected[0].type }}/edit/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'details',\n        tooltip: gettext('Show details'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'url',\n          url: '/network/interfaces/details/{{ _selected[0].devicename }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'search',\n        tooltip: gettext('Identify'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1,\n          constraint: [{ operator: 'eq', arg0: { prop: 'type' }, arg1: 'ethernet' }]\n        },\n        execute: {\n          type: 'formDialog',\n          formDialog: {\n            title: gettext('Identify network interface'),\n            fields: [\n              {\n                type: 'textInput',\n                name: 'devicename',\n                label: gettext('Name'),\n                readonly: true,\n                value: '{{ _selected[0].devicename }}'\n              },\n              {\n                type: 'numberInput',\n                name: 'seconds',\n                label: gettext('Seconds'),\n                hint: gettext(\n                  'Length of time in seconds to blink one or more LEDs on the specific ethernet port.'\n                ),\n                validators: {\n                  required: true,\n                  min: 1,\n                  max: 30,\n                  patternType: 'integer'\n                },\n                value: 10\n              }\n            ],\n            buttons: {\n              submit: {\n                text: gettext('Start'),\n                execute: {\n                  type: 'request',\n                  request: {\n                    service: 'Network',\n                    method: 'identify',\n                    task: true,\n                    progressMessage: gettext('Please wait, identifying network device ...')\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Network',\n            method: 'deleteInterface',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class InterfaceDetailsFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getInformation',\n        params: {\n          devicename: '{{ _routeParams.devicename }}'\n        },\n        transform: {\n          prefix: '{{ prefix | replace(\"-1\", \"\") }}',\n          prefix6: '{{ prefix6 | replace(\"-1\", \"\") }}'\n        }\n      }\n    },\n    fields: [\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        disabled: true,\n        submitValue: false,\n        value: 'bond',\n        store: {\n          data: [\n            ['ethernet', gettext('Ethernet')],\n            ['bond', gettext('Bond')],\n            ['vlan', gettext('VLAN')],\n            ['wifi', gettext('Wi-Fi')],\n            ['bridge', gettext('Bridge')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'devicename',\n        label: gettext('Device'),\n        disabled: true\n      },\n      {\n        type: 'textInput',\n        name: 'ether',\n        label: gettext('Hardware Address'),\n        disabled: true,\n        hasCopyToClipboardButton: true\n      },\n      {\n        type: 'textInput',\n        name: 'mtu',\n        label: gettext('MTU'),\n        disabled: true\n      },\n      {\n        type: 'textInput',\n        name: 'state',\n        label: gettext('State'),\n        disabled: true\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv4')\n      },\n      {\n        type: 'textInput',\n        name: 'address',\n        label: gettext('Address'),\n        disabled: true,\n        hasCopyToClipboardButton: true\n      },\n      {\n        type: 'textInput',\n        name: 'prefix',\n        label: gettext('Prefix length'),\n        disabled: true\n      },\n      {\n        type: 'textInput',\n        name: 'netmask',\n        label: gettext('Prefix address'),\n        disabled: true\n      },\n      {\n        type: 'textInput',\n        name: 'gateway',\n        label: gettext('Gateway'),\n        disabled: true,\n        hasCopyToClipboardButton: true\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv6')\n      },\n      {\n        type: 'textInput',\n        name: 'address6',\n        label: gettext('Address'),\n        disabled: true,\n        hasCopyToClipboardButton: true\n      },\n      {\n        type: 'textInput',\n        name: 'prefix6',\n        label: gettext('Prefix length'),\n        disabled: true\n      },\n      {\n        type: 'textInput',\n        name: 'netmask6',\n        label: gettext('Prefix address'),\n        disabled: true\n      },\n      {\n        type: 'textInput',\n        name: 'gateway6',\n        label: gettext('Gateway'),\n        disabled: true,\n        hasCopyToClipboardButton: true\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class InterfaceEthernetFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getEthernetIface',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setEthernetIface'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        disabled: true,\n        submitValue: false,\n        value: 'ethernet',\n        store: {\n          data: [\n            ['ethernet', gettext('Ethernet')],\n            ['bond', gettext('Bond')],\n            ['vlan', gettext('VLAN')],\n            ['wifi', gettext('Wi-Fi')],\n            ['bridge', gettext('Bridge')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'devicename',\n        label: gettext('Device'),\n        placeholder: gettext('Select a device ...'),\n        textField: 'description',\n        valueField: 'devicename',\n        store: {\n          proxy: {\n            service: 'Network',\n            get: {\n              method:\n                '{{ \"enumerateDevices\" if _routeConfig.data.editing else \"getEthernetCandidates\" }}'\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'devicename'\n            }\n          ]\n        },\n        value: '',\n        disabled: '{{ _routeConfig.data.editing | toboolean }}',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv4')\n      },\n      {\n        type: 'select',\n        name: 'method',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv4',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'textInput',\n        name: 'netmask',\n        label: gettext('Netmask'),\n        value: '',\n        validators: {\n          patternType: 'netmask',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv4'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric',\n            label: gettext('Metric'),\n            value: 0,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv6')\n      },\n      {\n        type: 'select',\n        name: 'method6',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['auto', gettext('Auto')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address6',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv6',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'numberInput',\n        name: 'netmask6',\n        label: gettext('Prefix length'),\n        value: 64,\n        validators: {\n          min: 0,\n          max: 128,\n          patternType: 'integer',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway6',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv6'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric6',\n            label: gettext('Metric'),\n            value: 1,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('Advanced settings')\n      },\n      {\n        type: 'textInput',\n        name: 'altmacaddress',\n        label: gettext('MAC address'),\n        hint: gettext('Force a specific MAC address on this interface.'),\n        value: '',\n        validators: {\n          patternType: 'macAddress'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnsnameservers',\n        label: gettext('DNS servers'),\n        hint: gettext('IP addresses of domain name servers used to resolve host names.'),\n        value: '',\n        validators: {\n          patternType: 'ipList'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnssearch',\n        label: gettext('Search domains'),\n        hint: gettext('Domains used when resolving host names.'),\n        value: '',\n        validators: {\n          patternType: 'domainNameList'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'mtu',\n        label: gettext('MTU'),\n        hint: gettext(\n          'The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value.'\n        ),\n        value: 0,\n        validators: {\n          min: 0,\n          max: 65535,\n          patternType: 'integer'\n        }\n      },\n      {\n        type: 'checkbox',\n        name: 'wol',\n        label: gettext('Wake-on-LAN'),\n        value: false\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class InterfaceVlanFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getVlanIface',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setVlanIface',\n        params: {\n          wol: false\n        }\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        disabled: true,\n        submitValue: false,\n        value: 'vlan',\n        store: {\n          data: [\n            ['ethernet', gettext('Ethernet')],\n            ['bond', gettext('Bond')],\n            ['vlan', gettext('VLAN')],\n            ['wifi', gettext('Wi-Fi')],\n            ['bridge', gettext('Bridge')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'devicename',\n        label: gettext('Device'),\n        value: '',\n        disabled: true,\n        modifiers: [\n          {\n            type: 'hidden',\n            constraint: { operator: 'falsy', arg0: { prop: '_editing' } }\n          }\n        ]\n      },\n      {\n        type: 'select',\n        name: 'vlanrawdevice',\n        label: gettext('Parent device'),\n        placeholder: gettext('Select a device ...'),\n        textField: 'description',\n        valueField: 'devicename',\n        store: {\n          proxy: {\n            service: 'Network',\n            get: {\n              method: 'getVlanCandidates'\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'devicename'\n            }\n          ]\n        },\n        value: '',\n        disabled: '{{ _routeConfig.data.editing | toboolean }}',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'vlanid',\n        label: gettext('VLAN id'),\n        value: 1,\n        validators: {\n          required: true,\n          min: 1,\n          max: 4095,\n          patternType: 'integer'\n        },\n        disabled: '{{ _routeConfig.data.editing | toboolean }}'\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv4')\n      },\n      {\n        type: 'select',\n        name: 'method',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv4',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'textInput',\n        name: 'netmask',\n        label: gettext('Netmask'),\n        value: '',\n        validators: {\n          patternType: 'netmask',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv4'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric',\n            label: gettext('Metric'),\n            value: 0,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv6')\n      },\n      {\n        type: 'select',\n        name: 'method6',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['auto', gettext('Auto')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address6',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv6',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'numberInput',\n        name: 'netmask6',\n        label: gettext('Prefix length'),\n        value: 64,\n        validators: {\n          min: 0,\n          max: 128,\n          patternType: 'integer',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway6',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv6'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric6',\n            label: gettext('Metric'),\n            value: 1,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('Advanced settings')\n      },\n      {\n        type: 'textInput',\n        name: 'altmacaddress',\n        label: gettext('MAC address'),\n        hint: gettext('Force a specific MAC address on this interface.'),\n        value: '',\n        validators: {\n          patternType: 'macAddress'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnsnameservers',\n        label: gettext('DNS servers'),\n        hint: gettext('IP addresses of domain name servers used to resolve host names.'),\n        value: '',\n        validators: {\n          patternType: 'ipList'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnssearch',\n        label: gettext('Search domains'),\n        hint: gettext('Domains used when resolving host names.'),\n        value: '',\n        validators: {\n          patternType: 'domainNameList'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'mtu',\n        label: gettext('MTU'),\n        hint: gettext(\n          'The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value.'\n        ),\n        value: 0,\n        validators: {\n          min: 0,\n          max: 65535,\n          patternType: 'integer'\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class InterfaceWifiFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getWirelessIface',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setWirelessIface'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        disabled: true,\n        submitValue: false,\n        value: 'wifi',\n        store: {\n          data: [\n            ['ethernet', gettext('Ethernet')],\n            ['bond', gettext('Bond')],\n            ['vlan', gettext('VLAN')],\n            ['wifi', gettext('Wi-Fi')],\n            ['bridge', gettext('Bridge')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'devicename',\n        label: gettext('Device'),\n        placeholder: gettext('Select a device ...'),\n        textField: 'description',\n        valueField: 'devicename',\n        store: {\n          proxy: {\n            service: 'Network',\n            get: {\n              method:\n                '{{ \"enumerateDevices\" if _routeConfig.data.editing else \"getWirelessCandidates\" }}'\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'devicename'\n            }\n          ]\n        },\n        value: '',\n        disabled: '{{ _routeConfig.data.editing | toboolean }}',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'wpassid',\n        label: gettext('SSID'),\n        value: '',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'select',\n        name: 'keymanagement',\n        label: gettext('Security'),\n        value: 'psk',\n        store: {\n          data: [\n            ['psk', gettext('WPA2-Personal')],\n            ['sae', gettext('WPA3-Personal')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'wpapsk',\n        label: gettext('Password'),\n        value: '',\n        autocomplete: 'new-password',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'checkbox',\n        name: 'hidden',\n        label: gettext('Connect to hidden network'),\n        hint: gettext('Connect even if the network is not broadcasting its SSID name.'),\n        value: false\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv4')\n      },\n      {\n        type: 'select',\n        name: 'method',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv4',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'textInput',\n        name: 'netmask',\n        label: gettext('Netmask'),\n        value: '',\n        validators: {\n          patternType: 'netmask',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv4'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric',\n            label: gettext('Metric'),\n            value: 0,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('IPv6')\n      },\n      {\n        type: 'select',\n        name: 'method6',\n        label: gettext('Method'),\n        value: 'manual',\n        store: {\n          data: [\n            ['manual', gettext('Disabled')],\n            ['dhcp', gettext('DHCP')],\n            ['auto', gettext('Auto')],\n            ['static', gettext('Static')]\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'address6',\n        label: gettext('Address'),\n        value: '',\n        validators: {\n          patternType: 'ipv6',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'numberInput',\n        name: 'netmask6',\n        label: gettext('Prefix length'),\n        value: 64,\n        validators: {\n          min: 0,\n          max: 128,\n          patternType: 'integer',\n          requiredIf: { operator: 'eq', arg0: { prop: 'method6' }, arg1: 'static' }\n        },\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'textInput',\n            name: 'gateway6',\n            label: gettext('Gateway'),\n            value: '',\n            validators: {\n              patternType: 'ipv6'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ],\n            flex: 75\n          },\n          {\n            type: 'numberInput',\n            name: 'routemetric6',\n            label: gettext('Metric'),\n            value: 1,\n            validators: {\n              min: 0,\n              max: 65535,\n              patternType: 'integer'\n            },\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'method6' }, arg1: 'static' }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('Advanced settings')\n      },\n      {\n        type: 'textInput',\n        name: 'altmacaddress',\n        label: gettext('MAC address'),\n        hint: gettext('Force a specific MAC address on this interface.'),\n        value: '',\n        validators: {\n          patternType: 'macAddress'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnsnameservers',\n        label: gettext('DNS servers'),\n        hint: gettext('IP addresses of domain name servers used to resolve host names.'),\n        value: '',\n        validators: {\n          patternType: 'ipList'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'dnssearch',\n        label: gettext('Search domains'),\n        hint: gettext('Domains used when resolving host names.'),\n        value: '',\n        validators: {\n          patternType: 'domainNameList'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'mtu',\n        label: gettext('MTU'),\n        hint: gettext(\n          'The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value.'\n        ),\n        value: 0,\n        validators: {\n          min: 0,\n          max: 65535,\n          patternType: 'integer'\n        }\n      },\n      {\n        type: 'checkbox',\n        name: 'wol',\n        label: gettext('Wake-on-LAN'),\n        value: false\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network/interfaces'\n        }\n      }\n    ]\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\nimport { FirewallRuleFormPageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-form-page.component';\nimport { FirewallRuleInetDatatablePageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-inet-datatable-page.component';\nimport { FirewallRuleInet6DatatablePageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-inet6-datatable-page.component';\nimport { FirewallRuleTabsPageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-tabs-page.component';\nimport { GeneralNetworkFormPageComponent } from '~/app/pages/network/general/general-network-form-page.component';\nimport { InterfaceBondFormPageComponent } from '~/app/pages/network/interfaces/interface-bond-form-page.component';\nimport { InterfaceBridgeFormPageComponent } from '~/app/pages/network/interfaces/interface-bridge-form-page.component';\nimport { InterfaceDatatablePageComponent } from '~/app/pages/network/interfaces/interface-datatable-page.component';\nimport { InterfaceDetailsFormPageComponent } from '~/app/pages/network/interfaces/interface-details-form-page.component';\nimport { InterfaceEthernetFormPageComponent } from '~/app/pages/network/interfaces/interface-ethernet-form-page.component';\nimport { InterfaceVlanFormPageComponent } from '~/app/pages/network/interfaces/interface-vlan-form-page.component';\nimport { InterfaceWifiFormPageComponent } from '~/app/pages/network/interfaces/interface-wifi-form-page.component';\nimport { ProxyFormPageComponent } from '~/app/pages/network/proxy/proxy-form-page.component';\nimport { IsDirtyGuardService } from '~/app/shared/services/is-dirty-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NavigationPageComponent\n  },\n  {\n    path: 'general',\n    component: GeneralNetworkFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('General'),\n      notificationTitle: gettext('Updated network settings.'),\n      editing: true\n    }\n  },\n  {\n    path: 'interfaces',\n    data: { title: gettext('Interfaces') },\n    children: [\n      { path: '', component: InterfaceDatatablePageComponent },\n      {\n        path: 'details/:devicename',\n        component: InterfaceDetailsFormPageComponent,\n        data: { title: gettext('Details'), editing: true }\n      },\n      {\n        path: 'ethernet/create',\n        component: InterfaceEthernetFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created wired network connection.')\n        }\n      },\n      {\n        path: 'ethernet/edit/:uuid',\n        component: InterfaceEthernetFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated wired network connection \"{{ devicename }}\".')\n        }\n      },\n      {\n        path: 'wifi/create',\n        component: InterfaceWifiFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created wireless network connection.')\n        }\n      },\n      {\n        path: 'wifi/edit/:uuid',\n        component: InterfaceWifiFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated wireless network connection \"{{ devicename }}\".')\n        }\n      },\n      {\n        path: 'bond/create',\n        component: InterfaceBondFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created bond network connection.')\n        }\n      },\n      {\n        path: 'bond/edit/:uuid',\n        component: InterfaceBondFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated bond network connection \"{{ devicename }}\".')\n        }\n      },\n      {\n        path: 'vlan/create',\n        component: InterfaceVlanFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created VLAN network connection.')\n        }\n      },\n      {\n        path: 'vlan/edit/:uuid',\n        component: InterfaceVlanFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated VLAN network connection \"{{ devicename }}\".')\n        }\n      },\n      {\n        path: 'bridge/create',\n        component: InterfaceBridgeFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created bridge network connection.')\n        }\n      },\n      {\n        path: 'bridge/edit/:uuid',\n        component: InterfaceBridgeFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated bridge network connection \"{{ devicename }}\".')\n        }\n      }\n    ]\n  },\n  {\n    path: 'proxy',\n    component: ProxyFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Proxy'),\n      notificationTitle: gettext('Updated proxy settings.'),\n      editing: true\n    }\n  },\n  {\n    path: 'firewall',\n    data: { title: gettext('Firewall') },\n    children: [\n      { path: '', component: NavigationPageComponent },\n      {\n        path: 'rules',\n        data: { title: gettext('Rules') },\n        children: [\n          {\n            path: '',\n            component: FirewallRuleTabsPageComponent,\n            children: [\n              {\n                path: '',\n                redirectTo: 'inet',\n                pathMatch: 'full'\n              },\n              {\n                path: 'inet',\n                component: FirewallRuleInetDatatablePageComponent,\n                canDeactivate: [IsDirtyGuardService]\n              },\n              {\n                path: 'inet6',\n                component: FirewallRuleInet6DatatablePageComponent,\n                canDeactivate: [IsDirtyGuardService]\n              }\n            ]\n          },\n          {\n            path: ':family/create',\n            component: FirewallRuleFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Create'),\n              editing: false,\n              notificationTitle: gettext('Created firewall rule.')\n            }\n          },\n          {\n            path: ':family/edit/:uuid',\n            component: FirewallRuleFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Edit'),\n              editing: true,\n              notificationTitle: gettext('Updated firewall rule.')\n            }\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n  providers: [\n    {\n      provide: ROUTES,\n      multi: true,\n      useFactory: (routeConfigService: RouteConfigService): Routes => {\n        routeConfigService.inject('network', routes);\n        return routes;\n      },\n      deps: [RouteConfigService]\n    }\n  ]\n})\nexport class NetworkRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslocoModule } from '@ngneat/transloco';\n\nimport { CoreModule } from '~/app/core/core.module';\nimport { MaterialModule } from '~/app/material.module';\nimport { FirewallRuleFormPageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-form-page.component';\nimport { FirewallRuleInetDatatablePageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-inet-datatable-page.component';\nimport { FirewallRuleInet6DatatablePageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-inet6-datatable-page.component';\nimport { FirewallRuleTabsPageComponent } from '~/app/pages/network/firewall/rules/firewall-rule-tabs-page.component';\nimport { GeneralNetworkFormPageComponent } from '~/app/pages/network/general/general-network-form-page.component';\nimport { InterfaceBondFormPageComponent } from '~/app/pages/network/interfaces/interface-bond-form-page.component';\nimport { InterfaceBridgeFormPageComponent } from '~/app/pages/network/interfaces/interface-bridge-form-page.component';\nimport { InterfaceDatatablePageComponent } from '~/app/pages/network/interfaces/interface-datatable-page.component';\nimport { InterfaceDetailsFormPageComponent } from '~/app/pages/network/interfaces/interface-details-form-page.component';\nimport { InterfaceEthernetFormPageComponent } from '~/app/pages/network/interfaces/interface-ethernet-form-page.component';\nimport { InterfaceVlanFormPageComponent } from '~/app/pages/network/interfaces/interface-vlan-form-page.component';\nimport { InterfaceWifiFormPageComponent } from '~/app/pages/network/interfaces/interface-wifi-form-page.component';\nimport { NetworkRoutingModule } from '~/app/pages/network/network-routing.module';\nimport { ProxyFormPageComponent } from '~/app/pages/network/proxy/proxy-form-page.component';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    GeneralNetworkFormPageComponent,\n    ProxyFormPageComponent,\n    InterfaceDatatablePageComponent,\n    InterfaceEthernetFormPageComponent,\n    InterfaceWifiFormPageComponent,\n    InterfaceBondFormPageComponent,\n    InterfaceVlanFormPageComponent,\n    FirewallRuleFormPageComponent,\n    FirewallRuleTabsPageComponent,\n    FirewallRuleInetDatatablePageComponent,\n    FirewallRuleInet6DatatablePageComponent,\n    InterfaceBridgeFormPageComponent,\n    InterfaceDetailsFormPageComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MaterialModule,\n    SharedModule,\n    NetworkRoutingModule,\n    TranslocoModule\n  ]\n})\nexport class NetworkModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class ProxyFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Network',\n      get: {\n        method: 'getProxy'\n      },\n      post: {\n        method: 'setProxy'\n      }\n    },\n    fields: [\n      {\n        type: 'paragraph',\n        title: gettext('HTTP-Proxy')\n      },\n      {\n        type: 'checkbox',\n        name: 'httpenable',\n        label: gettext('Enabled'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'httphost',\n        label: gettext('Host'),\n        value: '',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpenable' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'httpenable' } }\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'httpport',\n        label: gettext('Port'),\n        value: 8080,\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'port',\n          requiredIf: { operator: 'truthy', arg0: { prop: 'httpenable' } },\n          min: 1,\n          max: 65535\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'httpusername',\n        label: gettext('User name'),\n        value: '',\n        autocomplete: 'off',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'userName'\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'httppassword',\n        label: gettext('Password'),\n        value: '',\n        autocomplete: 'new-password',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpenable' } }\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('HTTPS-Proxy')\n      },\n      {\n        type: 'checkbox',\n        name: 'httpsenable',\n        label: gettext('Enabled'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'httpshost',\n        label: gettext('Host'),\n        value: '',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpsenable' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'httpsenable' } }\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'httpsport',\n        label: gettext('Port'),\n        value: 8080,\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpsenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'port',\n          requiredIf: { operator: 'truthy', arg0: { prop: 'httpsenable' } },\n          min: 1,\n          max: 65535\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'httpsusername',\n        label: gettext('User name'),\n        value: '',\n        autocomplete: 'off',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpsenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'userName'\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'httpspassword',\n        label: gettext('Password'),\n        value: '',\n        autocomplete: 'new-password',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'httpsenable' } }\n          }\n        ]\n      },\n      {\n        type: 'divider',\n        title: gettext('FTP-Proxy')\n      },\n      {\n        type: 'checkbox',\n        name: 'ftpenable',\n        label: gettext('Enabled'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'ftphost',\n        label: gettext('Host'),\n        value: '',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'ftpenable' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'ftpenable' } }\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'ftpport',\n        label: gettext('Port'),\n        value: 8080,\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'ftpenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'port',\n          requiredIf: { operator: 'truthy', arg0: { prop: 'ftpenable' } },\n          min: 1,\n          max: 65535\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'ftpusername',\n        label: gettext('User name'),\n        value: '',\n        autocomplete: 'off',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'ftpenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'userName'\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'ftppassword',\n        label: gettext('Password'),\n        value: '',\n        autocomplete: 'new-password',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'ftpenable' } }\n          }\n        ]\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/network'\n        }\n      }\n    ]\n  };\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}