{"version":3,"file":"src_app_pages_diagnostics_diagnostics_module_ts.js","mappings":"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","sources":["./src/app/pages/diagnostics/diagnostics-routing.module.ts","./src/app/pages/diagnostics/diagnostics.module.ts","./src/app/pages/diagnostics/performance-statistics/performance-statistic-cpu-rrd-page.component.ts","./src/app/pages/diagnostics/performance-statistics/performance-statistic-du-rrd-page.component.ts","./src/app/pages/diagnostics/performance-statistics/performance-statistic-load-rrd-page.component.ts","./src/app/pages/diagnostics/performance-statistics/performance-statistic-memory-rrd-page.component.ts","./src/app/pages/diagnostics/performance-statistics/performance-statistic-network-rrd-page.component.ts","./src/app/pages/diagnostics/performance-statistics/performance-statistic-uptime-rrd-page.component.ts","./src/app/pages/diagnostics/processes/processes-text-page.component.ts","./src/app/pages/diagnostics/report/report-text-page.component.ts","./src/app/pages/diagnostics/services/service-smb-text-page.component.ts","./src/app/pages/diagnostics/services/service-ssh-text-page.component.ts","./src/app/pages/diagnostics/system-information/system-information-datatable-page.component.ts","./src/app/pages/diagnostics/system-logs/system-logs-list-page.component.ts","./src/app/pages/diagnostics/system-logs/system-logs-remote-form-page.component.ts"],"sourcesContent":["/* eslint-disable max-len */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\nimport { PerformanceStatisticCpuRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-cpu-rrd-page.component';\nimport { PerformanceStatisticDuRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-du-rrd-page.component';\nimport { PerformanceStatisticLoadRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-load-rrd-page.component';\nimport { PerformanceStatisticMemoryRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-memory-rrd-page.component';\nimport { PerformanceStatisticNetworkRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-network-rrd-page.component';\nimport { PerformanceStatisticUptimeRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-uptime-rrd-page.component';\nimport { ProcessesTextPageComponent } from '~/app/pages/diagnostics/processes/processes-text-page.component';\nimport { ReportTextPageComponent } from '~/app/pages/diagnostics/report/report-text-page.component';\nimport { ServiceSmbTextPageComponent } from '~/app/pages/diagnostics/services/service-smb-text-page.component';\nimport { ServiceSshTextPageComponent } from '~/app/pages/diagnostics/services/service-ssh-text-page.component';\nimport { SystemInformationDatatablePageComponent } from '~/app/pages/diagnostics/system-information/system-information-datatable-page.component';\nimport { SystemLogsListPageComponent } from '~/app/pages/diagnostics/system-logs/system-logs-list-page.component';\nimport { SystemLogsRemoteFormPageComponent } from '~/app/pages/diagnostics/system-logs/system-logs-remote-form-page.component';\nimport { IsDirtyGuardService } from '~/app/shared/services/is-dirty-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NavigationPageComponent\n  },\n  {\n    path: 'system-information',\n    component: SystemInformationDatatablePageComponent,\n    data: { title: gettext('System Information') }\n  },\n  {\n    path: 'processes',\n    component: ProcessesTextPageComponent,\n    data: { title: gettext('Processes') }\n  },\n  {\n    path: 'report',\n    component: ReportTextPageComponent,\n    data: { title: gettext('Report') }\n  },\n  {\n    path: 'system-logs',\n    data: { title: gettext('System Logs') },\n    children: [\n      { path: '', component: NavigationPageComponent },\n      {\n        path: 'logs',\n        component: SystemLogsListPageComponent,\n        data: { title: gettext('Logs') }\n      },\n      {\n        path: 'remote',\n        component: SystemLogsRemoteFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Remote'),\n          notificationTitle: gettext('Updated remote system-logs settings.'),\n          editing: true\n        }\n      }\n    ]\n  },\n  {\n    path: 'performance-statistics',\n    data: { title: gettext('Performance Statistics') },\n    children: [\n      { path: '', component: NavigationPageComponent },\n      {\n        path: 'cpu',\n        component: PerformanceStatisticCpuRrdPageComponent,\n        data: { title: gettext('CPU') }\n      },\n      {\n        path: 'disk-usage',\n        component: PerformanceStatisticDuRrdPageComponent,\n        data: { title: gettext('Disk Usage') }\n      },\n      {\n        path: 'load',\n        component: PerformanceStatisticLoadRrdPageComponent,\n        data: { title: gettext('Load Average') }\n      },\n      {\n        path: 'memory',\n        component: PerformanceStatisticMemoryRrdPageComponent,\n        data: { title: gettext('Memory Usage') }\n      },\n      {\n        path: 'network-interfaces',\n        component: PerformanceStatisticNetworkRrdPageComponent,\n        data: { title: gettext('Network Interfaces') }\n      },\n      {\n        path: 'uptime',\n        component: PerformanceStatisticUptimeRrdPageComponent,\n        data: { title: gettext('Uptime') }\n      }\n    ]\n  },\n  {\n    path: 'services',\n    data: { title: gettext('Services') },\n    children: [\n      { path: '', component: NavigationPageComponent },\n      {\n        path: 'smb',\n        component: ServiceSmbTextPageComponent,\n        data: { title: gettext('SMB/CIFS') }\n      },\n      {\n        path: 'ssh',\n        component: ServiceSshTextPageComponent,\n        data: { title: gettext('SSH') }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n  providers: [\n    {\n      provide: ROUTES,\n      multi: true,\n      useFactory: (routeConfigService: RouteConfigService): Routes => {\n        routeConfigService.inject('diagnostics', routes);\n        return routes;\n      },\n      deps: [RouteConfigService]\n    }\n  ]\n})\nexport class DiagnosticsRoutingModule {}\n","/* eslint-disable max-len */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule } from '~/app/core/core.module';\nimport { DiagnosticsRoutingModule } from '~/app/pages/diagnostics/diagnostics-routing.module';\nimport { PerformanceStatisticCpuRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-cpu-rrd-page.component';\nimport { PerformanceStatisticDuRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-du-rrd-page.component';\nimport { PerformanceStatisticLoadRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-load-rrd-page.component';\nimport { PerformanceStatisticMemoryRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-memory-rrd-page.component';\nimport { PerformanceStatisticNetworkRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-network-rrd-page.component';\nimport { PerformanceStatisticUptimeRrdPageComponent } from '~/app/pages/diagnostics/performance-statistics/performance-statistic-uptime-rrd-page.component';\nimport { ProcessesTextPageComponent } from '~/app/pages/diagnostics/processes/processes-text-page.component';\nimport { ReportTextPageComponent } from '~/app/pages/diagnostics/report/report-text-page.component';\nimport { ServiceSmbTextPageComponent } from '~/app/pages/diagnostics/services/service-smb-text-page.component';\nimport { ServiceSshTextPageComponent } from '~/app/pages/diagnostics/services/service-ssh-text-page.component';\nimport { SystemInformationDatatablePageComponent } from '~/app/pages/diagnostics/system-information/system-information-datatable-page.component';\nimport { SystemLogsListPageComponent } from '~/app/pages/diagnostics/system-logs/system-logs-list-page.component';\nimport { SystemLogsRemoteFormPageComponent } from '~/app/pages/diagnostics/system-logs/system-logs-remote-form-page.component';\n\n@NgModule({\n  declarations: [\n    SystemInformationDatatablePageComponent,\n    SystemLogsListPageComponent,\n    SystemLogsRemoteFormPageComponent,\n    ProcessesTextPageComponent,\n    ReportTextPageComponent,\n    PerformanceStatisticCpuRrdPageComponent,\n    PerformanceStatisticDuRrdPageComponent,\n    PerformanceStatisticLoadRrdPageComponent,\n    PerformanceStatisticMemoryRrdPageComponent,\n    PerformanceStatisticNetworkRrdPageComponent,\n    PerformanceStatisticUptimeRrdPageComponent,\n    ServiceSmbTextPageComponent,\n    ServiceSshTextPageComponent\n  ],\n  imports: [CommonModule, CoreModule, DiagnosticsRoutingModule]\n})\nexport class DiagnosticsModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { RrdPageConfig } from '~/app/core/components/intuition/models/rrd-page-config.type';\n\n@Component({\n  template: '<omv-intuition-rrd-page [config]=\"this.config\"></omv-intuition-rrd-page>'\n})\nexport class PerformanceStatisticCpuRrdPageComponent {\n  public config: RrdPageConfig = {\n    graphs: [\n      {\n        name: 'cpu-0'\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { RrdPageConfig } from '~/app/core/components/intuition/models/rrd-page-config.type';\n\n@Component({\n  template: '<omv-intuition-rrd-page [config]=\"this.config\"></omv-intuition-rrd-page>'\n})\nexport class PerformanceStatisticDuRrdPageComponent {\n  public config: RrdPageConfig = {\n    graphs: [\n      {\n        name: 'df-{{ \"root\" if mountpoint == \"/\" else mountpoint | substr(1) | replace(\"/\", \"-\") }}'\n      }\n    ],\n    label:\n      '{{ devicefile }}{{ \" [\" + label + \"]\" if label }}{{ \" [\" + \"System\" | translate + \"]\" if mountpoint == \"/\" }}',\n    store: {\n      proxy: {\n        service: 'FileSystemMgmt',\n        get: {\n          method: 'enumerateMountedFilesystems',\n          params: {\n            includeroot: true\n          }\n        }\n      },\n      sorters: [\n        {\n          prop: 'devicefile',\n          dir: 'asc'\n        }\n      ]\n    }\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { RrdPageConfig } from '~/app/core/components/intuition/models/rrd-page-config.type';\n\n@Component({\n  template: '<omv-intuition-rrd-page [config]=\"this.config\"></omv-intuition-rrd-page>'\n})\nexport class PerformanceStatisticLoadRrdPageComponent {\n  public config: RrdPageConfig = {\n    graphs: [\n      {\n        name: 'load'\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { RrdPageConfig } from '~/app/core/components/intuition/models/rrd-page-config.type';\n\n@Component({\n  template: '<omv-intuition-rrd-page [config]=\"this.config\"></omv-intuition-rrd-page>'\n})\nexport class PerformanceStatisticMemoryRrdPageComponent {\n  public config: RrdPageConfig = {\n    graphs: [\n      {\n        name: 'memory'\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { RrdPageConfig } from '~/app/core/components/intuition/models/rrd-page-config.type';\n\n@Component({\n  template: '<omv-intuition-rrd-page [config]=\"this.config\"></omv-intuition-rrd-page>'\n})\nexport class PerformanceStatisticNetworkRrdPageComponent {\n  public config: RrdPageConfig = {\n    graphs: [\n      {\n        name: 'interface-{{ devicename }}'\n      }\n    ],\n    label: '{{ devicename }}',\n    store: {\n      proxy: {\n        service: 'Network',\n        get: {\n          method: 'enumerateConfiguredDevices',\n          params:{}\n        }\n      },\n      sorters: [\n        {\n          prop: 'devicefile',\n          dir: 'asc'\n        }\n      ]\n    }\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { RrdPageConfig } from '~/app/core/components/intuition/models/rrd-page-config.type';\n\n@Component({\n  template: '<omv-intuition-rrd-page [config]=\"this.config\"></omv-intuition-rrd-page>'\n})\nexport class PerformanceStatisticUptimeRrdPageComponent {\n  public config: RrdPageConfig = {\n    graphs: [\n      {\n        name: 'uptime'\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { TextPageConfig } from '~/app/core/components/intuition/models/text-page-config.type';\n\n@Component({\n  template: '<omv-intuition-text-page [config]=\"this.config\"></omv-intuition-text-page>'\n})\nexport class ProcessesTextPageComponent {\n  public config: TextPageConfig = {\n    hasReloadButton: true,\n    request: {\n      service: 'System',\n      get: {\n        method: 'getTopInfo'\n      }\n    }\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { TextPageConfig } from '~/app/core/components/intuition/models/text-page-config.type';\n\n@Component({\n  template: '<omv-intuition-text-page [config]=\"this.config\"></omv-intuition-text-page>'\n})\nexport class ReportTextPageComponent {\n  public config: TextPageConfig = {\n    hasCopyToClipboardButton: true,\n    request: {\n      service: 'System',\n      get: {\n        method: 'getDiagnosticReport'\n      }\n    }\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { TextPageConfig } from '~/app/core/components/intuition/models/text-page-config.type';\n\n@Component({\n  template: '<omv-intuition-text-page [config]=\"this.config\"></omv-intuition-text-page>'\n})\nexport class ServiceSmbTextPageComponent {\n  public config: TextPageConfig = {\n    hasReloadButton: true,\n    request: {\n      service: 'SMB',\n      get: {\n        method: 'getStats'\n      }\n    }\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { TextPageConfig } from '~/app/core/components/intuition/models/text-page-config.type';\n\n@Component({\n  template: '<omv-intuition-text-page [config]=\"this.config\"></omv-intuition-text-page>'\n})\nexport class ServiceSshTextPageComponent {\n  public config: TextPageConfig = {\n    hasReloadButton: true,\n    request: {\n      service: 'SSH',\n      get: {\n        method: 'getStats'\n      }\n    }\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport dayjs from 'dayjs';\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { Unsubscribe } from '~/app/decorators';\nimport { format, notAvailable } from '~/app/functions.helper';\nimport { BinaryUnitPipe } from '~/app/shared/pipes/binary-unit.pipe';\nimport {\n  SystemInformation,\n  SystemInformationService\n} from '~/app/shared/services/system-information.service';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class SystemInformationDatatablePageComponent {\n  @Unsubscribe()\n  private subscriptions = new Subscription();\n\n  public config: DatatablePageConfig = {\n    limit: 0,\n    autoReload: false,\n    hasActionBar: false,\n    hasHeader: false,\n    hasFooter: false,\n    selectionType: 'none',\n    columns: [\n      {\n        prop: 'name',\n        flexGrow: 1,\n        cellClass: 'omv-font-weight-bold',\n        cellTemplateName: 'template',\n        cellTemplateConfig: '{{ name | translate }}'\n      },\n      {\n        prop: 'value',\n        flexGrow: 3,\n        cellTemplateName: 'shapeShifter'\n      }\n    ],\n    store: {\n      data: [],\n      fields: ['name', 'value']\n    }\n  };\n\n  constructor(\n    private binaryUnitPipe: BinaryUnitPipe,\n    private systemInformationService: SystemInformationService\n  ) {\n    this.subscriptions.add(\n      this.systemInformationService.systemInfo$.subscribe((res: SystemInformation) => {\n        const data = [];\n        const rows = {\n          hostname: {\n            name: gettext('Hostname'),\n            value: {\n              type: 'text',\n              value: _.get(res, 'hostname')\n            }\n          },\n          version: {\n            name: gettext('Version'),\n            value: {\n              type: 'text',\n              value: '1.0'\n            }\n          },\n          cpuModelName: {\n            name: gettext('Processor'),\n            value: {\n              type: 'text',\n              value: notAvailable(_.get(res, 'cpuModelName'))\n            }\n          },\n          kernel: {\n            name: gettext('Kernel'),\n            value: {\n              type: 'text',\n              value: notAvailable(_.get(res, 'kernel'))\n            }\n          },\n          time: {\n            name: gettext('System Time'),\n            value: {\n              type: 'localeDateTime',\n              value: _.get(res, 'ts')\n            }\n          },\n          uptime: {\n            name: gettext('Uptime'),\n            value: {\n              type: 'relativeTime',\n              value: dayjs().unix() - _.get(res, 'uptime')\n            }\n          },\n          loadAverage: {\n            name: gettext('Load Average'),\n            value: {\n              type: 'text',\n              value: format(\n                '{{ loadAverage.1min | tofixed(2) }}, {{ loadAverage.5min | tofixed(2) }}, {{ loadAverage.15min | tofixed(2) }}',\n                res\n              )\n            }\n          },\n          cpuUsage: {\n            name: gettext('CPU Usage'),\n            value: {\n              type: 'progressBar',\n              text: `${res.cpuUsage?.toFixed(1)}%`,\n              value: res.cpuUsage?.toFixed(1)\n            }\n          },\n          memUsed: {\n            name: gettext('Memory Usage'),\n            value: {\n              type: 'progressBar',\n              text: `${(res.memUtilization * 100).toFixed(1)}% of ${this.binaryUnitPipe.transform(\n                res.memTotal\n              )}`,\n              value: (res.memUtilization * 100).toFixed(1)\n            }\n          }\n        };\n        _.forEach(rows, (value: Record<any, any>, key: string) => {\n          if (_.has(res, key)) {\n            data.push(value);\n          }\n        });\n        this.config.store.data = data;\n      })\n    );\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DatatablePageComponent } from '~/app/core/components/intuition/datatable-page/datatable-page.component';\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { LogConfig, LogConfigService } from '~/app/core/services/log-config.service';\nimport { translate } from '~/app/i18n.helper';\nimport { DatatableAction } from '~/app/shared/models/datatable-action.type';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class SystemLogsListPageComponent implements OnInit {\n  @ViewChild(DatatablePageComponent, { static: true })\n  page: DatatablePageComponent;\n\n  public config: DatatablePageConfig = {\n    autoLoad: false,\n    autoReload: false,\n    remoteSorting: true,\n    remotePaging: true,\n    limit: 15,\n    selectionType: 'none',\n    sorters: [],\n    columns: [],\n    store: {\n      data: []\n    },\n    actions: [\n      {\n        type: 'select',\n        placeholder: gettext('Select a system log ...'),\n        selectionChange: this.onSelectionChange.bind(this),\n        store: {\n          data: []\n        }\n      },\n      {\n        type: 'divider'\n      },\n      {\n        type: 'iconButton',\n        icon: 'download',\n        tooltip: gettext('Download'),\n        click: this.onDownload.bind(this),\n        enabledConstraints: {\n          callback: () =>\n            // Enable the download button if a log ID is selected.\n            _.isString(this.logId)\n        }\n      }\n    ]\n  };\n\n  private logId: string;\n\n  constructor(private rpcService: RpcService, private logConfigService: LogConfigService) {}\n\n  ngOnInit(): void {\n    this.logConfigService.configs$.subscribe((logConfigs: Array<LogConfig>) => {\n      this.config.actions[0].store.data = _.chain(logConfigs)\n        .sortBy(['text'])\n        .map((systemLogConfig) => ({\n          text: translate(systemLogConfig.text),\n          value: systemLogConfig.id\n        }))\n        .value();\n    });\n  }\n\n  onSelectionChange(action: DatatableAction, value: string) {\n    this.logConfigService.configs$.subscribe((logs: Array<LogConfig>) => {\n      const logConfig = logs.find((lc: LogConfig) => lc.id === value);\n      if (!_.isUndefined(logConfig)) {\n        this.logId = value;\n        // Update the configuration of the datatable.\n        // Do not use _.merge(), otherwise Angular CD will not detect\n        // the changes.\n        this.config.stateId = logConfig.id;\n        this.config.columns = logConfig.columns;\n        this.config.sorters = logConfig.sorters;\n        this.config.store.proxy = {\n          service: logConfig.request.service,\n          get: {\n            method: logConfig.request.method,\n            params: logConfig.request.params\n          }\n        };\n        // Finally, reload the datatable content. Note, we need to wait\n        // until the datatable has updated the configuration (e.g. sorters)\n        // thanks to Angular's change-detection.\n        setTimeout(() => {\n          this.page.table.offset = 0;\n          this.page.table.updateColumns();\n          this.page.table.reloadData();\n        });\n      }\n    });\n  }\n\n  onDownload() {\n    this.rpcService.download('LogFile', 'getContent', { id: this.logId });\n  }\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class SystemLogsRemoteFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Syslog',\n      get: {\n        method: 'getSettings'\n      },\n      post: {\n        method: 'setSettings'\n      }\n    },\n    fields: [\n      {\n        type: 'checkbox',\n        name: 'enable',\n        label: gettext('Enabled'),\n        hint: gettext('Enable remote logging of syslog to the specified host.'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'host',\n        label: gettext('Host'),\n        value: '',\n        validators: {\n          patternType: 'domainNameIp',\n          requiredIf: { operator: 'eq', arg0: { prop: 'enable' }, arg1: true }\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'port',\n        label: gettext('Port'),\n        value: 514,\n        validators: {\n          min: 1,\n          max: 65535,\n          required: true,\n          patternType: 'port'\n        }\n      },\n      {\n        type: 'select',\n        name: 'protocol',\n        label: gettext('Protocol'),\n        value: 'udp',\n        store: {\n          data: [\n            ['tcp', gettext('TCP')],\n            ['udp', gettext('UDP')]\n          ]\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/diagnostics/system-logs'\n        }\n      }\n    ]\n  };\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}