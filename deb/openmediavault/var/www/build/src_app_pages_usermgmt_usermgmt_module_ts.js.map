{"version":3,"file":"src_app_pages_usermgmt_usermgmt_module_ts.js","mappings":"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","sources":["./src/app/pages/usermgmt/groups/group-datatable-page.component.ts","./src/app/pages/usermgmt/groups/group-form-page.component.ts","./src/app/pages/usermgmt/groups/group-import-form-page.component.ts","./src/app/pages/usermgmt/groups/group-shared-folder-permissions-datatable-page.component.ts","./src/app/pages/usermgmt/usermgmt-routing.module.ts","./src/app/pages/usermgmt/usermgmt.module.ts","./src/app/pages/usermgmt/users/user-datatable-page.component.ts","./src/app/pages/usermgmt/users/user-form-page.component.ts","./src/app/pages/usermgmt/users/user-import-form-page.component.ts","./src/app/pages/usermgmt/users/user-password-form-page.component.ts","./src/app/pages/usermgmt/users/user-profile-form-page.component.ts","./src/app/pages/usermgmt/users/user-settings-form-page.component.ts","./src/app/pages/usermgmt/users/user-shared-folder-permissions-datatable-page.component.ts"],"sourcesContent":["/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class GroupDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    stateId: '6846696d-6834-45b8-9154-423488469072',\n    autoReload: false,\n    remoteSorting: true,\n    remotePaging: true,\n    remoteSearching: true,\n    hasSearchField: true,\n    rowId: 'name',\n    rowEnumFmt: '{{ name }}',\n    columns: [\n      { name: gettext('Name'), prop: 'name', flexGrow: 1, sortable: true },\n      {\n        name: gettext('GID'),\n        prop: 'gid',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      {\n        name: gettext('Members'),\n        prop: 'members',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'template',\n        cellTemplateConfig: '{{ members | sort() | join(\", \") }}'\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'name'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'UserMgmt',\n        get: {\n          method: 'getGroupList'\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'menu',\n        icon: 'add',\n        tooltip: gettext('Create | Import'),\n        actions: [\n          {\n            template: 'create',\n            execute: {\n              type: 'url',\n              url: '/usermgmt/groups/create'\n            }\n          },\n          {\n            type: 'iconButton',\n            text: gettext('Import'),\n            icon: 'import',\n            execute: {\n              type: 'url',\n              url: '/usermgmt/groups/import'\n            }\n          }\n        ]\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/groups/edit/{{ _selected[0].name }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'mdi:folder-key',\n        tooltip: gettext('Shared folder permissions'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'url',\n          url: '/usermgmt/groups/permissions/{{ _selected[0].name }}'\n        }\n      },\n      {\n        template: 'delete',\n        enabledConstraints: {\n          minSelected: 1,\n          constraint: [{ operator: 'z', arg0: { prop: 'members' } }]\n        },\n        execute: {\n          type: 'request',\n          request: {\n            service: 'UserMgmt',\n            method: 'deleteGroup',\n            params: {\n              name: '{{ name }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class GroupFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      get: {\n        method: 'getGroup',\n        params: {\n          name: '{{ _routeParams.name }}'\n        }\n      },\n      post: {\n        method: 'setGroup'\n      }\n    },\n    fields: [\n      {\n        type: 'textInput',\n        name: 'name',\n        label: gettext('Name'),\n        disabled: '{{ _routeConfig.data.editing | toboolean }}',\n        value: '{{ _routeParams.name }}',\n        validators: {\n          required: true,\n          patternType: 'groupName'\n        }\n      },\n      {\n        type: 'select',\n        name: 'members',\n        label: gettext('Members'),\n        placeholder: gettext('Select members ...'),\n        multiple: true,\n        valueField: 'name',\n        textField: 'name',\n        value: [],\n        store: {\n          proxy: {\n            service: 'UserMgmt',\n            get: {\n              method: 'enumerateAllUsers',\n              params: {}\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'name'\n            }\n          ]\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: '',\n        validators: {\n          maxLength: 65\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/groups'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/groups'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class GroupImportFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      post: {\n        method: 'importGroups',\n        task: true\n      }\n    },\n    fields: [\n      {\n        type: 'textarea',\n        name: 'csv',\n        value: '# <groupname>;<gid>;<tags>',\n        hint: gettext('Each line represents a group.'),\n        monospace: true,\n        rows: 10\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Import'),\n        execute: {\n          type: 'url',\n          url: '/usermgmt/groups'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/groups'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DatatablePageComponent } from '~/app/core/components/intuition/datatable-page/datatable-page.component';\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { format } from '~/app/functions.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  template:\n    '<omv-intuition-datatable-page #page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class GroupSharedFolderPermissionsDatatablePageComponent {\n  @ViewChild('page', { static: true })\n  page: DatatablePageComponent;\n\n  public config: DatatablePageConfig = {\n    stateId: '21212794-27c1-11ea-abdb-e3fc0648b2ae',\n    autoReload: false,\n    limit: 0,\n    hasFooter: false,\n    hasSearchField: true,\n    hints: [\n      {\n        type: 'info',\n        text: gettext(\n          'These settings are used by the services to configure the access rights for the group \"{{ _routeParams.name }}\". Please note that these settings have no effect on file system permissions.'\n        )\n      }\n    ],\n    selectionType: 'none',\n    columns: [\n      { name: gettext('Shared folder'), prop: 'name', flexGrow: 1, sortable: true },\n      {\n        name: gettext('Permissions'),\n        prop: 'perms',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'buttonToggle',\n        cellTemplateConfig: {\n          buttons: [\n            {\n              value: '7',\n              text: gettext('Read/Write')\n            },\n            {\n              value: '5',\n              text: gettext('Read-only')\n            },\n            {\n              value: '0',\n              text: gettext('No access')\n            }\n          ]\n        }\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'name'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'ShareMgmt',\n        get: {\n          method: 'getPrivilegesByRole',\n          params: {\n            role: 'group',\n            name: '{{ _routeParams.name }}'\n          }\n        }\n      }\n    },\n    buttons: [\n      {\n        template: 'cancel',\n        url: '/usermgmt/groups'\n      },\n      {\n        text: gettext('Save'),\n        class: 'omv-background-color-pair-primary',\n        click: this.onSave.bind(this)\n      }\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private rpcService: RpcService,\n    private notificationService: NotificationService\n  ) {}\n\n  onSave() {\n    const privileges = _.map(_.reject(this.page.table.data, ['perms', null]), (obj) => ({\n      uuid: obj.uuid,\n      perms: _.toInteger(obj.perms)\n    }));\n    this.rpcService\n      .request('ShareMgmt', 'setPrivilegesByRole', {\n        role: 'group',\n        name: _.get(this.page.routeParams, 'name'),\n        privileges\n      })\n      .subscribe(() => {\n        this.notificationService.show(\n          NotificationType.success,\n          format(_.get(this.page.routeConfig, 'data.notificationTitle'), this.page.routeParams)\n        );\n        this.router.navigate(['/usermgmt/groups']);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\nimport { GroupDatatablePageComponent } from '~/app/pages/usermgmt/groups/group-datatable-page.component';\nimport { GroupFormPageComponent } from '~/app/pages/usermgmt/groups/group-form-page.component';\nimport { GroupImportFormPageComponent } from '~/app/pages/usermgmt/groups/group-import-form-page.component';\nimport { GroupSharedFolderPermissionsDatatablePageComponent } from '~/app/pages/usermgmt/groups/group-shared-folder-permissions-datatable-page.component';\nimport { UserDatatablePageComponent } from '~/app/pages/usermgmt/users/user-datatable-page.component';\nimport { UserFormPageComponent } from '~/app/pages/usermgmt/users/user-form-page.component';\nimport { UserImportFormPageComponent } from '~/app/pages/usermgmt/users/user-import-form-page.component';\nimport { UserPasswordFormPageComponent } from '~/app/pages/usermgmt/users/user-password-form-page.component';\nimport { UserProfileFormPageComponent } from '~/app/pages/usermgmt/users/user-profile-form-page.component';\nimport { UserSettingsFormPageComponent } from '~/app/pages/usermgmt/users/user-settings-form-page.component';\nimport { UserSharedFolderPermissionsDatatablePageComponent } from '~/app/pages/usermgmt/users/user-shared-folder-permissions-datatable-page.component';\nimport { IsDirtyGuardService } from '~/app/shared/services/is-dirty-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NavigationPageComponent\n  },\n  {\n    path: 'change-password',\n    component: UserPasswordFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Change Password'),\n      editing: true,\n      notificationTitle: gettext('Updated password.')\n    }\n  },\n  {\n    path: 'profile',\n    component: UserProfileFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Profile'),\n      editing: true,\n      notificationTitle: gettext('Updated user profile.')\n    }\n  },\n  {\n    path: 'users',\n    data: { title: gettext('Users') },\n    children: [\n      { path: '', component: UserDatatablePageComponent },\n      {\n        path: 'create',\n        component: UserFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created user \"{{ name }}\".')\n        }\n      },\n      {\n        path: 'import',\n        component: UserImportFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: { title: gettext('Import'), notificationTitle: gettext('Imported users.') }\n      },\n      {\n        path: 'edit/:name',\n        component: UserFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated user \"{{ name }}\".')\n        }\n      },\n      {\n        path: 'permissions/:name',\n        component: UserSharedFolderPermissionsDatatablePageComponent,\n        data: {\n          title: gettext('Permissions'),\n          breadcrumb: {\n            text: '{{ \"Permissions\" | translate }} @ {{ _routeParams.name }}'\n          },\n          notificationTitle: gettext('Updated permissions of user \"{{ name }}\".')\n        }\n      }\n    ]\n  },\n  {\n    path: 'groups',\n    data: { title: gettext('Groups') },\n    children: [\n      { path: '', component: GroupDatatablePageComponent },\n      {\n        path: 'create',\n        component: GroupFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created group \"{{ name }}\".')\n        }\n      },\n      {\n        path: 'import',\n        component: GroupImportFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: { title: gettext('Import'), notificationTitle: gettext('Imported groups.') }\n      },\n      {\n        path: 'edit/:name',\n        component: GroupFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated group \"{{ name }}\".')\n        }\n      },\n      {\n        path: 'permissions/:name',\n        component: GroupSharedFolderPermissionsDatatablePageComponent,\n        data: {\n          title: gettext('Permissions'),\n          breadcrumb: {\n            text: '{{ \"Permissions\" | translate }} @ {{ _routeParams.name }}'\n          },\n          notificationTitle: gettext('Updated permissions of group \"{{ name }}\".')\n        }\n      }\n    ]\n  },\n  {\n    path: 'settings',\n    component: UserSettingsFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Settings'),\n      editing: true,\n      notificationTitle: gettext('Updated settings.')\n    }\n  }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n  providers: [\n    {\n      provide: ROUTES,\n      multi: true,\n      useFactory: (routeConfigService: RouteConfigService): Routes => {\n        routeConfigService.inject('usermgmt', routes);\n        return routes;\n      },\n      deps: [RouteConfigService]\n    }\n  ]\n})\nexport class UsermgmtRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule } from '~/app/core/core.module';\nimport { GroupDatatablePageComponent } from '~/app/pages/usermgmt/groups/group-datatable-page.component';\nimport { GroupFormPageComponent } from '~/app/pages/usermgmt/groups/group-form-page.component';\nimport { GroupImportFormPageComponent } from '~/app/pages/usermgmt/groups/group-import-form-page.component';\nimport { GroupSharedFolderPermissionsDatatablePageComponent } from '~/app/pages/usermgmt/groups/group-shared-folder-permissions-datatable-page.component';\nimport { UsermgmtRoutingModule } from '~/app/pages/usermgmt/usermgmt-routing.module';\nimport { UserDatatablePageComponent } from '~/app/pages/usermgmt/users/user-datatable-page.component';\nimport { UserFormPageComponent } from '~/app/pages/usermgmt/users/user-form-page.component';\nimport { UserImportFormPageComponent } from '~/app/pages/usermgmt/users/user-import-form-page.component';\nimport { UserPasswordFormPageComponent } from '~/app/pages/usermgmt/users/user-password-form-page.component';\nimport { UserProfileFormPageComponent } from '~/app/pages/usermgmt/users/user-profile-form-page.component';\nimport { UserSettingsFormPageComponent } from '~/app/pages/usermgmt/users/user-settings-form-page.component';\nimport { UserSharedFolderPermissionsDatatablePageComponent } from '~/app/pages/usermgmt/users/user-shared-folder-permissions-datatable-page.component';\n\n@NgModule({\n  declarations: [\n    UserDatatablePageComponent,\n    UserFormPageComponent,\n    UserPasswordFormPageComponent,\n    UserSettingsFormPageComponent,\n    UserImportFormPageComponent,\n    GroupFormPageComponent,\n    GroupImportFormPageComponent,\n    GroupDatatablePageComponent,\n    GroupSharedFolderPermissionsDatatablePageComponent,\n    UserSharedFolderPermissionsDatatablePageComponent,\n    UserProfileFormPageComponent\n  ],\n  imports: [CommonModule, CoreModule, UsermgmtRoutingModule]\n})\nexport class UsermgmtModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class UserDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    stateId: '9dd2c07e-4572-4112-9de7-c3ccad5ef52e',\n    autoReload: false,\n    remoteSorting: true,\n    remotePaging: true,\n    remoteSearching: true,\n    hasSearchField: true,\n    rowId: 'name',\n    rowEnumFmt: '{{ name }}',\n    columns: [\n      { name: gettext('Name'), prop: 'name', flexGrow: 1, sortable: true },\n      {\n        name: gettext('UID'),\n        prop: 'uid',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      {\n        name: gettext('GID'),\n        prop: 'gid',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      { name: gettext('Email'), prop: 'email', flexGrow: 1, sortable: true },\n      {\n        name: gettext('Groups'),\n        prop: 'groups',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'template',\n        cellTemplateConfig: '{{ groups | sort() | join(\", \") }}'\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'name'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'UserMgmt',\n        get: {\n          method: 'getUserList'\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'menu',\n        icon: 'add',\n        tooltip: gettext('Create | Import'),\n        actions: [\n          {\n            template: 'create',\n            execute: {\n              type: 'url',\n              url: '/usermgmt/users/create'\n            }\n          },\n          {\n            type: 'iconButton',\n            text: gettext('Import'),\n            icon: 'import',\n            execute: {\n              type: 'url',\n              url: '/usermgmt/users/import'\n            }\n          }\n        ]\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/users/edit/{{ _selected[0].name }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'mdi:folder-key',\n        tooltip: gettext('Shared folder permissions'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'url',\n          url: '/usermgmt/users/permissions/{{ _selected[0].name }}'\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'UserMgmt',\n            method: 'deleteUser',\n            params: {\n              name: '{{ name }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class UserFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      get: {\n        method: 'getUser',\n        params: {\n          name: '{{ _routeParams.name }}'\n        }\n      },\n      post: {\n        method: 'setUser'\n      }\n    },\n    fields: [\n      {\n        type: 'textInput',\n        name: 'name',\n        label: gettext('Name'),\n        disabled: '{{ _routeConfig.data.editing | toboolean }}',\n        value: '{{ _routeParams.name }}',\n        autocomplete: 'off',\n        validators: {\n          required: true,\n          patternType: 'userName'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'email',\n        label: gettext('Email'),\n        value: '',\n        autocomplete: 'off',\n        validators: {\n          patternType: 'email'\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'password',\n        label: gettext('Password'),\n        value: '',\n        autocomplete: 'new-password',\n        validators: {\n          required: '{{ _routeConfig.data.editing | toboolean === false }}'\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'passwordconf',\n        label: gettext('Confirm password'),\n        submitValue: false,\n        value: '',\n        autocomplete: 'new-password',\n        validators: {\n          custom: [\n            {\n              constraint: {\n                operator: 'eq',\n                arg0: { prop: 'password' },\n                arg1: { prop: 'passwordconf' }\n              },\n              errorData: gettext('Password does not match.')\n            }\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'shell',\n        label: gettext('Shell'),\n        placeholder: gettext('Select a shell ...'),\n        value: '/bin/sh',\n        store: {\n          proxy: {\n            service: 'System',\n            get: {\n              method: 'getShells'\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'text'\n            }\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'groups',\n        label: gettext('Groups'),\n        placeholder: gettext('Select groups ...'),\n        multiple: true,\n        valueField: 'name',\n        textField: 'name',\n        value: [],\n        store: {\n          proxy: {\n            service: 'UserMgmt',\n            get: {\n              method: 'enumerateAllGroups',\n              params: {},\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'name'\n            }\n          ]\n        }\n      },\n      {\n        type: 'datatable',\n        name: 'sshpubkeys',\n        label: gettext('SSH public keys'),\n        hasHeader: false,\n        hasFooter: false,\n        columns: [\n          {\n            prop: 'sshpubkey',\n            flexGrow: 1,\n            cellClass: 'omv-text-wrap omv-text-monospace'\n          }\n        ],\n        actions: [\n          {\n            template: 'add',\n            formDialogConfig: {\n              title: gettext('SSH public key'),\n              fields: [\n                {\n                  type: 'fileInput',\n                  name: 'sshpubkey',\n                  value: '',\n                  rows: 10,\n                  wrap: 'off',\n                  monospace: true,\n                  trim: true,\n                  label: gettext('Public key'),\n                  hint: gettext('The SSH public key in OpenSSH or RFC 4716 format.'),\n                  validators: {\n                    required: true,\n                    patternType: 'sshPubKey'\n                  }\n                }\n              ]\n            }\n          },\n          {\n            template: 'delete'\n          }\n        ],\n        valueType: 'string',\n        value: []\n      },\n      {\n        type: 'checkbox',\n        name: 'disallowusermod',\n        label: gettext('Disallow account modification'),\n        value: false,\n        hint: gettext('Disallow the user to modify their own account.')\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: '',\n        validators: {\n          maxLength: 65\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/users'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/users'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class UserImportFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      post: {\n        method: 'importUsers',\n        task: true\n      }\n    },\n    fields: [\n      {\n        type: 'textarea',\n        name: 'csv',\n        value:\n          '# <username>;<uid>;<tags>;<email>;<password>;<shell>;<groupname,groupname,...>;<disallowusermod>',\n        hint: gettext(\n          'Each line represents a user. Note, the password must be entered in plain text.'\n        ),\n        monospace: true,\n        rows: 10\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Import'),\n        execute: {\n          type: 'url',\n          url: '/usermgmt/users'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/usermgmt/users'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class UserPasswordFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      post: {\n        method: 'setPasswordByContext'\n      }\n    },\n    fields: [\n      {\n        type: 'passwordInput',\n        name: 'password',\n        label: gettext('New password'),\n        autocomplete: 'new-password',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'passwordconf',\n        label: gettext('Confirm password'),\n        submitValue: false,\n        validators: {\n          required: true,\n          custom: [\n            {\n              constraint: {\n                operator: 'eq',\n                arg0: { prop: 'password' },\n                arg1: { prop: 'passwordconf' }\n              },\n              errorData: gettext(\"Password doesn't match.\")\n            }\n          ]\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class UserProfileFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      get: {\n        method: 'getUserByContext'\n      },\n      post: {\n        method: 'setUserByContext'\n      }\n    },\n    fields: [\n      {\n        type: 'hidden',\n        name: '_readonly',\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'name',\n        label: gettext('Name'),\n        readonly: true\n      },\n      {\n        type: 'textInput',\n        name: 'email',\n        label: gettext('Email'),\n        value: '',\n        validators: {\n          patternType: 'email'\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: '',\n        validators: {\n          maxLength: 65\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        enabledConstraint: { operator: 'falsy', arg0: { prop: '_readonly' } }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class UserSettingsFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'UserMgmt',\n      get: {\n        method: 'getSettings'\n      },\n      post: {\n        method: 'setSettings'\n      }\n    },\n    fields: [\n      {\n        type: 'paragraph',\n        title: gettext('User home directory')\n      },\n      {\n        type: 'checkbox',\n        name: 'enable',\n        label: gettext('Enabled'),\n        value: false\n      },\n      {\n        type: 'sharedFolderSelect',\n        name: 'sharedfolderref',\n        label: gettext('Location'),\n        hint: gettext('The location of the user home directories.'),\n        hasEmptyOption: true,\n        value: '',\n        validators: {\n          requiredIf: { operator: 'eq', arg0: { prop: 'enable' }, arg1: true }\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/usermgmt'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\nimport * as _ from 'lodash';\n\nimport { DatatablePageComponent } from '~/app/core/components/intuition/datatable-page/datatable-page.component';\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\nimport { format } from '~/app/functions.helper';\nimport { NotificationType } from '~/app/shared/enum/notification-type.enum';\nimport { NotificationService } from '~/app/shared/services/notification.service';\nimport { RpcService } from '~/app/shared/services/rpc.service';\n\n@Component({\n  template:\n    '<omv-intuition-datatable-page #page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class UserSharedFolderPermissionsDatatablePageComponent {\n  @ViewChild('page', { static: true })\n  page: DatatablePageComponent;\n\n  public config: DatatablePageConfig = {\n    stateId: '3752268a-27c1-11ea-a5b1-a3d1c7dcb22c',\n    autoReload: false,\n    limit: 0,\n    hasFooter: false,\n    hasSearchField: true,\n    hints: [\n      {\n        type: 'info',\n        text: gettext(\n          'These settings are used by the services to configure the access rights for the user \"{{ _routeParams.name }}\". Please note that these settings have no effect on file system permissions.'\n        )\n      }\n    ],\n    selectionType: 'none',\n    columns: [\n      { name: gettext('Shared folder'), prop: 'name', flexGrow: 1, sortable: true },\n      {\n        name: gettext('Permissions'),\n        prop: 'perms',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'buttonToggle',\n        cellTemplateConfig: {\n          buttons: [\n            {\n              value: '7',\n              text: gettext('Read/Write')\n            },\n            {\n              value: '5',\n              text: gettext('Read-only')\n            },\n            {\n              value: '0',\n              text: gettext('No access')\n            }\n          ]\n        }\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'name'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'ShareMgmt',\n        get: {\n          method: 'getPrivilegesByRole',\n          params: {\n            role: 'user',\n            name: '{{ _routeParams.name }}'\n          }\n        }\n      }\n    },\n    buttons: [\n      {\n        template: 'submit',\n        click: this.onSave.bind(this)\n      },\n      {\n        template: 'cancel',\n        url: '/usermgmt/users'\n      }\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private rpcService: RpcService,\n    private notificationService: NotificationService\n  ) {}\n\n  onSave() {\n    const privileges = _.map(_.reject(this.page.table.data, ['perms', null]), (obj) => ({\n      uuid: obj.uuid,\n      perms: _.toInteger(obj.perms)\n    }));\n    this.rpcService\n      .request('ShareMgmt', 'setPrivilegesByRole', {\n        role: 'user',\n        name: _.get(this.page.routeParams, 'name'),\n        privileges\n      })\n      .subscribe(() => {\n        this.notificationService.show(\n          NotificationType.success,\n          format(_.get(this.page.routeConfig, 'data.notificationTitle'), this.page.routeParams)\n        );\n        this.router.navigate(['/usermgmt/users']);\n      });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}