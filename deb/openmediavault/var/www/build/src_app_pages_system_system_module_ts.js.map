{"version":3,"file":"src_app_pages_system_system_module_ts.js","mappings":"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C;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE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,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,IAAI,EAAE,IAAI,CAAC;oCACZ,CAAC,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","sources":["./src/app/pages/system/certificates/ssh/ssh-certificate-create-form-page.component.ts","./src/app/pages/system/certificates/ssh/ssh-certificate-datatable-page.component.ts","./src/app/pages/system/certificates/ssh/ssh-certificate-edit-form-page.component.ts","./src/app/pages/system/certificates/ssh/ssh-certificate-import-form-page.component.ts","./src/app/pages/system/certificates/ssl/ssl-certificate-datatable-page.component.ts","./src/app/pages/system/certificates/ssl/ssl-certificate-details-text-page.component.ts","./src/app/pages/system/certificates/ssl/ssl-certificate-form-page.component.ts","./src/app/pages/system/certificates/ssl/ssl-certificate-import-form-page.component.ts","./src/app/pages/system/cron/cron-task-datatable-page.component.ts","./src/app/pages/system/cron/cron-task-form-page.component.ts","./src/app/pages/system/date-time/date-time-form-page.component.ts","./src/app/pages/system/monitoring/monitoring-form-page.component.ts","./src/app/pages/system/notification/notification-selection-list-page.component.ts","./src/app/pages/system/notification/notification-settings-form-page.component.ts","./src/app/pages/system/plugins/plugins-datatable-page.component.ts","./src/app/pages/system/plugins/plugins-datatable-page.component.html","./src/app/pages/system/powermgmt/powermgmt-settings-form-page.component.ts","./src/app/pages/system/powermgmt/powermgmt-task-datatable-page.component.ts","./src/app/pages/system/powermgmt/powermgmt-task-form-page.component.ts","./src/app/pages/system/system-routing.module.ts","./src/app/pages/system/system.module.ts","./src/app/pages/system/updates/update-datatable-page.component.ts","./src/app/pages/system/updates/update-settings-form-page.component.ts","./src/app/pages/system/workbench/workbench-form-page.component.ts"],"sourcesContent":["/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class SshCertificateCreateFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'CertificateMgmt',\n      post: {\n        method: 'createSsh'\n      }\n    },\n    fields: [\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        hint: gettext('Specifies the type of key to create.'),\n        value: 'rsa',\n        store: {\n          data: [\n            ['rsa', 'RSA (3072b)'],\n            ['ed25519', 'Ed25519 (256b)']\n          ]\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        validators: {\n          required: true\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Create'),\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class SshCertificateDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    stateId: '85efa226-1c32-11ea-8f7a-67b9a1e57494',\n    columns: [\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'comment'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'CertificateMgmt',\n        get: {\n          method: 'getSshList'\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'menu',\n        icon: 'add',\n        tooltip: gettext('Create | Import'),\n        actions: [\n          {\n            template: 'create',\n            execute: {\n              type: 'url',\n              url: '/system/certificate/ssh/create'\n            }\n          },\n          {\n            type: 'iconButton',\n            text: gettext('Import'),\n            icon: 'import',\n            execute: {\n              type: 'url',\n              url: '/system/certificate/ssh/import'\n            }\n          }\n        ]\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh/edit/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'copy',\n        tooltip: gettext('Copy'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'formDialog',\n          formDialog: {\n            title: gettext('Copy public SSH key'),\n            fields: [\n              {\n                type: 'hint',\n                hintType: 'info',\n                text: gettext(\n                  'Installs the public SSH key on a remote system as an authorized key. Make sure password authentication is enabled on that remote system.'\n                )\n              },\n              {\n                type: 'hidden',\n                name: 'uuid',\n                value: '{{ _selected[0].uuid }}'\n              },\n              {\n                type: 'textInput',\n                name: 'hostname',\n                label: gettext('Hostname'),\n                hint: gettext('The hostname of the remote system.'),\n                value: '',\n                validators: {\n                  required: true\n                }\n              },\n              {\n                type: 'numberInput',\n                name: 'port',\n                label: gettext('Port'),\n                hint: gettext('The port on which SSH is running on the remote system.'),\n                value: 22,\n                validators: {\n                  required: true,\n                  patternType: 'port'\n                }\n              },\n              {\n                type: 'textInput',\n                name: 'username',\n                label: gettext('User name'),\n                value: '',\n                autocomplete: 'username',\n                validators: {\n                  required: true\n                }\n              },\n              {\n                type: 'passwordInput',\n                name: 'password',\n                label: gettext('Password'),\n                value: '',\n                autocomplete: 'new-password'\n              }\n            ],\n            buttons: {\n              submit: {\n                text: gettext('Copy'),\n                execute: {\n                  type: 'request',\n                  request: {\n                    service: 'CertificateMgmt',\n                    method: 'copySshId',\n                    progressMessage: gettext(\n                      'Please wait, installing public SSH key on remote system ...'\n                    ),\n                    successNotification: gettext('Copied SSH certificate to {{ hostname }}.')\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'CertificateMgmt',\n            method: 'deleteSsh',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class SshCertificateEditFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'CertificateMgmt',\n      get: {\n        method: 'getSsh',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setSsh'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'textInput',\n        name: 'publickey',\n        value: '',\n        monospace: true,\n        hasCopyToClipboardButton: true,\n        label: gettext('Public key'),\n        hint: gettext('The public key in OpenSSH format.'),\n        disabled: true\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        value: '',\n        label: gettext('Tags'),\n        validators: {\n          required: true\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class SshCertificateImportFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'CertificateMgmt',\n      post: {\n        method: 'setSsh'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'fileInput',\n        name: 'privatekey',\n        value: '',\n        monospace: true,\n        accept: '.key,.pem',\n        label: gettext('Private key'),\n        hint: gettext('The private key in PEM format.'),\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'fileInput',\n        name: 'publickey',\n        value: '',\n        monospace: true,\n        rows: 1,\n        accept: '.pub',\n        label: gettext('Public key'),\n        hint: gettext('The public key in OpenSSH format.'),\n        validators: {\n          required: true,\n          patternType: 'sshPubKeyOpenSsh'\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        value: '',\n        label: gettext('Tags'),\n        validators: {\n          required: true\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Import'),\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssh'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class SslCertificateDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    stateId: '9fe3e818-1c32-11ea-bde4-5f0ce98b6927',\n    columns: [\n      {\n        name: gettext('Valid from'),\n        prop: 'validfrom',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'localeDateTime'\n      },\n      {\n        name: gettext('Valid to'),\n        prop: 'validto',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'localeDateTime'\n      },\n      {\n        name: gettext('Fingerprint (SHA-1)'),\n        prop: 'fingerprintsha1',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'copyToClipboard'\n      },\n      {\n        name: gettext('Fingerprint (SHA-256)'),\n        prop: 'fingerprintsha256',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'copyToClipboard'\n      },\n      {\n        name: gettext('Referenced'),\n        prop: '_used',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'checkIcon'\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'comment'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'CertificateMgmt',\n        get: {\n          method: 'getList'\n        }\n      }\n    },\n    actions: [\n      {\n        type: 'menu',\n        icon: 'add',\n        tooltip: gettext('Create | Import'),\n        actions: [\n          {\n            template: 'create',\n            execute: {\n              type: 'url',\n              url: '/system/certificate/ssl/create'\n            }\n          },\n          {\n            type: 'iconButton',\n            text: gettext('Import'),\n            icon: 'import',\n            execute: {\n              type: 'url',\n              url: '/system/certificate/ssl/import'\n            }\n          }\n        ]\n      },\n      {\n        type: 'iconButton',\n        icon: 'details',\n        tooltip: gettext('Show details'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssl/detail/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        template: 'delete',\n        enabledConstraints: {\n          constraint: [\n            // Disable button if a selected SSL certificate is in use.\n            { operator: 'falsy', arg0: { prop: '_used' } }\n          ]\n        },\n        execute: {\n          type: 'request',\n          request: {\n            service: 'CertificateMgmt',\n            method: 'delete',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { TextPageConfig } from '~/app/core/components/intuition/models/text-page-config.type';\n\n@Component({\n  template: '<omv-intuition-text-page [config]=\"this.config\"></omv-intuition-text-page>'\n})\nexport class SslCertificateDetailsTextPageComponent {\n  public config: TextPageConfig = {\n    request: {\n      service: 'CertificateMgmt',\n      get: {\n        method: 'getDetail',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      }\n    },\n    buttons: [\n      {\n        template: 'back',\n        url: '/system/certificate/ssl'\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class SslCertificateFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'CertificateMgmt',\n      post: {\n        method: 'create'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'select',\n        name: 'size',\n        label: gettext('Key size'),\n        hint: gettext('The RSA key length.'),\n        value: 4096,\n        store: {\n          data: [\n            {\n              text: '2048b',\n              value: 2048\n            },\n            {\n              text: '4096b',\n              value: 4096\n            }\n          ],\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'value'\n            }\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'days',\n        label: gettext('Period of validity'),\n        hint: gettext('The number of days the certificate is valid for.'),\n        value: 365,\n        store: {\n          data: [\n            {\n              text: gettext('1 day'),\n              value: 1\n            },\n            {\n              text: gettext('2 days'),\n              value: 2\n            },\n            {\n              text: gettext('3 days'),\n              value: 3\n            },\n            {\n              text: gettext('4 days'),\n              value: 4\n            },\n            {\n              text: gettext('5 days'),\n              value: 5\n            },\n            {\n              text: gettext('6 days'),\n              value: 6\n            },\n            {\n              text: gettext('1 week'),\n              value: 7\n            },\n            {\n              text: gettext('2 weeks'),\n              value: 14\n            },\n            {\n              text: gettext('3 weeks'),\n              value: 21\n            },\n            {\n              text: gettext('1 month'),\n              value: 30\n            },\n            {\n              text: gettext('3 months'),\n              value: 90\n            },\n            {\n              text: gettext('6 months'),\n              value: 180\n            },\n            {\n              text: gettext('9 months'),\n              value: 270\n            },\n            {\n              text: gettext('1 year'),\n              value: 365\n            },\n            {\n              text: gettext('2 years'),\n              value: 740\n            },\n            {\n              text: gettext('3 years'),\n              value: 1095\n            },\n            {\n              text: gettext('4 years'),\n              value: 1460\n            },\n            {\n              text: gettext('5 years'),\n              value: 1825\n            },\n            {\n              text: gettext('10 years'),\n              value: 3650\n            },\n            {\n              text: gettext('15 years'),\n              value: 5475\n            },\n            {\n              text: gettext('20 years'),\n              value: 7300\n            },\n            {\n              text: gettext('25 years'),\n              value: 9125\n            }\n          ],\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'value'\n            }\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'cn',\n        value: '{{ location() | get(\"hostname\") }}',\n        label: gettext('Common Name'),\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'o',\n        value: '',\n        label: gettext('Organization Name')\n      },\n      {\n        type: 'textInput',\n        name: 'ou',\n        value: '',\n        label: gettext('Organization Unit')\n      },\n      {\n        type: 'textInput',\n        name: 'l',\n        value: '',\n        label: gettext('City')\n      },\n      {\n        type: 'textInput',\n        name: 'st',\n        value: '',\n        label: gettext('State/Province')\n      },\n      {\n        type: 'select',\n        name: 'c',\n        value: '',\n        label: gettext('Country'),\n        placeholder: gettext('Select a country ...'),\n        store: {\n          data: [\n            { value: 'AF', text: gettext('Afghanistan') },\n            { value: 'AX', text: gettext('Aland Islands') },\n            { value: 'AL', text: gettext('Albania') },\n            { value: 'DZ', text: gettext('Algeria') },\n            { value: 'AS', text: gettext('American Samoa') },\n            { value: 'AD', text: gettext('Andorra') },\n            { value: 'AO', text: gettext('Angola') },\n            { value: 'AI', text: gettext('Anguilla') },\n            { value: 'AQ', text: gettext('Antarctica') },\n            { value: 'AG', text: gettext('Antigua and Barbuda') },\n            { value: 'AR', text: gettext('Argentina') },\n            { value: 'AM', text: gettext('Armenia') },\n            { value: 'AW', text: gettext('Aruba') },\n            { value: 'AU', text: gettext('Australia') },\n            { value: 'AT', text: gettext('Austria') },\n            { value: 'AZ', text: gettext('Azerbaijan') },\n            { value: 'BS', text: gettext('Bahamas') },\n            { value: 'BH', text: gettext('Bahrain') },\n            { value: 'BD', text: gettext('Bangladesh') },\n            { value: 'BB', text: gettext('Barbados') },\n            { value: 'BY', text: gettext('Belarus') },\n            { value: 'BE', text: gettext('Belgium') },\n            { value: 'BZ', text: gettext('Belize') },\n            { value: 'BJ', text: gettext('Benin') },\n            { value: 'BM', text: gettext('Bermuda') },\n            { value: 'BT', text: gettext('Bhutan') },\n            { value: 'BO', text: gettext('Bolivia') },\n            { value: 'BA', text: gettext('Bosnia and Herzegovina') },\n            { value: 'BW', text: gettext('Botswana') },\n            { value: 'BV', text: gettext('Bouvet Island') },\n            { value: 'BR', text: gettext('Brazil') },\n            { value: 'BQ', text: gettext('British Antarctic Territory') },\n            { value: 'IO', text: gettext('British Indian Ocean Territory') },\n            { value: 'VG', text: gettext('British Virgin Islands') },\n            { value: 'BN', text: gettext('Brunei') },\n            { value: 'BG', text: gettext('Bulgaria') },\n            { value: 'BF', text: gettext('Burkina Faso') },\n            { value: 'BI', text: gettext('Burundi') },\n            { value: 'KH', text: gettext('Cambodia') },\n            { value: 'CM', text: gettext('Cameroon') },\n            { value: 'CA', text: gettext('Canada') },\n            { value: 'CT', text: gettext('Canton and Enderbury Islands') },\n            { value: 'CV', text: gettext('Cape Verde') },\n            { value: 'KY', text: gettext('Cayman Islands') },\n            { value: 'CF', text: gettext('Central African Republic') },\n            { value: 'TD', text: gettext('Chad') },\n            { value: 'CL', text: gettext('Chile') },\n            { value: 'CN', text: gettext('China') },\n            { value: 'CX', text: gettext('Christmas Island') },\n            { value: 'CC', text: gettext('Cocos (Keeling) Islands') },\n            { value: 'CO', text: gettext('Colombia') },\n            { value: 'KM', text: gettext('Comoros') },\n            { value: 'CG', text: gettext('Congo (Brazzaville)') },\n            { value: 'CD', text: gettext('Congo (Kinshasa)') },\n            { value: 'CK', text: gettext('Cook Islands') },\n            { value: 'CR', text: gettext('Costa Rica') },\n            { value: 'HR', text: gettext('Croatia') },\n            { value: 'CU', text: gettext('Cuba') },\n            { value: 'CY', text: gettext('Cyprus') },\n            { value: 'CZ', text: gettext('Czech Republic') },\n            { value: 'DK', text: gettext('Denmark') },\n            { value: 'DJ', text: gettext('Djibouti') },\n            { value: 'DM', text: gettext('Dominica') },\n            { value: 'DO', text: gettext('Dominican Republic') },\n            { value: 'NQ', text: gettext('Dronning Maud Land') },\n            { value: 'TL', text: gettext('East Timor') },\n            { value: 'EC', text: gettext('Ecuador') },\n            { value: 'EG', text: gettext('Egypt') },\n            { value: 'SV', text: gettext('El Salvador') },\n            { value: 'GQ', text: gettext('Equatorial Guinea') },\n            { value: 'ER', text: gettext('Eritrea') },\n            { value: 'EE', text: gettext('Estonia') },\n            { value: 'ET', text: gettext('Ethiopia') },\n            { value: 'FK', text: gettext('Falkland Islands') },\n            { value: 'FO', text: gettext('Faroe Islands') },\n            { value: 'FJ', text: gettext('Fiji') },\n            { value: 'FI', text: gettext('Finland') },\n            { value: 'FR', text: gettext('France') },\n            { value: 'GF', text: gettext('French Guiana') },\n            { value: 'PF', text: gettext('French Polynesia') },\n            { value: 'TF', text: gettext('French Southern Territories') },\n            { value: 'FQ', text: gettext('French Southern and Antarctic Territories') },\n            { value: 'GA', text: gettext('Gabon') },\n            { value: 'GM', text: gettext('Gambia') },\n            { value: 'GE', text: gettext('Georgia') },\n            { value: 'DE', text: gettext('Germany') },\n            { value: 'GH', text: gettext('Ghana') },\n            { value: 'GI', text: gettext('Gibraltar') },\n            { value: 'GR', text: gettext('Greece') },\n            { value: 'GL', text: gettext('Greenland') },\n            { value: 'GD', text: gettext('Grenada') },\n            { value: 'GP', text: gettext('Guadeloupe') },\n            { value: 'GU', text: gettext('Guam') },\n            { value: 'GT', text: gettext('Guatemala') },\n            { value: 'GN', text: gettext('Guinea') },\n            { value: 'GW', text: gettext('Guinea-Bissau') },\n            { value: 'GY', text: gettext('Guyana') },\n            { value: 'HT', text: gettext('Haiti') },\n            { value: 'HM', text: gettext('Heard Island and McDonald Islands') },\n            { value: 'HN', text: gettext('Honduras') },\n            { value: 'HK', text: gettext('Hong Kong S.A.R., China') },\n            { value: 'HU', text: gettext('Hungary') },\n            { value: 'IS', text: gettext('Iceland') },\n            { value: 'IN', text: gettext('India') },\n            { value: 'ID', text: gettext('Indonesia') },\n            { value: 'IR', text: gettext('Iran') },\n            { value: 'IQ', text: gettext('Iraq') },\n            { value: 'IE', text: gettext('Ireland') },\n            { value: 'IL', text: gettext('Israel') },\n            { value: 'IT', text: gettext('Italy') },\n            { value: 'CI', text: gettext('Ivory Coast') },\n            { value: 'JM', text: gettext('Jamaica') },\n            { value: 'JP', text: gettext('Japan') },\n            { value: 'JT', text: gettext('Johnston Island') },\n            { value: 'JO', text: gettext('Jordan') },\n            { value: 'KZ', text: gettext('Kazakhstan') },\n            { value: 'KE', text: gettext('Kenya') },\n            { value: 'KI', text: gettext('Kiribati') },\n            { value: 'KW', text: gettext('Kuwait') },\n            { value: 'KG', text: gettext('Kyrgyzstan') },\n            { value: 'LA', text: gettext('Laos') },\n            { value: 'LV', text: gettext('Latvia') },\n            { value: 'LB', text: gettext('Lebanon') },\n            { value: 'LS', text: gettext('Lesotho') },\n            { value: 'LR', text: gettext('Liberia') },\n            { value: 'LY', text: gettext('Libya') },\n            { value: 'LI', text: gettext('Liechtenstein') },\n            { value: 'LT', text: gettext('Lithuania') },\n            { value: 'LU', text: gettext('Luxembourg') },\n            { value: 'MO', text: gettext('Macao S.A.R., China') },\n            { value: 'MK', text: gettext('Macedonia') },\n            { value: 'MG', text: gettext('Madagascar') },\n            { value: 'MW', text: gettext('Malawi') },\n            { value: 'MY', text: gettext('Malaysia') },\n            { value: 'MV', text: gettext('Maldives') },\n            { value: 'ML', text: gettext('Mali') },\n            { value: 'MT', text: gettext('Malta') },\n            { value: 'MH', text: gettext('Marshall Islands') },\n            { value: 'MQ', text: gettext('Martinique') },\n            { value: 'MR', text: gettext('Mauritania') },\n            { value: 'MU', text: gettext('Mauritius') },\n            { value: 'YT', text: gettext('Mayotte') },\n            { value: 'FX', text: gettext('Metropolitan France') },\n            { value: 'MX', text: gettext('Mexico') },\n            { value: 'FM', text: gettext('Micronesia') },\n            { value: 'MI', text: gettext('Midway Islands') },\n            { value: 'MD', text: gettext('Moldova') },\n            { value: 'MC', text: gettext('Monaco') },\n            { value: 'MN', text: gettext('Mongolia') },\n            { value: 'MS', text: gettext('Montserrat') },\n            { value: 'MA', text: gettext('Morocco') },\n            { value: 'MZ', text: gettext('Mozambique') },\n            { value: 'MM', text: gettext('Myanmar') },\n            { value: 'NA', text: gettext('Namibia') },\n            { value: 'NR', text: gettext('Nauru') },\n            { value: 'NP', text: gettext('Nepal') },\n            { value: 'NL', text: gettext('Netherlands') },\n            { value: 'AN', text: gettext('Netherlands Antilles') },\n            { value: 'NT', text: gettext('Neutral Zone') },\n            { value: 'NC', text: gettext('New Caledonia') },\n            { value: 'NZ', text: gettext('New Zealand') },\n            { value: 'NI', text: gettext('Nicaragua') },\n            { value: 'NE', text: gettext('Niger') },\n            { value: 'NG', text: gettext('Nigeria') },\n            { value: 'NU', text: gettext('Niue') },\n            { value: 'NF', text: gettext('Norfolk Island') },\n            { value: 'KP', text: gettext('North Korea') },\n            { value: 'VD', text: gettext('North Vietnam') },\n            { value: 'MP', text: gettext('Northern Mariana Islands') },\n            { value: 'NO', text: gettext('Norway') },\n            { value: 'OM', text: gettext('Oman') },\n            { value: 'QO', text: gettext('Outlying Oceania') },\n            { value: 'PC', text: gettext('Pacific Islands Trust Territory') },\n            { value: 'PK', text: gettext('Pakistan') },\n            { value: 'PW', text: gettext('Palau') },\n            { value: 'PS', text: gettext('Palestinian Territory') },\n            { value: 'PA', text: gettext('Panama') },\n            { value: 'PZ', text: gettext('Panama Canal Zone') },\n            { value: 'PG', text: gettext('Papua New Guinea') },\n            { value: 'PY', text: gettext('Paraguay') },\n            { value: 'YD', text: gettext(\"People's Democratic Republic of Yemen\") },\n            { value: 'PE', text: gettext('Peru') },\n            { value: 'PH', text: gettext('Philippines') },\n            { value: 'PN', text: gettext('Pitcairn') },\n            { value: 'PL', text: gettext('Poland') },\n            { value: 'PT', text: gettext('Portugal') },\n            { value: 'PR', text: gettext('Puerto Rico') },\n            { value: 'QA', text: gettext('Qatar') },\n            { value: 'RE', text: gettext('Reunion') },\n            { value: 'RO', text: gettext('Romania') },\n            { value: 'RU', text: gettext('Russia') },\n            { value: 'RW', text: gettext('Rwanda') },\n            { value: 'SH', text: gettext('Saint Helena') },\n            { value: 'KN', text: gettext('Saint Kitts and Nevis') },\n            { value: 'LC', text: gettext('Saint Lucia') },\n            { value: 'PM', text: gettext('Saint Pierre and Miquelon') },\n            { value: 'VC', text: gettext('Saint Vincent and the Grenadines') },\n            { value: 'WS', text: gettext('Samoa') },\n            { value: 'SM', text: gettext('San Marino') },\n            { value: 'ST', text: gettext('Sao Tome and Principe') },\n            { value: 'SA', text: gettext('Saudi Arabia') },\n            { value: 'SN', text: gettext('Senegal') },\n            { value: 'CS', text: gettext('Serbia And Montenegro') },\n            { value: 'SC', text: gettext('Seychelles') },\n            { value: 'SL', text: gettext('Sierra Leone') },\n            { value: 'SG', text: gettext('Singapore') },\n            { value: 'SK', text: gettext('Slovakia') },\n            { value: 'SI', text: gettext('Slovenia') },\n            { value: 'SB', text: gettext('Solomon Islands') },\n            { value: 'SO', text: gettext('Somalia') },\n            { value: 'ZA', text: gettext('South Africa') },\n            { value: 'GS', text: gettext('South Georgia and the South Sandwich Islands') },\n            { value: 'KR', text: gettext('South Korea') },\n            { value: 'ES', text: gettext('Spain') },\n            { value: 'LK', text: gettext('Sri Lanka') },\n            { value: 'SD', text: gettext('Sudan') },\n            { value: 'SR', text: gettext('Suriname') },\n            { value: 'SJ', text: gettext('Svalbard and Jan Mayen') },\n            { value: 'SZ', text: gettext('Swaziland') },\n            { value: 'SE', text: gettext('Sweden') },\n            { value: 'CH', text: gettext('Switzerland') },\n            { value: 'SY', text: gettext('Syria') },\n            { value: 'TW', text: gettext('Taiwan') },\n            { value: 'TJ', text: gettext('Tajikistan') },\n            { value: 'TZ', text: gettext('Tanzania') },\n            { value: 'TH', text: gettext('Thailand') },\n            { value: 'TG', text: gettext('Togo') },\n            { value: 'TK', text: gettext('Tokelau') },\n            { value: 'TO', text: gettext('Tonga') },\n            { value: 'TT', text: gettext('Trinidad and Tobago') },\n            { value: 'TN', text: gettext('Tunisia') },\n            { value: 'TR', text: gettext('Turkey') },\n            { value: 'TM', text: gettext('Turkmenistan') },\n            { value: 'TC', text: gettext('Turks and Caicos Islands') },\n            { value: 'TV', text: gettext('Tuvalu') },\n            { value: 'PU', text: gettext('U.S. Miscellaneous Pacific Islands') },\n            { value: 'VI', text: gettext('U.S. Virgin Islands') },\n            { value: 'UG', text: gettext('Uganda') },\n            { value: 'UA', text: gettext('Ukraine') },\n            { value: 'SU', text: gettext('Union of Soviet Socialist Republics') },\n            { value: 'AE', text: gettext('United Arab Emirates') },\n            { value: 'GB', text: gettext('United Kingdom') },\n            { value: 'US', text: gettext('United States') },\n            { value: 'UM', text: gettext('United States Minor Outlying Islands') },\n            { value: 'UY', text: gettext('Uruguay') },\n            { value: 'UZ', text: gettext('Uzbekistan') },\n            { value: 'VU', text: gettext('Vanuatu') },\n            { value: 'VA', text: gettext('Vatican') },\n            { value: 'VE', text: gettext('Venezuela') },\n            { value: 'VN', text: gettext('Vietnam') },\n            { value: 'WK', text: gettext('Wake Island') },\n            { value: 'WF', text: gettext('Wallis and Futuna') },\n            { value: 'EH', text: gettext('Western Sahara') },\n            { value: 'YE', text: gettext('Yemen') },\n            { value: 'ZM', text: gettext('Zambia') },\n            { value: 'ZW', text: gettext('Zimbabwe') }\n          ],\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'label'\n            }\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'email',\n        value: '',\n        label: gettext('Email'),\n        validators: {\n          patternType: 'email'\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        value: '',\n        label: gettext('Tags'),\n        hint: gettext(\n          'This field is automatically filled with the subject of the certificate if left blank.'\n        )\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Create'),\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssl'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssl'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class SslCertificateImportFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'CertificateMgmt',\n      post: {\n        method: 'set'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'fileInput',\n        name: 'privatekey',\n        value: '',\n        monospace: true,\n        accept: '.key,.pem',\n        label: gettext('Private key'),\n        hint: gettext('Paste a RSA or ECC private key in X.509 PEM format here.'),\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'fileInput',\n        name: 'certificate',\n        value: '',\n        monospace: true,\n        accept: '.crt,.pem',\n        label: gettext('Certificate'),\n        hint: gettext('Paste a RSA or ECC certificate in X.509 PEM format here.'),\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        value: '',\n        label: gettext('Tags'),\n        validators: {\n          required: true\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        text: gettext('Import'),\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssl'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/certificate/ssl'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class CronTaskDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    autoReload: false,\n    stateId: '43b8eb04-2594-11ea-8bd6-fb7a107fca0e',\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'enable'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'Cron',\n        get: {\n          method: 'getList',\n          params: {\n            type: ['userdefined']\n          }\n        }\n      }\n    },\n    columns: [\n      {\n        name: gettext('Enabled'),\n        prop: 'enable',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'checkIcon'\n      },\n      {\n        name: gettext('Scheduling'),\n        prop: '',\n        flexGrow: 1,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          '{% if execution == \"exactly\" %}' +\n          '{% set _minute = minute %}' +\n          '{% set _hour = hour %}' +\n          '{% set _dayofmonth = dayofmonth %}' +\n          '{% if everynminute %}{% set _minute %}*/{{ minute }}{% endset %}{% endif %}' +\n          '{% if everynhour %}{% set _hour %}*/{{ hour }}{% endset %}{% endif %}' +\n          '{% if everyndayofmonth %}{% set _dayofmonth %}*/{{ dayofmonth }}{% endset %}{% endif %}' +\n          '{{ [_minute, _hour, _dayofmonth, month, dayofweek] | join(\" \") | cron2human }}' +\n          '{% else %}' +\n          '{{ execution | capitalize | translate }}' +\n          '{% endif %}'\n      },\n      {\n        name: gettext('User'),\n        prop: 'username',\n        flexGrow: 1,\n        sortable: true\n      },\n      {\n        name: gettext('Command'),\n        prop: 'command',\n        cellTemplateName: 'text',\n        flexGrow: 1,\n        sortable: true\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    actions: [\n      {\n        template: 'create',\n        execute: {\n          type: 'url',\n          url: '/system/cron/create'\n        }\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/system/cron/edit/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'start',\n        tooltip: gettext('Run'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'taskDialog',\n          taskDialog: {\n            config: {\n              title: gettext('Run scheduled task'),\n              startOnInit: true,\n              request: {\n                service: 'Cron',\n                method: 'execute',\n                params: {\n                  uuid: '{{ _selected[0].uuid }}'\n                }\n              }\n            }\n          }\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Cron',\n            method: 'delete',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class CronTaskFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Cron',\n      get: {\n        method: 'get',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'set',\n        params: {\n          type: 'userdefined'\n        }\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'checkbox',\n        name: 'enable',\n        label: gettext('Enabled'),\n        value: true\n      },\n      {\n        type: 'select',\n        name: 'execution',\n        label: gettext('Time of execution'),\n        value: 'exactly',\n        store: {\n          data: [\n            ['exactly', gettext('Certain date')],\n            ['hourly', gettext('Hourly')],\n            ['daily', gettext('Daily')],\n            ['weekly', gettext('Weekly')],\n            ['monthly', gettext('Monthly')],\n            ['yearly', gettext('Yearly')],\n            ['reboot', gettext('At reboot')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'cronexprdesc',\n        disabled: true,\n        submitValue: false,\n        value: '',\n        modifiers: [\n          {\n            type: 'visible',\n            constraint: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' }\n          },\n          {\n            type: 'value',\n            typeConfig:\n              '{% if execution == \"exactly\" %}' +\n              '{% set _minute = minute %}' +\n              '{% set _hour = hour %}' +\n              '{% set _dayofmonth = dayofmonth %}' +\n              '{% if everynminute %}{% set _minute %}*/{{ minute }}{% endset %}{% endif %}' +\n              '{% if everynhour %}{% set _hour %}*/{{ hour }}{% endset %}{% endif %}' +\n              '{% if everyndayofmonth %}{% set _dayofmonth %}*/{{ dayofmonth }}{% endset %}{% endif %}' +\n              '{{ [_minute, _hour, _dayofmonth, month, dayofweek] | join(\" \") | cron2human }}' +\n              '{% endif %}',\n            deps: [\n              'execution',\n              'minute',\n              'everynminute',\n              'hour',\n              'everynhour',\n              'dayofmonth',\n              'everyndayofmonth',\n              'month',\n              'dayofweek'\n            ]\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'select',\n            name: 'minute',\n            label: gettext('Minute'),\n            value: ['{{ moment(\"H:m:ss\") | split(\":\") | get(1) }}'],\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n              }\n            ],\n            validators: {\n              requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n              pattern: {\n                pattern: '^(\\\\*|(([0-9]|[1-5][0-9]),)*([0-9]|[1-5][0-9]))$',\n                errorData: gettext(\n                  'The field should only contain * or a comma separated list of values.'\n                )\n              }\n            },\n            multiple: true,\n            store: {\n              data: [\n                ['*', '*'],\n                ['0', '0'],\n                ['1', '1'],\n                ['2', '2'],\n                ['3', '3'],\n                ['4', '4'],\n                ['5', '5'],\n                ['6', '6'],\n                ['7', '7'],\n                ['8', '8'],\n                ['9', '9'],\n                ['10', '10'],\n                ['11', '11'],\n                ['12', '12'],\n                ['13', '13'],\n                ['14', '14'],\n                ['15', '15'],\n                ['16', '16'],\n                ['17', '17'],\n                ['18', '18'],\n                ['19', '19'],\n                ['20', '20'],\n                ['21', '21'],\n                ['22', '22'],\n                ['23', '23'],\n                ['24', '24'],\n                ['25', '25'],\n                ['26', '26'],\n                ['27', '27'],\n                ['28', '28'],\n                ['29', '29'],\n                ['30', '30'],\n                ['31', '31'],\n                ['32', '32'],\n                ['33', '33'],\n                ['34', '34'],\n                ['35', '35'],\n                ['36', '36'],\n                ['37', '37'],\n                ['38', '38'],\n                ['39', '39'],\n                ['40', '40'],\n                ['41', '41'],\n                ['42', '42'],\n                ['43', '43'],\n                ['44', '44'],\n                ['45', '45'],\n                ['46', '46'],\n                ['47', '47'],\n                ['48', '48'],\n                ['49', '49'],\n                ['50', '50'],\n                ['51', '51'],\n                ['52', '52'],\n                ['53', '53'],\n                ['54', '54'],\n                ['55', '55'],\n                ['56', '56'],\n                ['57', '57'],\n                ['58', '58'],\n                ['59', '59']\n              ]\n            }\n          },\n          {\n            type: 'checkbox',\n            name: 'everynminute',\n            label: gettext('Every N minute'),\n            value: false,\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: {\n                  operator: 'or',\n                  arg0: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' },\n                  arg1: {\n                    operator: 'or',\n                    arg0: {\n                      operator: '<>',\n                      arg0: {\n                        operator: 'length',\n                        arg0: { prop: 'minute' }\n                      },\n                      arg1: 1\n                    },\n                    arg1: {\n                      operator: 'in',\n                      arg0: { value: '*' },\n                      arg1: { prop: 'minute' }\n                    }\n                  }\n                }\n              },\n              {\n                type: 'unchecked',\n                opposite: false,\n                constraint: {\n                  operator: '<>',\n                  arg0: {\n                    operator: 'length',\n                    arg0: { prop: 'minute' }\n                  },\n                  arg1: 1\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'select',\n            name: 'hour',\n            label: gettext('Hour'),\n            value: ['{{ moment(\"H:m:ss\") | split(\":\") | get(0) }}'],\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n              }\n            ],\n            validators: {\n              requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n              pattern: {\n                pattern: '^(\\\\*|(([0-9]|1[0-9]|2[0-3]),)*([0-9]|1[0-9]|2[0-3]))$',\n                errorData: gettext(\n                  'The field should only contain * or a comma separated list of values.'\n                )\n              }\n            },\n            multiple: true,\n            store: {\n              data: [\n                ['*', '*'],\n                ['0', '0'],\n                ['1', '1'],\n                ['2', '2'],\n                ['3', '3'],\n                ['4', '4'],\n                ['5', '5'],\n                ['6', '6'],\n                ['7', '7'],\n                ['8', '8'],\n                ['9', '9'],\n                ['10', '10'],\n                ['11', '11'],\n                ['12', '12'],\n                ['13', '13'],\n                ['14', '14'],\n                ['15', '15'],\n                ['16', '16'],\n                ['17', '17'],\n                ['18', '18'],\n                ['19', '19'],\n                ['20', '20'],\n                ['21', '21'],\n                ['22', '22'],\n                ['23', '23']\n              ]\n            }\n          },\n          {\n            type: 'checkbox',\n            name: 'everynhour',\n            label: gettext('Every N hour'),\n            value: false,\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: {\n                  operator: 'or',\n                  arg0: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' },\n                  arg1: {\n                    operator: 'or',\n                    arg0: {\n                      operator: '<>',\n                      arg0: {\n                        operator: 'length',\n                        arg0: { prop: 'hour' }\n                      },\n                      arg1: 1\n                    },\n                    arg1: {\n                      operator: 'in',\n                      arg0: { value: '*' },\n                      arg1: { prop: 'hour' }\n                    }\n                  }\n                }\n              },\n              {\n                type: 'unchecked',\n                opposite: false,\n                constraint: {\n                  operator: '<>',\n                  arg0: {\n                    operator: 'length',\n                    arg0: { prop: 'hour' }\n                  },\n                  arg1: 1\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'select',\n            name: 'dayofmonth',\n            label: gettext('Day of month'),\n            value: ['*'],\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n              }\n            ],\n            validators: {\n              requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n              pattern: {\n                pattern: '^(\\\\*|(([1-9]|[12][0-9]|3[01]),)*([1-9]|[12][0-9]|3[01]))$',\n                errorData: gettext(\n                  'The field should only contain * or a comma separated list of values.'\n                )\n              }\n            },\n            multiple: true,\n            store: {\n              data: [\n                ['*', '*'],\n                ['1', '1'],\n                ['2', '2'],\n                ['3', '3'],\n                ['4', '4'],\n                ['5', '5'],\n                ['6', '6'],\n                ['7', '7'],\n                ['8', '8'],\n                ['9', '9'],\n                ['10', '10'],\n                ['11', '11'],\n                ['12', '12'],\n                ['13', '13'],\n                ['14', '14'],\n                ['15', '15'],\n                ['16', '16'],\n                ['17', '17'],\n                ['18', '18'],\n                ['19', '19'],\n                ['20', '20'],\n                ['21', '21'],\n                ['22', '22'],\n                ['23', '23'],\n                ['24', '24'],\n                ['25', '25'],\n                ['26', '26'],\n                ['27', '27'],\n                ['28', '28'],\n                ['29', '29'],\n                ['30', '30'],\n                ['31', '31']\n              ]\n            }\n          },\n          {\n            type: 'checkbox',\n            name: 'everyndayofmonth',\n            label: gettext('Every N day of month'),\n            value: false,\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: {\n                  operator: 'or',\n                  arg0: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' },\n                  arg1: {\n                    operator: 'or',\n                    arg0: {\n                      operator: '<>',\n                      arg0: {\n                        operator: 'length',\n                        arg0: { prop: 'dayofmonth' }\n                      },\n                      arg1: 1\n                    },\n                    arg1: {\n                      operator: 'in',\n                      arg0: { value: '*' },\n                      arg1: { prop: 'dayofmonth' }\n                    }\n                  }\n                }\n              },\n              {\n                type: 'unchecked',\n                opposite: false,\n                constraint: {\n                  operator: '<>',\n                  arg0: {\n                    operator: 'length',\n                    arg0: { prop: 'dayofmonth' }\n                  },\n                  arg1: 1\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'select',\n        name: 'month',\n        label: gettext('Month'),\n        value: ['*'],\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n          pattern: {\n            pattern: '^(\\\\*|(([1-9]|1[0-2]),)*([1-9]|1[0-2]))$',\n            errorData: gettext(\n              'The field should only contain * or a comma separated list of values.'\n            )\n          }\n        },\n        multiple: true,\n        store: {\n          data: [\n            ['*', '*'],\n            ['1', gettext('January')],\n            ['2', gettext('February')],\n            ['3', gettext('March')],\n            ['4', gettext('April')],\n            ['5', gettext('May')],\n            ['6', gettext('June')],\n            ['7', gettext('July')],\n            ['8', gettext('August')],\n            ['9', gettext('September')],\n            ['10', gettext('October')],\n            ['11', gettext('November')],\n            ['12', gettext('December')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'dayofweek',\n        label: gettext('Day of week'),\n        value: ['*'],\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n          pattern: {\n            pattern: '^(\\\\*|([1-7],)*[1-7])$',\n            errorData: gettext(\n              'The field should only contain * or a comma separated list of values.'\n            )\n          }\n        },\n        multiple: true,\n        store: {\n          data: [\n            ['*', '*'],\n            ['1', gettext('Monday')],\n            ['2', gettext('Tuesday')],\n            ['3', gettext('Wednesday')],\n            ['4', gettext('Thursday')],\n            ['5', gettext('Friday')],\n            ['6', gettext('Saturday')],\n            ['7', gettext('Sunday')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'username',\n        label: gettext('User'),\n        placeholder: gettext('Select an user ...'),\n        value: 'root',\n        valueField: 'name',\n        textField: 'name',\n        store: {\n          proxy: {\n            service: 'UserMgmt',\n            get: {\n              method: 'enumerateAllUsers',\n              params: {}\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'name'\n            }\n          ]\n        },\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'command',\n        label: gettext('Command'),\n        value: '',\n        validators: {\n          required: true\n        }\n      },\n      {\n        type: 'checkbox',\n        name: 'sendemail',\n        label: gettext('Send command output via email'),\n        value: false,\n        hint: gettext(\n          'An email message with the command output (if any produced) is send to the user who performs the job.'\n        )\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/system/cron'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/cron'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class DateTimeFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'System',\n      get: {\n        method: 'getTimeSettings',\n        params:{}\n      },\n      post: {\n        method: 'setTimeSettings',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'select',\n        name: 'timezone',\n        label: gettext('Time zone'),\n        store: {\n          proxy: {\n            service: 'System',\n            get: {\n              method: 'getTimeZoneList',\n              params:{}\n            }\n          }\n        },\n        textField: 'value',\n        value: 'UTC'\n      },\n      {\n        type: 'checkbox',\n        name: 'ntpenable',\n        label: gettext('Use NTP server'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'ntptimeservers',\n        label: gettext('Time servers'),\n        hint: gettext('NTP time servers, separated by comma.'),\n        value: 'pool.ntp.org',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'ntpenable' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'ntpenable' } },\n          patternType: 'domainNameIpList'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'ntpclients',\n        label: gettext('Allowed clients'),\n        hint: gettext(\n          'IP addresses in CIDR notation or host names of clients that are allowed to access the NTP server.'\n        ),\n        value: '',\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'falsy', arg0: { prop: 'ntpenable' } }\n          }\n        ],\n        validators: {\n          patternType: 'hostNameIpNetCidrList'\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class MonitoringFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'PerfStats',\n      get: {\n        method: 'get',\n        params:{},\n      },\n      post: {\n        method: 'set',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'checkbox',\n        name: 'enable',\n        label: gettext('Enabled'),\n        value: true,\n        hint: gettext(\n          'Specifies whether the system performance statistics are collected periodically.'\n        )\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\n\nimport { SelectionListPageConfig } from '~/app/core/components/intuition/models/selection-list-page-config.type';\nimport { BaseSelectionListPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template:\n    '<omv-intuition-selection-list-page [config]=\"this.config\"></omv-intuition-selection-list-page>'\n})\nexport class NotificationSelectionListPageComponent extends BaseSelectionListPageComponent {\n  public config: SelectionListPageConfig = {\n    hasSelectAllButton: true,\n    multiple: true,\n    textProp: 'title',\n    valueProp: 'uuid',\n    selectedProp: 'enable',\n    updateStoreOnSelectionChange: true,\n    store: {\n      proxy: {\n        service: 'Notification',\n        get: {\n          method: 'getList',\n          params:{}\n        },\n        post: {\n          method: 'setList',\n          params:{},\n          filter: {\n            mode: 'pick',\n            props: ['uuid', 'id', 'enable']\n          }\n        }\n      },\n      sorters: [\n        {\n          dir: 'asc',\n          prop: 'title'\n        }\n      ]\n    },\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/notification'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class NotificationSettingsFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'EmailNotification',\n      get: {\n        method: 'get',\n        params:{},\n      },\n      post: {\n        method: 'set',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'checkbox',\n        name: 'enable',\n        label: gettext('Enabled'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'server',\n        label: gettext('SMTP server'),\n        hint: gettext('Outgoing SMTP mail server address, e.g. smtp.mycorp.com.'),\n        value: '',\n        validators: {\n          requiredIf: { operator: 'eq', arg0: { prop: 'enable' }, arg1: true },\n          patternType: 'domainNameIp'\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'port',\n        label: gettext('SMTP port'),\n        hint: gettext('The default SMTP mail server port, e.g. 25, 465 or 587.'),\n        value: 25,\n        validators: {\n          min: 1,\n          max: 65535,\n          required: true,\n          patternType: 'port'\n        }\n      },\n      {\n        type: 'select',\n        name: 'tls',\n        label: gettext('Encryption mode'),\n        value: 'none',\n        store: {\n          data: [\n            ['none', gettext('None')],\n            ['ssl', gettext('SSL/TLS')],\n            ['starttls', gettext('STARTTLS')],\n            ['auto', gettext('Auto')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'sender',\n        label: gettext('Sender email'),\n        value: '',\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'enable' } },\n          patternType: 'email'\n        }\n      },\n      {\n        type: 'checkbox',\n        name: 'authenable',\n        label: gettext('Authentication required'),\n        value: false\n      },\n      {\n        type: 'textInput',\n        name: 'username',\n        label: gettext('User name'),\n        value: '',\n        autocomplete: 'off',\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'falsy', arg0: { prop: 'authenable' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'authenable' } }\n        }\n      },\n      {\n        type: 'passwordInput',\n        name: 'password',\n        label: gettext('Password'),\n        value: '',\n        autocomplete: 'new-password',\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'falsy', arg0: { prop: 'authenable' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'authenable' } }\n        }\n      },\n      {\n        type: 'divider',\n        title: gettext('Recipient')\n      },\n      {\n        type: 'textInput',\n        name: 'primaryemail',\n        label: gettext('Primary email'),\n        value: '',\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'enable' } },\n          patternType: 'email'\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'secondaryemail',\n        label: gettext('Secondary email'),\n        value: '',\n        validators: {\n          patternType: 'email'\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/notification'\n        }\n      },\n      {\n        text: gettext('Test'),\n        enabledConstraint: { operator: 'truthy', arg0: { prop: 'enable' } },\n        execute: {\n          type: 'request',\n          request: {\n            service: 'EmailNotification',\n            method: 'sendTestEmail',\n            params:{},\n            progressMessage: gettext('Please wait, sending a test email ...'),\n            successNotification: gettext(\n              // eslint-disable-next-line max-len\n              'An attempt to send the test email has been made. Please check your mailbox. If the email does not arrive, check any spam folders and also check there are no Postfix related errors in the system log.'\n            )\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  templateUrl: './plugins-datatable-page.component.html',\n  styleUrls: ['./plugins-datatable-page.component.scss']\n})\nexport class PluginsDatatablePageComponent implements OnInit {\n  @ViewChild('pluginInfoTpl', { static: true })\n  public pluginInfoTpl: TemplateRef<any>;\n\n  public config: DatatablePageConfig = {\n    columns: [\n      {\n        name: gettext('Installed'),\n        prop: 'installed',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'checkIcon'\n      },\n      { name: gettext('Name'), prop: 'name', flexGrow: 1, sortable: true, hidden: true },\n      { name: gettext('Version'), prop: 'version', flexGrow: 1, sortable: true, hidden: true },\n      {\n        name: gettext('Section'),\n        prop: 'pluginsection',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          template: '{{ pluginsection | title }}'\n        }\n      },\n      {\n        name: gettext('Architecture'),\n        prop: 'pluginarchitecture',\n        flexGrow: 1,\n        sortable: false,\n        hidden: true,\n        cellTemplateName: 'chip'\n      },\n      {\n        name: gettext('Repository'),\n        prop: 'repository',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      { name: gettext('Abstract'), prop: 'abstract', flexGrow: 1, sortable: true, hidden: true },\n      {\n        name: gettext('Description'),\n        prop: 'extendeddescription',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      {\n        name: gettext('Summary'),\n        prop: 'summary',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      {\n        name: gettext('Size'),\n        prop: 'size',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'binaryUnit'\n      },\n      {\n        name: gettext('Maintainer'),\n        prop: 'maintainer',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      { name: gettext('Homepage'), prop: 'homepage', flexGrow: 1, sortable: true, hidden: true }\n    ],\n    selectionType: 'single',\n    remoteSearching: true,\n    hasSearchField: true,\n    limit: 0,\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'name'\n      },\n      {\n        dir: 'asc',\n        prop: 'pluginsection'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'Plugin',\n        get: {\n          method: 'getList'\n        }\n      }\n    },\n    stateId: 'df5e9c26-202f-11ea-9edc-6b253103fe43',\n    actions: [\n      {\n        type: 'iconButton',\n        icon: 'search',\n        tooltip: gettext('Check for new plugins'),\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Apt',\n            method: 'update',\n            task: true,\n            progressMessage: gettext('Checking for new plugins ...')\n          }\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'mdi:download',\n        tooltip: gettext('Install'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1,\n          constraint: [{ operator: 'falsy', arg0: { prop: 'installed' } }]\n        },\n        confirmationDialogConfig: {\n          template: 'confirmation-critical',\n          message: gettext('Do you really want to install the plugin?')\n        },\n        execute: {\n          type: 'taskDialog',\n          taskDialog: {\n            config: {\n              title: gettext('Install plugin'),\n              startOnInit: true,\n              buttons: {\n                start: {\n                  hidden: true\n                },\n                stop: {\n                  hidden: true\n                }\n              },\n              request: {\n                service: 'Plugin',\n                method: 'install',\n                params: {\n                  packages: ['{{ _selected[0].name }}']\n                }\n              }\n            },\n            successUrl: '/reload'\n          }\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'delete',\n        tooltip: gettext('Uninstall'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1,\n          constraint: [{ operator: 'truthy', arg0: { prop: 'installed' } }]\n        },\n        confirmationDialogConfig: {\n          template: 'confirmation-critical',\n          message: gettext('Do you really want to uninstall the plugin?')\n        },\n        execute: {\n          type: 'taskDialog',\n          taskDialog: {\n            config: {\n              title: gettext('Uninstall plugin'),\n              startOnInit: true,\n              buttons: {\n                start: {\n                  hidden: true\n                },\n                stop: {\n                  hidden: true\n                }\n              },\n              request: {\n                service: 'Plugin',\n                method: 'remove',\n                params: {\n                  packages: ['{{ _selected[0].name }}']\n                }\n              }\n            },\n            successUrl: '/reload'\n          }\n        }\n      }\n    ]\n  };\n\n  ngOnInit(): void {\n    // Append the column that uses a custom template.\n    this.config.columns.unshift({\n      name: gettext('Package Information'),\n      prop: 'name',\n      flexGrow: 3,\n      cellTemplate: this.pluginInfoTpl\n    });\n  }\n}\n","<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>\n\n<ng-template #pluginInfoTpl\n             let-row=\"row\">\n  <div class=\"omv-datatable-cell-package-info\">\n    <div class=\"omv-datatable-cell-header\">\n      <div class=\"omv-datatable-cell-header-text\">\n        <div class=\"omv-font-weight-title omv-font-size-title\">{{ row.name }} {{ row.version }}</div>\n        <div class=\"omv-font-size-subheading-2\">{{ row.summary }}</div>\n      </div>\n      <mat-chip-list *ngIf=\"row.installed\"\n                     class=\"installed\">\n        <mat-chip class=\"omv-background-color-pair-green\"\n                  [selectable]=\"false\"\n                  [disableRipple]=\"true\">\n          {{ 'Installed' | transloco }}\n        </mat-chip>\n      </mat-chip-list>\n    </div>\n    <div *ngIf=\"row.pluginarchitecture.length\"\n         class=\"architecture\">\n      <mat-chip-list>\n        <mat-chip *ngFor=\"let item of row.pluginarchitecture | sort\"\n                  [selectable]=\"false\"\n                  [disableRipple]=\"true\">\n          {{ item }}\n        </mat-chip>\n      </mat-chip-list>\n    </div>\n    <br>\n    <ng-container *ngIf=\"row.extendeddescription\"><span>{{ row.extendeddescription }}</span><br><br></ng-container>\n    <ng-container *ngIf=\"row.pluginsection\"><span>{{ 'Section' | transloco }}: {{ row.pluginsection | titlecase }}</span><br></ng-container>\n    <ng-container *ngIf=\"row.maintainer\"><span>{{ 'Maintainer' | transloco }}: {{ row.maintainer }}</span><br></ng-container>\n    <ng-container *ngIf=\"row.homepage\">\n      <span>\n        {{ 'Homepage' | transloco }}: <a href=\"{{ row.homepage }}\">{{ row.homepage }}</a>\n      </span><br>\n    </ng-container>\n    <ng-container *ngIf=\"row.repository\"><span>{{ 'Repository' | transloco }}: {{ row.repository }}</span><br></ng-container>\n    <ng-container *ngIf=\"row.size\"><span>{{ 'Size' | transloco }}: {{ row.size | binaryUnit }}</span><br></ng-container>\n  </div>\n</ng-template>\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class PowermgmtSettingsFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'PowerMgmt',\n      get: {\n        method: 'get',\n        params:{}\n      },\n      post: {\n        method: 'set',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'checkbox',\n        name: 'cpufreq',\n        label: gettext('Monitoring'),\n        hint: gettext(\n          'Specifies whether to monitor the system status and select the most appropriate CPU level.'\n        ),\n        value: false\n      },\n      {\n        type: 'select',\n        name: 'powerbtn',\n        label: gettext('Power button'),\n        hint: gettext('The action to be done when pressing the power button.'),\n        value: 'nothing',\n        store: {\n          data: [\n            ['nothing', gettext('Nothing')],\n            ['shutdown', gettext('Power Off')],\n            ['standby', gettext('Standby')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'standbymode',\n        label: gettext('Standby mode'),\n        value: 'poweroff',\n        store: {\n          proxy: {\n            service: 'PowerMgmt',\n            get: {\n              method: 'enumerateStandbyModes',\n              params:{}\n            }\n          },\n          sorters: [\n            {\n              dir: 'asc',\n              prop: 'text'\n            }\n          ],\n          assign: {\n            key: 'value',\n            sources: {\n              poweroff: { text: gettext('Power Off') },\n              suspend: { text: gettext('Suspend') },\n              hibernate: { text: gettext('Hibernate') },\n              suspendhybrid: { text: gettext('Hybrid sleep') }\n            }\n          }\n        }\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/powermgmt'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class PowermgmtTaskDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    autoReload: false,\n    stateId: '49d0980c-2594-11ea-a805-bfcb34ee0962',\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'enable'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'PowerMgmt',\n        get: {\n          method: 'getScheduleList',\n          params: {\n            type: ['reboot', 'shutdown', 'standby']\n          }\n        }\n      }\n    },\n    columns: [\n      {\n        name: gettext('Enabled'),\n        prop: 'enable',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'checkIcon'\n      },\n      {\n        name: gettext('Type'),\n        prop: 'type',\n        flexGrow: 1,\n        sortable: true,\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          map: {\n            reboot: { value: gettext('Reboot') },\n            standby: { value: gettext('Standby') },\n            shutdown: { value: gettext('Shutdown') }\n          }\n        }\n      },\n      {\n        name: gettext('Scheduling'),\n        prop: '',\n        flexGrow: 1,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          '{% if execution == \"exactly\" %}' +\n          '{% set _minute = minute %}' +\n          '{% set _hour = hour %}' +\n          '{% set _dayofmonth = dayofmonth %}' +\n          '{% if everynminute %}{% set _minute %}*/{{ minute }}{% endset %}{% endif %}' +\n          '{% if everynhour %}{% set _hour %}*/{{ hour }}{% endset %}{% endif %}' +\n          '{% if everyndayofmonth %}{% set _dayofmonth %}*/{{ dayofmonth }}{% endset %}{% endif %}' +\n          '{{ [_minute, _hour, _dayofmonth, month, dayofweek] | join(\" \") | cron2human }}' +\n          '{% else %}' +\n          '{{ execution | capitalize | translate }}' +\n          '{% endif %}'\n      },\n      {\n        name: gettext('Tags'),\n        prop: 'comment',\n        cellTemplateName: 'chip',\n        cellTemplateConfig: {\n          separator: ','\n        },\n        flexGrow: 1,\n        sortable: true\n      }\n    ],\n    actions: [\n      {\n        template: 'create',\n        execute: {\n          type: 'url',\n          url: '/system/powermgmt/tasks/create'\n        }\n      },\n      {\n        template: 'edit',\n        execute: {\n          type: 'url',\n          url: '/system/powermgmt/tasks/edit/{{ _selected[0].uuid }}'\n        }\n      },\n      {\n        template: 'delete',\n        execute: {\n          type: 'request',\n          request: {\n            service: 'PowerMgmt',\n            method: 'deleteScheduledJob',\n            params: {\n              uuid: '{{ uuid }}'\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class PowermgmtTaskFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'PowerMgmt',\n      get: {\n        method: 'getScheduledJob',\n        params: {\n          uuid: '{{ _routeParams.uuid }}'\n        }\n      },\n      post: {\n        method: 'setScheduledJob'\n      }\n    },\n    fields: [\n      {\n        type: 'confObjUuid'\n      },\n      {\n        type: 'checkbox',\n        name: 'enable',\n        label: gettext('Enabled'),\n        value: true\n      },\n      {\n        type: 'select',\n        name: 'type',\n        label: gettext('Type'),\n        value: 'reboot',\n        store: {\n          data: [\n            ['standby', gettext('Standby')],\n            ['shutdown', gettext('Shutdown')],\n            ['reboot', gettext('Reboot')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'execution',\n        label: gettext('Time of execution'),\n        value: 'exactly',\n        store: {\n          data: [\n            ['exactly', gettext('Certain date')],\n            ['hourly', gettext('Hourly')],\n            ['daily', gettext('Daily')],\n            ['weekly', gettext('Weekly')],\n            ['monthly', gettext('Monthly')],\n            ['yearly', gettext('Yearly')]\n          ]\n        }\n      },\n      {\n        type: 'textInput',\n        name: 'cronexprdesc',\n        disabled: true,\n        submitValue: false,\n        value: '',\n        modifiers: [\n          {\n            type: 'visible',\n            constraint: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' }\n          },\n          {\n            type: 'value',\n            typeConfig:\n              '{% if execution == \"exactly\" %}' +\n              '{% set _minute = minute %}' +\n              '{% set _hour = hour %}' +\n              '{% set _dayofmonth = dayofmonth %}' +\n              '{% if everynminute %}{% set _minute %}*/{{ minute }}{% endset %}{% endif %}' +\n              '{% if everynhour %}{% set _hour %}*/{{ hour }}{% endset %}{% endif %}' +\n              '{% if everyndayofmonth %}{% set _dayofmonth %}*/{{ dayofmonth }}{% endset %}{% endif %}' +\n              '{{ [_minute, _hour, _dayofmonth, month, dayofweek] | join(\" \") | cron2human }}' +\n              '{% endif %}',\n            deps: [\n              'execution',\n              'minute',\n              'everynminute',\n              'hour',\n              'everynhour',\n              'dayofmonth',\n              'everyndayofmonth',\n              'month',\n              'dayofweek'\n            ]\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'select',\n            name: 'minute',\n            label: gettext('Minute'),\n            value: ['{{ moment(\"H:m:ss\") | split(\":\") | get(1) }}'],\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n              }\n            ],\n            validators: {\n              requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n              pattern: {\n                pattern: '^(\\\\*|(([0-9]|[1-5][0-9]),)*([0-9]|[1-5][0-9]))$',\n                errorData: gettext(\n                  'The field should only contain * or a comma separated list of values.'\n                )\n              }\n            },\n            multiple: true,\n            store: {\n              data: [\n                ['*', '*'],\n                ['0', '0'],\n                ['1', '1'],\n                ['2', '2'],\n                ['3', '3'],\n                ['4', '4'],\n                ['5', '5'],\n                ['6', '6'],\n                ['7', '7'],\n                ['8', '8'],\n                ['9', '9'],\n                ['10', '10'],\n                ['11', '11'],\n                ['12', '12'],\n                ['13', '13'],\n                ['14', '14'],\n                ['15', '15'],\n                ['16', '16'],\n                ['17', '17'],\n                ['18', '18'],\n                ['19', '19'],\n                ['20', '20'],\n                ['21', '21'],\n                ['22', '22'],\n                ['23', '23'],\n                ['24', '24'],\n                ['25', '25'],\n                ['26', '26'],\n                ['27', '27'],\n                ['28', '28'],\n                ['29', '29'],\n                ['30', '30'],\n                ['31', '31'],\n                ['32', '32'],\n                ['33', '33'],\n                ['34', '34'],\n                ['35', '35'],\n                ['36', '36'],\n                ['37', '37'],\n                ['38', '38'],\n                ['39', '39'],\n                ['40', '40'],\n                ['41', '41'],\n                ['42', '42'],\n                ['43', '43'],\n                ['44', '44'],\n                ['45', '45'],\n                ['46', '46'],\n                ['47', '47'],\n                ['48', '48'],\n                ['49', '49'],\n                ['50', '50'],\n                ['51', '51'],\n                ['52', '52'],\n                ['53', '53'],\n                ['54', '54'],\n                ['55', '55'],\n                ['56', '56'],\n                ['57', '57'],\n                ['58', '58'],\n                ['59', '59']\n              ]\n            }\n          },\n          {\n            type: 'checkbox',\n            name: 'everynminute',\n            label: gettext('Every N minute'),\n            value: false,\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: {\n                  operator: 'or',\n                  arg0: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' },\n                  arg1: {\n                    operator: 'or',\n                    arg0: {\n                      operator: '<>',\n                      arg0: {\n                        operator: 'length',\n                        arg0: { prop: 'minute' }\n                      },\n                      arg1: 1\n                    },\n                    arg1: {\n                      operator: 'in',\n                      arg0: { value: '*' },\n                      arg1: { prop: 'minute' }\n                    }\n                  }\n                }\n              },\n              {\n                type: 'unchecked',\n                opposite: false,\n                constraint: {\n                  operator: '<>',\n                  arg0: {\n                    operator: 'length',\n                    arg0: { prop: 'minute' }\n                  },\n                  arg1: 1\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'select',\n            name: 'hour',\n            label: gettext('Hour'),\n            value: ['{{ moment(\"H:m:ss\") | split(\":\") | get(0) }}'],\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n              }\n            ],\n            validators: {\n              requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n              pattern: {\n                pattern: '^(\\\\*|(([0-9]|1[0-9]|2[0-3]),)*([0-9]|1[0-9]|2[0-3]))$',\n                errorData: gettext(\n                  'The field should only contain * or a comma separated list of values.'\n                )\n              }\n            },\n            multiple: true,\n            store: {\n              data: [\n                ['*', '*'],\n                ['0', '0'],\n                ['1', '1'],\n                ['2', '2'],\n                ['3', '3'],\n                ['4', '4'],\n                ['5', '5'],\n                ['6', '6'],\n                ['7', '7'],\n                ['8', '8'],\n                ['9', '9'],\n                ['10', '10'],\n                ['11', '11'],\n                ['12', '12'],\n                ['13', '13'],\n                ['14', '14'],\n                ['15', '15'],\n                ['16', '16'],\n                ['17', '17'],\n                ['18', '18'],\n                ['19', '19'],\n                ['20', '20'],\n                ['21', '21'],\n                ['22', '22'],\n                ['23', '23']\n              ]\n            }\n          },\n          {\n            type: 'checkbox',\n            name: 'everynhour',\n            label: gettext('Every N hour'),\n            value: false,\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: {\n                  operator: 'or',\n                  arg0: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' },\n                  arg1: {\n                    operator: 'or',\n                    arg0: {\n                      operator: '<>',\n                      arg0: {\n                        operator: 'length',\n                        arg0: { prop: 'hour' }\n                      },\n                      arg1: 1\n                    },\n                    arg1: {\n                      operator: 'in',\n                      arg0: { value: '*' },\n                      arg1: { prop: 'hour' }\n                    }\n                  }\n                }\n              },\n              {\n                type: 'unchecked',\n                opposite: false,\n                constraint: {\n                  operator: '<>',\n                  arg0: {\n                    operator: 'length',\n                    arg0: { prop: 'hour' }\n                  },\n                  arg1: 1\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'container',\n        fields: [\n          {\n            type: 'select',\n            name: 'dayofmonth',\n            label: gettext('Day of month'),\n            value: ['*'],\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n              }\n            ],\n            validators: {\n              requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n              pattern: {\n                pattern: '^(\\\\*|(([1-9]|[12][0-9]|3[01]),)*([1-9]|[12][0-9]|3[01]))$',\n                errorData: gettext(\n                  'The field should only contain * or a comma separated list of values.'\n                )\n              }\n            },\n            multiple: true,\n            store: {\n              data: [\n                ['*', '*'],\n                ['1', '1'],\n                ['2', '2'],\n                ['3', '3'],\n                ['4', '4'],\n                ['5', '5'],\n                ['6', '6'],\n                ['7', '7'],\n                ['8', '8'],\n                ['9', '9'],\n                ['10', '10'],\n                ['11', '11'],\n                ['12', '12'],\n                ['13', '13'],\n                ['14', '14'],\n                ['15', '15'],\n                ['16', '16'],\n                ['17', '17'],\n                ['18', '18'],\n                ['19', '19'],\n                ['20', '20'],\n                ['21', '21'],\n                ['22', '22'],\n                ['23', '23'],\n                ['24', '24'],\n                ['25', '25'],\n                ['26', '26'],\n                ['27', '27'],\n                ['28', '28'],\n                ['29', '29'],\n                ['30', '30'],\n                ['31', '31']\n              ]\n            }\n          },\n          {\n            type: 'checkbox',\n            name: 'everyndayofmonth',\n            label: gettext('Every N day of month'),\n            value: false,\n            modifiers: [\n              {\n                type: 'disabled',\n                constraint: {\n                  operator: 'or',\n                  arg0: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' },\n                  arg1: {\n                    operator: 'or',\n                    arg0: {\n                      operator: '<>',\n                      arg0: {\n                        operator: 'length',\n                        arg0: { prop: 'dayofmonth' }\n                      },\n                      arg1: 1\n                    },\n                    arg1: {\n                      operator: 'in',\n                      arg0: { value: '*' },\n                      arg1: { prop: 'dayofmonth' }\n                    }\n                  }\n                }\n              },\n              {\n                type: 'unchecked',\n                opposite: false,\n                constraint: {\n                  operator: '<>',\n                  arg0: {\n                    operator: 'length',\n                    arg0: { prop: 'dayofmonth' }\n                  },\n                  arg1: 1\n                }\n              }\n            ]\n          }\n        ]\n      },\n      {\n        type: 'select',\n        name: 'month',\n        label: gettext('Month'),\n        value: ['*'],\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n          pattern: {\n            pattern: '^(\\\\*|(([1-9]|1[0-2]),)*([1-9]|1[0-2]))$',\n            errorData: gettext(\n              'The field should only contain * or a comma separated list of values.'\n            )\n          }\n        },\n        multiple: true,\n        store: {\n          data: [\n            ['*', '*'],\n            ['1', gettext('January')],\n            ['2', gettext('February')],\n            ['3', gettext('March')],\n            ['4', gettext('April')],\n            ['5', gettext('May')],\n            ['6', gettext('June')],\n            ['7', gettext('July')],\n            ['8', gettext('August')],\n            ['9', gettext('September')],\n            ['10', gettext('October')],\n            ['11', gettext('November')],\n            ['12', gettext('December')]\n          ]\n        }\n      },\n      {\n        type: 'select',\n        name: 'dayofweek',\n        label: gettext('Day of week'),\n        value: ['*'],\n        modifiers: [\n          {\n            type: 'disabled',\n            constraint: { operator: 'ne', arg0: { prop: 'execution' }, arg1: 'exactly' }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'eq', arg0: { prop: 'execution' }, arg1: 'exactly' },\n          pattern: {\n            pattern: '^(\\\\*|([1-7],)*[1-7])$',\n            errorData: gettext(\n              'The field should only contain * or a comma separated list of values.'\n            )\n          }\n        },\n        multiple: true,\n        store: {\n          data: [\n            ['*', '*'],\n            ['1', gettext('Monday')],\n            ['2', gettext('Tuesday')],\n            ['3', gettext('Wednesday')],\n            ['4', gettext('Thursday')],\n            ['5', gettext('Friday')],\n            ['6', gettext('Saturday')],\n            ['7', gettext('Sunday')]\n          ]\n        }\n      },\n      {\n        type: 'tagInput',\n        name: 'comment',\n        label: gettext('Tags'),\n        value: ''\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        execute: {\n          type: 'url',\n          url: '/system/powermgmt/tasks'\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/powermgmt/tasks'\n        }\n      }\n    ]\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { NavigationPageComponent } from '~/app/core/pages/navigation-page/navigation-page.component';\nimport { RouteConfigService } from '~/app/core/services/route-config.service';\nimport { SshCertificateCreateFormPageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-create-form-page.component';\nimport { SshCertificateDatatablePageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-datatable-page.component';\nimport { SshCertificateEditFormPageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-edit-form-page.component';\nimport { SshCertificateImportFormPageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-import-form-page.component';\nimport { SslCertificateDatatablePageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-datatable-page.component';\nimport { SslCertificateDetailsTextPageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-details-text-page.component';\nimport { SslCertificateFormPageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-form-page.component';\nimport { SslCertificateImportFormPageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-import-form-page.component';\nimport { CronTaskDatatablePageComponent } from '~/app/pages/system/cron/cron-task-datatable-page.component';\nimport { CronTaskFormPageComponent } from '~/app/pages/system/cron/cron-task-form-page.component';\nimport { DateTimeFormPageComponent } from '~/app/pages/system/date-time/date-time-form-page.component';\nimport { MonitoringFormPageComponent } from '~/app/pages/system/monitoring/monitoring-form-page.component';\nimport { NotificationSelectionListPageComponent } from '~/app/pages/system/notification/notification-selection-list-page.component';\nimport { NotificationSettingsFormPageComponent } from '~/app/pages/system/notification/notification-settings-form-page.component';\nimport { PluginsDatatablePageComponent } from '~/app/pages/system/plugins/plugins-datatable-page.component';\nimport { PowermgmtSettingsFormPageComponent } from '~/app/pages/system/powermgmt/powermgmt-settings-form-page.component';\nimport { PowermgmtTaskDatatablePageComponent } from '~/app/pages/system/powermgmt/powermgmt-task-datatable-page.component';\nimport { PowermgmtTaskFormPageComponent } from '~/app/pages/system/powermgmt/powermgmt-task-form-page.component';\nimport { UpdateDatatablePageComponent } from '~/app/pages/system/updates/update-datatable-page.component';\nimport { UpdateSettingsFormPageComponent } from '~/app/pages/system/updates/update-settings-form-page.component';\nimport { WorkbenchFormPageComponent } from '~/app/pages/system/workbench/workbench-form-page.component';\nimport { IsDirtyGuardService } from '~/app/shared/services/is-dirty-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NavigationPageComponent\n  },\n  {\n    path: 'workbench',\n    component: WorkbenchFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Workbench'),\n      notificationTitle: gettext('Updated workbench settings.'),\n      editing: true\n    }\n  },\n  {\n    path: 'certificate',\n    data: { title: gettext('Certificates') },\n    children: [\n      {\n        path: '',\n        component: NavigationPageComponent\n      },\n      {\n        path: 'ssl',\n        data: { title: gettext('SSL') },\n        children: [\n          { path: '', component: SslCertificateDatatablePageComponent },\n          {\n            path: 'create',\n            component: SslCertificateFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Create'),\n              notificationTitle: gettext('Created SSL certificate.')\n            }\n          },\n          {\n            path: 'detail/:uuid',\n            component: SslCertificateDetailsTextPageComponent,\n            data: { title: gettext('Details') }\n          },\n          {\n            path: 'import',\n            component: SslCertificateImportFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Import'),\n              notificationTitle: gettext('Imported SSL certificate.')\n            }\n          }\n        ]\n      },\n      {\n        path: 'ssh',\n        data: { title: gettext('SSH') },\n        children: [\n          { path: '', component: SshCertificateDatatablePageComponent },\n          {\n            path: 'create',\n            component: SshCertificateCreateFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Create'),\n              notificationTitle: gettext('Created SSH certificate.')\n            }\n          },\n          {\n            path: 'edit/:uuid',\n            component: SshCertificateEditFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Edit'),\n              notificationTitle: gettext('Updated SSH certificate.'),\n              editing: true\n            }\n          },\n          {\n            path: 'import',\n            component: SshCertificateImportFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Import'),\n              notificationTitle: gettext('Imported SSH certificate.')\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: 'monitoring',\n    component: MonitoringFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Monitoring'),\n      notificationTitle: gettext('Updated monitoring settings.'),\n      editing: true\n    }\n  },\n  {\n    path: 'notification',\n    data: { title: gettext('Notification') },\n    children: [\n      {\n        path: '',\n        component: NavigationPageComponent\n      },\n      {\n        path: 'settings',\n        component: NotificationSettingsFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Settings'),\n          notificationTitle: gettext('Updated notification settings.'),\n          editing: true\n        }\n      },\n      {\n        path: 'events',\n        component: NotificationSelectionListPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Events'),\n          notificationTitle: gettext('Updated notification event settings.')\n        }\n      }\n    ]\n  },\n  {\n    path: 'date-time',\n    component: DateTimeFormPageComponent,\n    canDeactivate: [IsDirtyGuardService],\n    data: {\n      title: gettext('Date & Time'),\n      notificationTitle: gettext('Updated date & time settings.'),\n      editing: true\n    }\n  },\n  {\n    path: 'powermgmt',\n    data: { title: gettext('Power Management') },\n    children: [\n      {\n        path: '',\n        component: NavigationPageComponent\n      },\n      {\n        path: 'settings',\n        component: PowermgmtSettingsFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Settings'),\n          notificationTitle: gettext('Updated power management settings.'),\n          editing: true\n        }\n      },\n      {\n        path: 'tasks',\n        data: { title: gettext('Scheduled Tasks') },\n        children: [\n          { path: '', component: PowermgmtTaskDatatablePageComponent },\n          {\n            path: 'create',\n            component: PowermgmtTaskFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Create'),\n              notificationTitle: gettext('Created scheduled task.'),\n              editing: false\n            }\n          },\n          {\n            path: 'edit/:uuid',\n            component: PowermgmtTaskFormPageComponent,\n            canDeactivate: [IsDirtyGuardService],\n            data: {\n              title: gettext('Edit'),\n              notificationTitle: gettext('Updated scheduled task.'),\n              editing: true\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: 'cron',\n    data: { title: gettext('Scheduled Tasks') },\n    children: [\n      { path: '', component: CronTaskDatatablePageComponent },\n      {\n        path: 'create',\n        component: CronTaskFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Create'),\n          editing: false,\n          notificationTitle: gettext('Created scheduled task.')\n        }\n      },\n      {\n        path: 'edit/:uuid',\n        component: CronTaskFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Edit'),\n          editing: true,\n          notificationTitle: gettext('Updated scheduled task.')\n        }\n      }\n    ]\n  },\n  {\n    path: 'updatemgmt',\n    data: { title: gettext('Update Management') },\n    children: [\n      {\n        path: '',\n        component: NavigationPageComponent\n      },\n      {\n        path: 'updates',\n        component: UpdateDatatablePageComponent,\n        data: { title: gettext('Updates') }\n      },\n      {\n        path: 'settings',\n        component: UpdateSettingsFormPageComponent,\n        canDeactivate: [IsDirtyGuardService],\n        data: {\n          title: gettext('Settings'),\n          notificationTitle: gettext('Updated update management settings.'),\n          editing: true\n        }\n      }\n    ]\n  },\n  {\n    path: 'plugins',\n    component: PluginsDatatablePageComponent,\n    data: { title: gettext('Plugins') }\n  }\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n  providers: [\n    {\n      provide: ROUTES,\n      multi: true,\n      useFactory: (routeConfigService: RouteConfigService): Routes => {\n        routeConfigService.inject('system', routes);\n        return routes;\n      },\n      deps: [RouteConfigService]\n    }\n  ]\n})\nexport class SystemRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslocoModule } from '@ngneat/transloco';\n\nimport { CoreModule } from '~/app/core/core.module';\nimport { MaterialModule } from '~/app/material.module';\nimport { SshCertificateCreateFormPageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-create-form-page.component';\nimport { SshCertificateDatatablePageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-datatable-page.component';\nimport { SshCertificateEditFormPageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-edit-form-page.component';\nimport { SshCertificateImportFormPageComponent } from '~/app/pages/system/certificates/ssh/ssh-certificate-import-form-page.component';\nimport { SslCertificateDatatablePageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-datatable-page.component';\nimport { SslCertificateDetailsTextPageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-details-text-page.component';\nimport { SslCertificateFormPageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-form-page.component';\nimport { SslCertificateImportFormPageComponent } from '~/app/pages/system/certificates/ssl/ssl-certificate-import-form-page.component';\nimport { CronTaskDatatablePageComponent } from '~/app/pages/system/cron/cron-task-datatable-page.component';\nimport { CronTaskFormPageComponent } from '~/app/pages/system/cron/cron-task-form-page.component';\nimport { DateTimeFormPageComponent } from '~/app/pages/system/date-time/date-time-form-page.component';\nimport { MonitoringFormPageComponent } from '~/app/pages/system/monitoring/monitoring-form-page.component';\nimport { NotificationSelectionListPageComponent } from '~/app/pages/system/notification/notification-selection-list-page.component';\nimport { NotificationSettingsFormPageComponent } from '~/app/pages/system/notification/notification-settings-form-page.component';\nimport { PluginsDatatablePageComponent } from '~/app/pages/system/plugins/plugins-datatable-page.component';\nimport { PowermgmtSettingsFormPageComponent } from '~/app/pages/system/powermgmt/powermgmt-settings-form-page.component';\nimport { PowermgmtTaskDatatablePageComponent } from '~/app/pages/system/powermgmt/powermgmt-task-datatable-page.component';\nimport { PowermgmtTaskFormPageComponent } from '~/app/pages/system/powermgmt/powermgmt-task-form-page.component';\nimport { SystemRoutingModule } from '~/app/pages/system/system-routing.module';\nimport { UpdateDatatablePageComponent } from '~/app/pages/system/updates/update-datatable-page.component';\nimport { UpdateSettingsFormPageComponent } from '~/app/pages/system/updates/update-settings-form-page.component';\nimport { WorkbenchFormPageComponent } from '~/app/pages/system/workbench/workbench-form-page.component';\nimport { SharedModule } from '~/app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    WorkbenchFormPageComponent,\n    SshCertificateDatatablePageComponent,\n    SslCertificateDatatablePageComponent,\n    MonitoringFormPageComponent,\n    DateTimeFormPageComponent,\n    SslCertificateFormPageComponent,\n    SslCertificateImportFormPageComponent,\n    SslCertificateDetailsTextPageComponent,\n    SshCertificateCreateFormPageComponent,\n    SshCertificateEditFormPageComponent,\n    SshCertificateImportFormPageComponent,\n    NotificationSettingsFormPageComponent,\n    NotificationSelectionListPageComponent,\n    UpdateDatatablePageComponent,\n    PluginsDatatablePageComponent,\n    UpdateSettingsFormPageComponent,\n    PowermgmtSettingsFormPageComponent,\n    PowermgmtTaskDatatablePageComponent,\n    PowermgmtTaskFormPageComponent,\n    CronTaskDatatablePageComponent,\n    CronTaskFormPageComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    MaterialModule,\n    SharedModule,\n    SystemRoutingModule,\n    TranslocoModule\n  ]\n})\nexport class SystemModule {}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { DatatablePageConfig } from '~/app/core/components/intuition/models/datatable-page-config.type';\n\n@Component({\n  template: '<omv-intuition-datatable-page [config]=\"this.config\"></omv-intuition-datatable-page>'\n})\nexport class UpdateDatatablePageComponent {\n  public config: DatatablePageConfig = {\n    columns: [\n      {\n        name: gettext('Package Information'),\n        prop: '',\n        flexGrow: 1,\n        cellTemplateName: 'template',\n        cellTemplateConfig:\n          '<div>' +\n          '  <div class=\"omv-display-flex omv-flex-column\">' +\n          '    <div class=\"omv-font-weight-title omv-font-size-title\">{{ name }} {{ version }}</div>' +\n          '    <div class=\"omv-font-size-subheading-2\">{{ summary }}</div>' +\n          '  </div>' +\n          '  <br>' +\n          '{% if extendeddescription %}  <span>{{ extendeddescription }}</span><br><br>{% endif %}' +\n          '{% if maintainer %}  <span>{{ \"Maintainer\" | translate }}: {{ maintainer }}</span><br>{% endif %}' +\n          // eslint-disable-next-line max-len\n          '{% if homepage %}  <span>{{ \"Homepage\" | translate }}: <a href=\"{{ homepage }}\">{{ homepage }}</a></span><br>{% endif %}' +\n          '{% if repository %}  <span>{{ \"Repository\" | translate }}: {{ repository }}</span><br>{% endif %}' +\n          '{% if size %}  <span>{{ \"Size\" | translate }}: {{ size | binaryunit }}</span><br>{% endif %}' +\n          '</div>'\n      },\n      { name: gettext('Name'), prop: 'name', flexGrow: 1, sortable: true, hidden: true },\n      { name: gettext('Version'), prop: 'version', flexGrow: 1, sortable: true, hidden: true },\n      {\n        name: gettext('Repository'),\n        prop: 'repository',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      { name: gettext('Abstract'), prop: 'abstract', flexGrow: 1, sortable: true, hidden: true },\n      {\n        name: gettext('Description'),\n        prop: 'extendeddescription',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      {\n        name: gettext('Size'),\n        prop: 'size',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true,\n        cellTemplateName: 'binaryUnit'\n      },\n      {\n        name: gettext('Maintainer'),\n        prop: 'maintainer',\n        flexGrow: 1,\n        sortable: true,\n        hidden: true\n      },\n      { name: gettext('Homepage'), prop: 'homepage', flexGrow: 1, sortable: true, hidden: true }\n    ],\n    selectionType: 'single',\n    limit: 0,\n    sorters: [\n      {\n        dir: 'asc',\n        prop: 'name'\n      }\n    ],\n    store: {\n      proxy: {\n        service: 'Apt',\n        get: {\n          method: 'enumerateUpgraded'\n        }\n      }\n    },\n    stateId: '6b78ea5a-1fda-11ea-a62d-23f52be9bf23',\n    actions: [\n      {\n        type: 'iconButton',\n        icon: 'search',\n        tooltip: gettext('Check for new updates'),\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Apt',\n            method: 'update',\n            task: true,\n            progressMessage: gettext(\n              'The repository will be checked for new, removed or upgraded software packages.'\n            )\n          }\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'mdi:download',\n        tooltip: gettext('Install updates'),\n        hasBadge: 'numDataItems',\n        enabledConstraints: {\n          hasData: true\n        },\n        confirmationDialogConfig: {\n          template: 'confirmation-critical',\n          message: gettext('All packages will be upgraded. Do you want to proceed?')\n        },\n        execute: {\n          type: 'taskDialog',\n          taskDialog: {\n            config: {\n              title: gettext('Upgrade system'),\n              startOnInit: true,\n              buttons: {\n                start: {\n                  hidden: true\n                },\n                stop: {\n                  hidden: true\n                },\n                close: {\n                  dialogResult: true\n                }\n              },\n              request: {\n                service: 'Apt',\n                method: 'upgrade'\n              }\n            },\n            successUrl: '/reload'\n          }\n        }\n      },\n      {\n        type: 'iconButton',\n        icon: 'details',\n        tooltip: gettext('Show changelog'),\n        enabledConstraints: {\n          minSelected: 1,\n          maxSelected: 1\n        },\n        execute: {\n          type: 'taskDialog',\n          taskDialog: {\n            config: {\n              title: gettext('Changelog'),\n              autoScroll: false,\n              startOnInit: true,\n              showCompletion: false,\n              buttons: {\n                start: {\n                  hidden: true\n                },\n                stop: {\n                  hidden: true\n                }\n              },\n              request: {\n                service: 'Apt',\n                method: 'getChangeLog',\n                params: {\n                  filename: '{{ _selected[0].filename }}'\n                }\n              }\n            }\n          }\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class UpdateSettingsFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'Apt',\n      get: {\n        method: 'getSettings',\n        params:{}\n      },\n      post: {\n        method: 'setSettings',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'paragraph',\n        title: gettext('Install updates from')\n      },\n      {\n        type: 'checkbox',\n        name: 'proposed',\n        label: gettext('Pre-release updates'),\n        value: false\n      },\n      {\n        type: 'checkbox',\n        name: 'partner',\n        label: gettext('Community-maintained updates'),\n        value: false\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit',\n        confirmationDialogConfig: {\n          template: 'confirmation',\n          message: gettext(\n            'The information about available software is out-of-date. Do you want to reload this information?'\n          )\n        },\n        execute: {\n          type: 'request',\n          request: {\n            service: 'Apt',\n            method: 'update',\n            task: true,\n            progressMessage: gettext(\n              'The repository will be checked for new, removed or upgraded software packages.'\n            ),\n            successUrl: '/system/updatemgmt/updates'\n          }\n        }\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system/updatemgmt'\n        }\n      }\n    ]\n  };\n}\n","/**\n * This file is part of OpenMediaVault.\n *\n * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3\n * @author    Volker Theile <volker.theile@openmediavault.org>\n * @copyright Copyright (c) 2009-2024 Volker Theile\n *\n * OpenMediaVault is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * OpenMediaVault is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n */\nimport { Component } from '@angular/core';\nimport { marker as gettext } from '@ngneat/transloco-keys-manager/marker';\n\nimport { FormPageConfig } from '~/app/core/components/intuition/models/form-page-config.type';\nimport { BaseFormPageComponent } from '~/app/pages/base-page-component';\n\n@Component({\n  template: '<omv-intuition-form-page [config]=\"this.config\"></omv-intuition-form-page>'\n})\nexport class WorkbenchFormPageComponent extends BaseFormPageComponent {\n  public config: FormPageConfig = {\n    request: {\n      service: 'WebGui',\n      get: {\n        method: 'getSettings',\n        params:{}\n      },\n      post: {\n        method: 'setSettings',\n        params:{}\n      }\n    },\n    fields: [\n      {\n        type: 'numberInput',\n        name: 'port',\n        label: gettext('Port'),\n        value: 80,\n        validators: {\n          min: 0,\n          max: 65535,\n          required: true,\n          patternType: 'port'\n        }\n      },\n      {\n        type: 'select',\n        name: 'timeout',\n        label: gettext('Auto logout'),\n        hint: gettext('Close the session on inactivity after the specified time.'),\n        value: 5,\n        store: {\n          data: [\n            {\n              text: gettext('Disabled'),\n              value: 0\n            },\n            {\n              text: gettext('1 minute'),\n              value: 1\n            },\n            {\n              text: gettext('2 minutes'),\n              value: 2\n            },\n            {\n              text: gettext('3 minutes'),\n              value: 3\n            },\n            {\n              text: gettext('4 minutes'),\n              value: 4\n            },\n            {\n              text: gettext('5 minutes'),\n              value: 5\n            },\n            {\n              text: gettext('10 minutes'),\n              value: 10\n            },\n            {\n              text: gettext('15 minutes'),\n              value: 15\n            },\n            {\n              text: gettext('30 minutes'),\n              value: 30\n            },\n            {\n              text: gettext('60 minutes'),\n              value: 60\n            },\n            {\n              text: gettext('1 day'),\n              value: 1440\n            }\n          ]\n        }\n      },\n      {\n        type: 'divider',\n        title: gettext('Secure connection')\n      },\n      {\n        type: 'checkbox',\n        name: 'enablessl',\n        label: gettext('SSL/TLS enabled'),\n        value: false\n      },\n      {\n        type: 'sslCertSelect',\n        name: 'sslcertificateref',\n        label: gettext('Certificate'),\n        hasEmptyOption: true,\n        value: '',\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'enablessl' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'enablessl' } }\n        }\n      },\n      {\n        type: 'numberInput',\n        name: 'sslport',\n        label: gettext('Port'),\n        value: 443,\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'enablessl' } }\n          }\n        ],\n        validators: {\n          requiredIf: { operator: 'truthy', arg0: { prop: 'enablessl' } },\n          min: 0,\n          max: 65535,\n          patternType: 'port'\n        }\n      },\n      {\n        type: 'checkbox',\n        name: 'forcesslonly',\n        label: gettext('Force SSL/TLS'),\n        hint: gettext('Force secure connection only.'),\n        value: false,\n        modifiers: [\n          {\n            type: 'enabled',\n            constraint: { operator: 'truthy', arg0: { prop: 'enablessl' } }\n          }\n        ]\n      }\n    ],\n    buttons: [\n      {\n        template: 'submit'\n      },\n      {\n        template: 'cancel',\n        execute: {\n          type: 'url',\n          url: '/system'\n        }\n      }\n    ]\n  };\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}